Solver: gpt4-text
 = = = = = = = = = = = = starting new task: `ROT Details [m=50] rocstories - 0 - 99` = = = = = = = = = = = = 
First instance id: 32971
instance_id: 32980 <-> row_number: 9
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4], 'rot-categorization': ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'social-norms|description', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms'], 'rot-moral-foundations': ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition'], 'rot-judgment': ["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0], 'fwd-agree': [2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'You can strive to excel and surpass others in competition.')
Add text `You can strive to excel and surpass others in competition.` to this text input: <input type="text" class="text" name="rot-rewrite" value="You don't have to let other people beat you in a competition." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['You can strive to excel and surpass others in competition.']
 visible_values : ['You can strive to excel and surpass others in competition.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition']`
----> answers: `['having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition']` - type: `<class 'list'>`
----> baseline_answer: `You can strive to excel and surpass others in competition.` - type: `<class 'str'>`
 --> scores:  0.4000000000000001
----> per-field score: 0.4000000000000001
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"]`
----> answers: `["isn't required", "You don't have to", "it's isn't required", 'okay', "You shouldn't", "don't have to", "it's not expected", 'expected', "Don't have to", "don't", "you don't have to"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.18461538461538465
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0], 'text': [0.4000000000000001, 0.0]}
instance_id: 32971 <-> row_number: 0
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3], 'rot-categorization': ['social-norms|advice', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'social-norms|description', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms|advice', 'advice', 'morality-ethics|description', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'social-norms', 'social-norms|description', 'description', 'morality-ethics|social-norms', 'social-norms|description', 'description', 'advice|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'social-norms|description', 'description', 'description', 'social-norms|description', 'social-norms', 'advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.'], 'rot-judgment': ['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should'], 'agency-fwd': ['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0], 'fwd-agree': [4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: It seems like the HTML input for modification and its value were not completely provided. Without the specific value to select for the radio input "char-involved-general", I can't generate an accurate command.

If you provide the full details or specify which character (e.g., narrator) to select, I can generate the correct command for you.
Failed to execute an action It seems like the HTML input for modification and its value were not completely provided. Without the specific value to select for the radio input "char-involved-general", I can't generate an accurate command.

If you provide the full details or specify which character (e.g., narrator) to select, I can generate the correct command for you., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'Expect to go to jail if you break the law.')
Add text `Expect to go to jail if you break the law.` to this text input: <input type="text" class="text" name="rot-rewrite" value="Expect to go to jail if you break the law." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


If you intended a different value for "action-fwd-good" that wasn't provided in your message, please replace '-2' with the correct value in the command above.
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


If you intended a different value for "action-fwd-good" that wasn't provided in your message, please replace '-2' with the correct value in the command above., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Expect to go to jail if you break the law.']
 visible_values : ['Expect to go to jail if you break the law.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.']`
----> answers: `['going to jail when you break the law', 'Going to jail if you break the law', 'going to jail if you break the law', 'going to jail when breaking the law.', 'Going to jail when you break the law', 'expecting to go to jail when you break the law', 'breaking the law.', 'if you are breaking the law.', 'Expecting to go to jail when you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'breaking the law', 'going to jail if breaking the law.']` - type: `<class 'list'>`
----> baseline_answer: `Expect to go to jail if you break the law.` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should']`
----> answers: `['expect to', "it's expected", 'is expected', 'Expect to', 'It is expected', 'should', 'Its expected', 'expecting', 'Expected', 'You should', 'expect to go to jail', "It's expected", 'Expect to go to jail', 'expected', 'you should', 'Expect', 'expect']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.23076923076923078
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0]}
instance_id: 32978 <-> row_number: 7
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3], 'rot-categorization': ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'morality-ethics', 'description', 'social-norms|description', 'advice', 'description', 'description', 'social-norms|advice', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['loyalty-betrayal|authority-subversion', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|loyalty-betrayal|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'authority-subversion', 'fairness-cheating|authority-subversion', 'care-harm|authority-subversion', '', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating|authority-subversion', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'loyalty-betrayal|authority-subversion', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', 'authority-subversion', 'fairness-cheating|loyalty-betrayal|authority-subversion', '', 'care-harm|authority-subversion', '', 'loyalty-betrayal|authority-subversion', 'loyalty-betrayal|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.'], 'rot-judgment': ["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.')
Add text `It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's hurtful for  a parent to enroll a child in classes without permission." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text value')
Add text `Your desired text value` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.']
 visible_values : ['It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text value']
 visible_values : ['Your desired text value']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.']`
----> answers: `['a parent  enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'Enrolling children in classes without permission.', 'parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'enrolling your child in classes without permission.', 'enrolling your child in classes without permission', 'being a parent and enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission']` - type: `<class 'list'>`
----> baseline_answer: `It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.` - type: `<class 'str'>`
 --> scores:  0.72
----> per-field score: 0.72
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"]`
----> answers: `["It's hurtful", "it's hurtful", "It's hurtful.", "It's wrong", 'hurtful']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.28615384615384615
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0]}
instance_id: 32976 <-> row_number: 5
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3], 'rot-categorization': ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|authority-subversion', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'care-harm|authority-subversion', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|authority-subversion', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'loyalty-betrayal|authority-subversion', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation'], 'char-involved-general': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'rot-rewrite': ['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.'], 'rot-judgment': ["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal'], 'fwd-pressure': [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0], 'char-involved-fwd': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'fwd-hypothetical': ['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', ''], 'n-characters': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is not suitable for a parent to assist a teenage boy in showering.')
Add text `It is not suitable for a parent to assist a teenage boy in showering.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's inappropriate for a parent to help a teenage boy shower." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is not suitable for a parent to assist a teenage boy in showering.']
 visible_values : ['It is not suitable for a parent to assist a teenage boy in showering.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.']`
----> answers: `['helping your teenage boy shower.', 'helping your teenage son shower.', 'for a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'being a parent and helping a teenage boy shower.', 'a parent  helping a teenage boy shower.', "helping one's teenage boy shower.", 'a parent to helping a teenage boy shower.', 'helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping teenage boys shower', "helping a teenage boy shower when you're a parent.", 'Parents helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower as a parent', 'helping your teenage son take a shower', 'A parent helping a teenage boy shower.']` - type: `<class 'list'>`
----> baseline_answer: `It is not suitable for a parent to assist a teenage boy in showering.` - type: `<class 'str'>`
 --> scores:  0.6363636363636364
----> per-field score: 0.6363636363636364
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"]`
----> answers: `["it's inappropriate", "It's inappropriate for", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate.", 'inappropriate']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', '']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.5104895104895105
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0]}
instance_id: 32979 <-> row_number: 8
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2], 'rot-categorization': ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|description', 'social-norms|description', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'description', 'morality-ethics|advice', 'social-norms', 'social-norms'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol'], 'rot-judgment': ["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'fwd-agree': [2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')


This is assuming you wanted to select the 'narrator' as the involved character based on the provided option. If you intended to choose another character (which seems to have been included in the cut-off part), you would replace `'char-0'` with the appropriate value corresponding to that character (`'char-1'`, '`char-2'`, etc., as per your specific needs).
Failed to execute an action self.actions.modify_radio('char-involved-general', 'char-0')


This is assuming you wanted to select the 'narrator' as the involved character based on the provided option. If you intended to choose another character (which seems to have been included in the cut-off part), you would replace `'char-0'` with the appropriate value corresponding to that character (`'char-1'`, '`char-2'`, etc., as per your specific needs)., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', "It's okay to carry your pet in public as a status symbol")
Add text `It's okay to carry your pet in public as a status symbol` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's okay to carry your pet in public as a status symbol" id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's okay to carry your pet in public as a status symbol"]
 visible_values : ["It's okay to carry your pet in public as a status symbol"]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol']`
----> answers: `['carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public']` - type: `<class 'list'>`
----> baseline_answer: `It's okay to carry your pet in public as a status symbol` - type: `<class 'str'>`
 --> scores:  0.8181818181818181
----> per-field score: 0.8181818181818181
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"]`
----> answers: `["It's okay", 'Its okay', 'okay', "it's okay", 'ok', "it's ok"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.2167832167832168
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0]}
instance_id: 32975 <-> row_number: 4
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'morality-ethics|advice', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'morality-ethics|advice', 'social-norms|advice', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms'], 'rot-moral-foundations': ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'loyalty-betrayal|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|authority-subversion', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you'], 'rot-judgment': ["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s disrespectful to feel embarrassment towards individuals who care for you.')
Add text `It's disrespectful to feel embarrassment towards individuals who care for you.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's rude to be ashamed of people that love you." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


This command selects the radio button for "Very bad" with a value of "-2" for the input named "action-fwd-good".
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


This command selects the radio button for "Very bad" with a value of "-2" for the input named "action-fwd-good"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's disrespectful to feel embarrassment towards individuals who care for you."]
 visible_values : ["It's disrespectful to feel embarrassment towards individuals who care for you."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you']`
----> answers: `['being ashamed of people that love you', 'being ashamed of people that love you.']` - type: `<class 'list'>`
----> baseline_answer: `It's disrespectful to feel embarrassment towards individuals who care for you.` - type: `<class 'str'>`
 --> scores:  0.10526315789473685
----> per-field score: 0.10526315789473685
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"]`
----> answers: `['rude', "It's rude to", 'it is rude', "It's wrong", "It's rude", "it's rude"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.23886639676113358
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0]}
instance_id: 32977 <-> row_number: 6
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'rot-categorization': ['social-norms|description', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'description', 'advice', 'description', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'description', 'advice', 'advice', 'morality-ethics|advice', 'morality-ethics|advice', 'advice', 'morality-ethics'], 'rot-moral-foundations': ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money'], 'rot-judgment': ["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0], 'fwd-agree': [2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is beneficial to engage in games of chance that offer monetary rewards.')
Add text `It is beneficial to engage in games of chance that offer monetary rewards.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to play games of chance where you can win money." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your new judgment text here')
Add text `Your new judgment text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


If your intention was different, please provide more context or specify the desired modification for a more accurate response.
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


If your intention was different, please provide more context or specify the desired modification for a more accurate response., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is beneficial to engage in games of chance that offer monetary rewards.']
 visible_values : ['It is beneficial to engage in games of chance that offer monetary rewards.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your new judgment text here']
 visible_values : ['Your new judgment text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money']`
----> answers: `['playing games of chance where you can win money.', 'playing games of chance where you can win money']` - type: `<class 'list'>`
----> baseline_answer: `It is beneficial to engage in games of chance that offer monetary rewards.` - type: `<class 'str'>`
 --> scores:  0.27272727272727276
----> per-field score: 0.27272727272727276
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"]`
----> answers: `["it's good", "It's good", 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your new judgment text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.3286713286713287
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0]}
instance_id: 32973 <-> row_number: 2
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|description', 'morality-ethics|social-norms', 'morality-ethics|advice', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'advice', '', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics'], 'rot-moral-foundations': ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous'], 'rot-judgment': ["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s wrong to be gluttonous.')
Add text `It's wrong to be gluttonous.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's wrong to be gluttonous." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's wrong to be gluttonous."]
 visible_values : ["It's wrong to be gluttonous."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous']`
----> answers: `['Being gluttonous.', 'being gluttonous', 'being gluttonous.']` - type: `<class 'list'>`
----> baseline_answer: `It's wrong to be gluttonous.` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"]`
----> answers: `["It's wrong to", "it's wrong", "It's wrong", 'wrong', "It's wrong."]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.34615384615384615
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0]}
instance_id: 32972 <-> row_number: 1
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2], 'rot-categorization': ['advice', 'morality-ethics|description', 'description', 'advice', 'advice', 'advice', 'advice|description', 'social-norms|advice', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'social-norms|advice', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'social-norms', 'advice', 'description', 'advice', 'social-norms|description', 'advice', 'advice', 'description', 'description', 'advice', 'morality-ethics|advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.'], 'rot-judgment': ["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical'], 'n-characters': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')

We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s beneficial to surround yourself with individuals who can contribute to your personal development.')
Add text `It's beneficial to surround yourself with individuals who can contribute to your personal development.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to have people you can use to improve yourself." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's beneficial to surround yourself with individuals who can contribute to your personal development."]
 visible_values : ["It's beneficial to surround yourself with individuals who can contribute to your personal development."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.']`
----> answers: `['having people you can use to improve yourself.', 'Improving yourself by having people.', 'using people to improve yourself', 'having people you can use to improve yourself']` - type: `<class 'list'>`
----> baseline_answer: `It's beneficial to surround yourself with individuals who can contribute to your personal development.` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"]`
----> answers: `["it's good", "It's good", "It's good.", 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.24615384615384617
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0, 0.2, 0.0]}
instance_id: 32974 <-> row_number: 3
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4], 'rot-categorization': ['morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'social-norms|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'morality-ethics|advice', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'care-harm|authority-subversion', '', 'care-harm', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm'], 'char-involved-general': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'rot-rewrite': ['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild'], 'rot-judgment': ["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 'char-involved-fwd': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'fwd-hypothetical': ['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')


Could you please specify the value you wish to select or provide more details?

Failed to execute an action self.actions.modify_radio('char-involved-general', 'char-0')


Could you please specify the value you wish to select or provide more details?
, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is beneficial to refrain from disturbing wildlife.')
Add text `It is beneficial to refrain from disturbing wildlife.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to avoid disturbing animals in the wild." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is beneficial to refrain from disturbing wildlife.']
 visible_values : ['It is beneficial to refrain from disturbing wildlife.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild']`
----> answers: `['avoiding disturbing animals in the wild.', 'disturbing animals in the wild', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild']` - type: `<class 'list'>`
----> baseline_answer: `It is beneficial to refrain from disturbing wildlife.` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"]`
----> answers: `["it's good", "It's good", 'you should avoid it', 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.3195266272189349
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0, 0.2, 0.0, 0.15384615384615385, 0.0]}
 = = = = = = = = = = = = starting new task: `Associate countries and languages with Ethnologue` = = = = = = = = = = = = 
First instance id: 29921
instance_id: 29935 <-> row_number: 14
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy'], 'primary_country': ['india', 'india', 'india'], 'region': ['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.'], 'countries': ['bangladesh|other', 'bangladesh|other', 'bangladesh|other|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided details, it seems you are looking to modify an input with the name "url," but the provided HTML snippet does not include an input element with the name "url." The snippet primarily describes a step in a task requiring research on the Ethnologue website, and includes a form element for CSRF (Cross-Site Request Forgery) protection but does not detail an input field directly related to the task described.

Could you please provide more information or clarify the task you're trying to accomplish? Without an input field named "url" in the provided HTML, it's challenging to generate a meaningful command based on the available commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).
Failed to execute an action Based on the provided details, it seems you are looking to modify an input with the name "url," but the provided HTML snippet does not include an input element with the name "url." The snippet primarily describes a step in a task requiring research on the Ethnologue website, and includes a form element for CSRF (Cross-Site Request Forgery) protection but does not detail an input field directly related to the task described.

Could you please provide more information or clarify the task you're trying to accomplish? Without an input field named "url" in the provided HTML, it's challenging to generate a meaningful command based on the available commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range)., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('primary_country', 'India')


If "primary_country" is a dropdown select, and the option value for "India" is inferred as "IN", the command might look like:
python
self.actions.modify_select('primary_country', 'IN')


Please provide more details or the specific input element code for "primary_country" for a more
Failed to execute an action self.actions.modify_text('primary_country', 'India')


If "primary_country" is a dropdown select, and the option value for "India" is inferred as "IN", the command might look like:
python
self.actions.modify_select('primary_country', 'IN')


Please provide more details or the specific input element code for "primary_country" for a more, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but there doesn't seem to be an HTML form input directly related to the name "region" or interactive elements such as checkboxes, radios, text inputs, or selects in the provided HTML snippet. The snippet includes a hyperlink and some explanatory text regarding a task but does not contain form elements that require modifying based on the name "region." Could you please provide more context or clarify the request?
Failed to execute an action I'm sorry, but there doesn't seem to be an HTML form input directly related to the name "region" or interactive elements such as checkboxes, radios, text inputs, or selects in the provided HTML snippet. The snippet includes a hyperlink and some explanatory text regarding a task but does not contain form elements that require modifying based on the name "region." Could you please provide more context or clarify the request?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=bpy']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.']`
----> answers: `['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh|other', 'bangladesh|other', 'bangladesh|india|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh|other', 'bangladesh|other', 'bangladesh|india|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0], 'select': [0.0], 'textarea': [0.0], 'checkbox': [0.0]}
instance_id: 29961 <-> row_number: 40
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', nan, 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.'], 'countries': ['philippines', 'other', 'philippines|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was a mix-up in your request. You've provided details about looking up "central_bicolano" on the Ethnologue website but requested an action related to an HTML form input named "primary_country" without providing specific HTML code or values related to "primary_country" input. Could you please clarify or provide the specific details or actions you want to be taken regarding "primary_country"?
Failed to execute an action It appears there was a mix-up in your request. You've provided details about looking up "central_bicolano" on the Ethnologue website but requested an action related to an HTML form input named "primary_country" without providing specific HTML code or values related to "primary_country" input. Could you please clarify or provide the specific details or actions you want to be taken regarding "primary_country"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there was no specific request or command generation detail provided based on the HTML input named "region" that you shared. Could you please clarify what modification or action you'd like to perform with the 'region' input? This would help me generate the accurate command for you.
Failed to execute an action I'm sorry for any confusion, but it seems there was no specific request or command generation detail provided based on the HTML input named "region" that you shared. Could you please clarify what modification or action you'd like to perform with the 'region' input? This would help me generate the accurate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', '', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']`
----> answers: `['', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', 'Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'other', 'other|philippines']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['philippines', 'other', 'other|philippines']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.13636363636363638
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455], 'select': [0.0, 0.0], 'textarea': [0.0, 0.0], 'checkbox': [0.0, 0.0]}
instance_id: 29936 <-> row_number: 15
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell'], 'primary_country': ['greece', 'greece', 'greece'], 'region': ['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.'], 'countries': ['albania|bulgaria|tunisia|france|macedonia|turkey|canada|georgia|uae|germany|italy|uk|armenia|greece|ukraine|southafrica|unitedstates|australia|jordan|poland|kazakhstan|cyprus|czechrepublic|romania|sweden|hungary|egypt|russianfederation|other', 'albania|france|turkey|italy|ukraine|cyprus|romania|egypt', 'albania|bulgaria|tunisia|france|macedonia|turkey|canada|georgia|macedoniatheformeryugoslavrepublicof|uae|germany|italy|armenia|ukraine|southafrica|unitedstates|australia|jordan|poland|austria|kazakhstan|cyprus|czechrepublic|sweden|hungary|egypt|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet, it appears that you may want to manipulate or interact with elements related to a form submission process, especially targeting a "url" input. However, the HTML segment you've shared does not contain an input field named "url" explicitly. The instructions and content related to the form mainly involve steps to look up information on an external website. 

If your intention is to automate or generate a command related to navigating or fetching data from an external URL mentioned within the HTML content, this would usually require scripting beyond what simple form input modifications can achieve. For instance, in a Python script using libraries like requests or selenium for web scraping or automating browser navigation, one would programmatically navigate to the mentioned URL or parse the provided URL from the HTML content.

For completeness and based on what's visible here, if you're looking to interact with form elements or automate submission where such an "url" field exists, an appropriate command would be formatted according to the specific type of input you're dealing with (text, checkbox, radio, select, etc.) which isn't visible in the shared HTML. If you find an input named "url" that you wish to modify and you know its type, the command would follow one of the patterns you've described, such
Failed to execute an action Given the provided HTML snippet, it appears that you may want to manipulate or interact with elements related to a form submission process, especially targeting a "url" input. However, the HTML segment you've shared does not contain an input field named "url" explicitly. The instructions and content related to the form mainly involve steps to look up information on an external website. 

If your intention is to automate or generate a command related to navigating or fetching data from an external URL mentioned within the HTML content, this would usually require scripting beyond what simple form input modifications can achieve. For instance, in a Python script using libraries like requests or selenium for web scraping or automating browser navigation, one would programmatically navigate to the mentioned URL or parse the provided URL from the HTML content.

For completeness and based on what's visible here, if you're looking to interact with form elements or automate submission where such an "url" field exists, an appropriate command would be formatted according to the specific type of input you're dealing with (text, checkbox, radio, select, etc.) which isn't visible in the shared HTML. If you find an input named "url" that you wish to modify and you know its type, the command would follow one of the patterns you've described, such, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you have provided HTML content and an input name but not a specific task or question related to modifying the content. Could you please provide more details about what you would like to accomplish? For example, are you looking to generate a specific command for modifying an input within the provided HTML based on a given name? If so, it would be helpful to know the type of input (e.g., text, checkbox, select) and the value you want to set.
Failed to execute an action It appears you have provided HTML content and an input name but not a specific task or question related to modifying the content. Could you please provide more details about what you would like to accomplish? For example, are you looking to generate a specific command for modifying an input within the provided HTML based on a given name? If so, it would be helpful to know the type of input (e.g., text, checkbox, select) and the value you want to set., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: The provided HTML snippet and context do not contain an input with the name "region" or any select input field to demonstrate how to modify a region value. Please provide the relevant HTML code that includes the "region" input field (preferably a select tag or a similar input type that would require a value to be set for "region") so that I can generate the appropriate command for you.
Failed to execute an action The provided HTML snippet and context do not contain an input with the name "region" or any select input field to demonstrate how to modify a region value. Please provide the relevant HTML code that includes the "region" input field (preferably a select tag or a similar input type that would require a value to be set for "region") so that I can generate the appropriate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['greece', 'greece', 'greece']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|armenia|australia|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|greece|hungary|italy|jordan|kazakhstan|macedonia|other|poland|romania|russianfederation|southafrica|sweden|tunisia|turkey|uae|uk|ukraine|unitedstates', 'albania|cyprus|egypt|france|italy|romania|turkey|ukraine', 'albania|armenia|australia|austria|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|hungary|italy|jordan|kazakhstan|macedonia|macedoniatheformeryugoslavrepublicof|other|poland|russianfederation|southafrica|sweden|tunisia|turkey|uae|ukraine|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['albania|armenia|australia|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|greece|hungary|italy|jordan|kazakhstan|macedonia|other|poland|romania|russianfederation|southafrica|sweden|tunisia|turkey|uae|uk|ukraine|unitedstates', 'albania|cyprus|egypt|france|italy|romania|turkey|ukraine', 'albania|armenia|australia|austria|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|hungary|italy|jordan|kazakhstan|macedonia|macedoniatheformeryugoslavrepublicof|other|poland|russianfederation|southafrica|sweden|tunisia|turkey|uae|ukraine|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0], 'select': [0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0]}
instance_id: 29947 <-> row_number: 26
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe'], 'primary_country': ['sweden', 'sweden', 'sweden'], 'region': ['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.'], 'countries': ['finland|norway|canada|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|sweden|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet and your request to modify the input named "url", it appears there isn't an `<input>` element with the name "url" visible in the provided HTML. The snippet includes a form with a hidden CSRF token and a step description for looking up a language on the Ethnologue website, but no visible `<input>` tag named "url" is provided for modification.

If you meant to work with a different input element or if there's more context or details needed, please provide additional information or clarify the request.
Failed to execute an action Based on the provided HTML snippet and your request to modify the input named "url", it appears there isn't an `<input>` element with the name "url" visible in the provided HTML. The snippet includes a form with a hidden CSRF token and a step description for looking up a language on the Ethnologue website, but no visible `<input>` tag named "url" is provided for modification.

If you meant to work with a different input element or if there's more context or details needed, please provide additional information or clarify the request., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might have missed including the part of the HTML code that contains the input element named "primary_country". Could you provide the specific part of the HTML that includes the input element you're asking about? This will help me give you the correct command.
Failed to execute an action It seems like you might have missed including the part of the HTML code that contains the input element named "primary_country". Could you provide the specific part of the HTML that includes the input element you're asking about? This will help me give you the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet and the input name "region", there seems to be no direct input field named "region" visible within the snippet provided. Therefore, I'm unable to generate a specific command without more context or more information about the "region" input field (such as its type, value, or if it's a part of a select, radio, checkbox, text, or range input).

If the input field named "region" is available elsewhere on the page not shown in the provided HTML, please provide details about the input type and the value you wish to set, so I can generate the appropriate command for you.
Failed to execute an action Based on the given HTML snippet and the input name "region", there seems to be no direct input field named "region" visible within the snippet provided. Therefore, I'm unable to generate a specific command without more context or more information about the "region" input field (such as its type, value, or if it's a part of a select, radio, checkbox, text, or range input).

If the input field named "region" is available elsewhere on the page not shown in the provided HTML, please provide details about the input type and the value you wish to set, so I can generate the appropriate command for you., error: unmatched ')' (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=swe']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['sweden', 'sweden', 'sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']`
----> answers: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0]}
instance_id: 29924 <-> row_number: 3
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn'], 'primary_country': ['china', 'china'], 'region': ['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.'], 'countries': ['singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|brunei|indonesia|thailand', 'singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|other|brunei|indonesia|thailand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the information provided and your instructions, it seems there's no form of interactive input (like text input, checkbox, radio button, or select dropdown) named "url" to modify directly within the HTML snippet you have shared. The HTML provides instructions for a manual task rather than an interactive element that my prior responses could modify. 

Could you please clarify or provide additional HTML context if you're looking for a modification of a different form input?
Failed to execute an action Based on the information provided and your instructions, it seems there's no form of interactive input (like text input, checkbox, radio button, or select dropdown) named "url" to modify directly within the HTML snippet you have shared. The HTML provides instructions for a manual task rather than an interactive element that my prior responses could modify. 

Could you please clarify or provide additional HTML context if you're looking for a modification of a different form input?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_select('primary_country', 'China')


This scenario assumes a dropdown menu for selecting a country with the option "China". Without seeing the specific form element in the HTML, generating a precise command requires making assumptions about the nature of the input related to "primary_country". Please provide the relevant HTML portion or clarify the nature of the input for accurate assistance.
Failed to execute an action self.actions.modify_select('primary_country', 'China')


This scenario assumes a dropdown menu for selecting a country with the option "China". Without seeing the specific form element in the HTML, generating a precise command requires making assumptions about the nature of the input related to "primary_country". Please provide the relevant HTML portion or clarify the nature of the input for accurate assistance., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but it seems like there was a misunderstanding in your request. Based on the provided HTML snippet, there's no input with the name "region", and thus I'm unable to generate a specific command for modifying such input. The snippet only includes hidden tokens and instructions for looking up information on the Ethnologue website. Could you provide more details or clarify the input you'd like to modify?
Failed to execute an action I'm sorry, but it seems like there was a misunderstanding in your request. Based on the provided HTML snippet, there's no input with the name "region", and thus I'm unable to generate a specific command for modifying such input. The snippet only includes hidden tokens and instructions for looking up information on the Ethnologue website. Could you provide more details or clarify the input you'd like to modify?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=cmn']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china', 'china']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']`
----> answers: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29954 <-> row_number: 33
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin'], 'primary_country': ['india', 'india', 'india'], 'region': ['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.'], 'countries': ['singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|india|newzealand', 'singapore|canada|uae|germany|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|india|newzealand', 'singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|newzealand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'desired_value_here')

Please replace 'desired_value_here' with the actual URL or input value you wish to set, and ensure this input field exists in the full HTML of your form.
Failed to execute an action self.actions.modify_text('url', 'desired_value_here')

Please replace 'desired_value_here' with the actual URL or input value you wish to set, and ensure this input field exists in the full HTML of your form., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears that you've provided some HTML content and an input name but haven't given a clear instruction on what you need done with the provided HTML or the specific command you're expecting based on the input name "primary_country". Can you please clarify the action or modification you're intending to make?
Failed to execute an action It appears that you've provided some HTML content and an input name but haven't given a clear instruction on what you need done with the provided HTML or the specific command you're expecting based on the input name "primary_country". Can you please clarify the action or modification you're intending to make?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like there is no HTML input element named "region" provided in the snippet you shared. Therefore, I can't generate a command to modify an input named "region" without seeing the relevant HTML code that includes it. If you could provide the HTML code that includes the input field named "region", I'd be happy to help.
Failed to execute an action It seems like there is no HTML input element named "region" provided in the snippet you shared. Therefore, I can't generate a command to modify an input named "region" without seeing the relevant HTML code that includes it. If you could provide the HTML code that includes the input field named "region", I'd be happy to help., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hin']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']`
----> answers: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29928 <-> row_number: 7
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway'], 'region': ['not available', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/')


Please provide the correct context or additional details if you had something else in mind or if there's a specific URL you're looking to input.
Failed to execute an action self.actions.modify_text('url', 'https://www.ethnologue.com/')


Please provide the correct context or additional details if you had something else in mind or if there's a specific URL you're looking to input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided context, it appears there is no given HTML code specifying a form input element named "primary_country" directly within the snippet you've shared. The actual modification of an input element named "primary_country" cannot be generated without seeing how it's defined in the HTML structure. If "primary_country" is a select dropdown, a text input, radio button, or any other form of input, the specific method to use from the list (modify_select, modify_text, modify_radio, etc.) could vary.

Please provide the HTML code containing the "primary_country" input element for a more precise command.
Failed to execute an action Based on the provided context, it appears there is no given HTML code specifying a form input element named "primary_country" directly within the snippet you've shared. The actual modification of an input element named "primary_country" cannot be generated without seeing how it's defined in the HTML structure. If "primary_country" is a select dropdown, a text input, radio button, or any other form of input, the specific method to use from the list (modify_select, modify_text, modify_radio, etc.) could vary.

Please provide the HTML code containing the "primary_country" input element for a more precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet and the input name "region," there seems to be no associated input field explicitly named "region" within the provided HTML code. Therefore, I'm unable to generate a specific command to modify an input named "region" as it doesn't appear in the given HTML snippet. Could you please provide more context or check the input name?
Failed to execute an action Based on the given HTML snippet and the input name "region," there seems to be no associated input field explicitly named "region" within the provided HTML code. Therefore, I'm unable to generate a specific command to modify an input named "region" as it doesn't appear in the given HTML snippet. Could you please provide more context or check the input name?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['not available', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Denmark, Finland, Norway and Sweden', 'not available']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['norway', 'denmark|finland|norway|sweden']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29929 <-> row_number: 8
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp'], 'primary_country': ['serbia', 'serbia', 'serbia'], 'region': ['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.'], 'countries': ['albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|russia|zambia|bosnia|other|liberia', 'albania|bulgaria|macedonia|canada|macedoniatheformeryugoslavrepublicof|uae|uk|greece|ukraine|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|other', 'albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet and the input name "url", it appears there is no visible input field directly named "url" for modification based on the snippet provided. The HTML shares informational context about looking up a term on a website and includes a form with a CSRF (Cross-Site Request Forgery) token hidden input, but no explicit input field for a URL (apart from the anchored link provided for guidance). 

If I misunderstood your request or if there's more specific information or another part of the form you're referring to that includes an input named "url", please provide additional details.
Failed to execute an action Given the provided HTML snippet and the input name "url", it appears there is no visible input field directly named "url" for modification based on the snippet provided. The HTML shares informational context about looking up a term on a website and includes a form with a CSRF (Cross-Site Request Forgery) token hidden input, but no explicit input field for a URL (apart from the anchored link provided for guidance). 

If I misunderstood your request or if there's more specific information or another part of the form you're referring to that includes an input named "url", please provide additional details., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you're asking for a command related to an HTML form that includes a field named "primary_country". However, the provided HTML snippet doesn't include an input field with that name. Could you please provide more details or check if there's additional HTML code that includes the "primary_country" input? This would help in generating the correct command.
Failed to execute an action It appears you're asking for a command related to an HTML form that includes a field named "primary_country". However, the provided HTML snippet doesn't include an input field with that name. Could you please provide more details or check if there's additional HTML code that includes the "primary_country" input? This would help in generating the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any misunderstanding, but without seeing an input element related to "region" in the provided HTML snippet, I can't accurately provide a command to modify it. Please provide additional information or correct the HTML snippet to include the input element named "region."
Failed to execute an action I'm sorry for any misunderstanding, but without seeing an input element related to "region" in the provided HTML snippet, I can't accurately provide a command to modify it. Please provide additional information or correct the HTML snippet to include the input element named "region.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=srp']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['serbia', 'serbia', 'serbia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.']`
----> answers: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29938 <-> row_number: 17
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben'], 'primary_country': ['bangladesh', 'bangladesh', 'bangladesh'], 'region': ['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.'], 'countries': ['singapore|canada|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|india|saudiarabia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm afraid you haven't provided a specific request or modification that needs to be applied to the 'url' input based on the HTML code you have provided. Could you please provide more details on what exact changes or actions are expected for the 'url' input?
Failed to execute an action I'm afraid you haven't provided a specific request or modification that needs to be applied to the 'url' input based on the HTML code you have provided. Could you please provide more details on what exact changes or actions are expected for the 'url' input?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there might be a misunderstanding or a missing part of the request. The provided HTML does not include any form elements related to an input named "primary_country", nor does it include other form controls like select dropdowns or radio buttons that could be associated with such an input. Without specific form elements related to "primary_country" or a clear task to perform related to it, generating a command to modify it directly from the provided HTML code isn't possible.

Could you please provide more details or clarify the task? Specifically, if you're looking to generate a command based on a particular web form interaction, details about what type of input "primary_country" is supposed to be (e.g., text field, checkbox, radio button, dropdown selection) and the desired value to set it to would be necessary.
Failed to execute an action It appears there might be a misunderstanding or a missing part of the request. The provided HTML does not include any form elements related to an input named "primary_country", nor does it include other form controls like select dropdowns or radio buttons that could be associated with such an input. Without specific form elements related to "primary_country" or a clear task to perform related to it, generating a command to modify it directly from the provided HTML code isn't possible.

Could you please provide more details or clarify the task? Specifically, if you're looking to generate a command based on a particular web form interaction, details about what type of input "primary_country" is supposed to be (e.g., text field, checkbox, radio button, dropdown selection) and the desired value to set it to would be necessary., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there's been a misunderstanding or incomplete information. From the provided HTML snippet, I cannot see any input named "region" available for modification. The snippet shared lacks form elements like radio buttons, checkboxes, selects, text inputs, etc., directly related to an input named "region."

For the most accurate assistance, please provide the relevant portion of the HTML containing the "region" input or clarify what kind of input "region" is (e.g., text, radio, checkbox, select, range) along with the value you'd like to set for it.
Failed to execute an action It appears there's been a misunderstanding or incomplete information. From the provided HTML snippet, I cannot see any input named "region" available for modification. The snippet shared lacks form elements like radio buttons, checkboxes, selects, text inputs, etc., directly related to an input named "region."

For the most accurate assistance, please provide the relevant portion of the HTML containing the "region" input or clarify what kind of input "region" is (e.g., text, radio, checkbox, select, range) along with the value you'd like to set for it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ben']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29931 <-> row_number: 10
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo', 'http://www.ethnologue.com/show_language.asp?code=epo'], 'primary_country': ['poland', 'poland', 'poland'], 'region': ['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.'], 'countries': ['china|other', 'china|other', 'china|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, there is no visible input field named "url" to modify directly with the commands listed (e.g., `modify_text`, `modify_checkbox`, etc.). The provided HTML largely consists of instructions for looking up "Esperanto" on the Ethnologue website, but does not include a form input for a URL that we can modify with one of the provided methods. 

Could there be an additional part of the HTML code where the "url" input is defined? Or is your request related to handling the lookup process mentioned in the HTML snippet? Please provide further details for the correct assistance.
Failed to execute an action Based on the provided HTML snippet, there is no visible input field named "url" to modify directly with the commands listed (e.g., `modify_text`, `modify_checkbox`, etc.). The provided HTML largely consists of instructions for looking up "Esperanto" on the Ethnologue website, but does not include a form input for a URL that we can modify with one of the provided methods. 

Could there be an additional part of the HTML code where the "url" input is defined? Or is your request related to handling the lookup process mentioned in the HTML snippet? Please provide further details for the correct assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there's been a misunderstanding in the instruction format. You've provided an HTML snippet that describes a form element, mentioning an input name "primary_country", but the actual HTML snippet does not include an input element with the name "primary_country". Without a specific input element to reference, such as a text input, checkbox, radio button, or select dropdown related to "primary_country", generating a command from the given commands list is not possible.

If your intent is to find information or perform an action related to "esperanto" on the Ethnologue website as suggested in the HTML snippet, please clarify how you'd like to proceed, particularly if there's a specific form control related to "primary_country" you'd like to interact with. For the commands I can generate, please provide the specific element type (text, checkbox, radio, select, range) and the value you wish to set for "primary_country".
Failed to execute an action I'm sorry for any confusion, but it seems there's been a misunderstanding in the instruction format. You've provided an HTML snippet that describes a form element, mentioning an input name "primary_country", but the actual HTML snippet does not include an input element with the name "primary_country". Without a specific input element to reference, such as a text input, checkbox, radio button, or select dropdown related to "primary_country", generating a command from the given commands list is not possible.

If your intent is to find information or perform an action related to "esperanto" on the Ethnologue website as suggested in the HTML snippet, please clarify how you'd like to proceed, particularly if there's a specific form control related to "primary_country" you'd like to interact with. For the commands I can generate, please provide the specific element type (text, checkbox, radio, select, range) and the value you wish to set for "primary_country"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you want to generate a command to modify an input within a form, but the provided HTML snippet does not contain an input with the name "region" to modify. Could you please provide the relevant portion of the HTML code that includes the 'region' input field?
Failed to execute an action It seems like you want to generate a command to modify an input within a form, but the provided HTML snippet does not contain an input with the name "region" to modify. Could you please provide the relevant portion of the HTML code that includes the 'region' input field?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo', 'http://www.ethnologue.com/show_language.asp?code=epo']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['poland', 'poland', 'poland']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.']`
----> answers: `['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china|other', 'china|other', 'china|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['china|other', 'china|other', 'china|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29933 <-> row_number: 12
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat'], 'primary_country': ['other', 'other', 'other'], 'region': ['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.'], 'countries': ['canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, it appears there's no direct input field named "url" that is visible for user interaction, such as text input, checkbox, radio button, or select dropdown. The visible elements are mostly static text and a hyperlink. The input fields named are "csrfmiddlewaretoken" which is a hidden input typically used for security purposes (CSRF protection) and doesn't relate to a user-modifiable field like "url".

In absence of a visible, user-modifiable input element with the name "url", I'm unable to generate a command from the specified list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify the input named "url". 

If your intention was to modify or interact with a different part of the form or if there's additional context about how "url" should be interacted with in the form, please provide further details.
Failed to execute an action Based on the provided HTML snippet, it appears there's no direct input field named "url" that is visible for user interaction, such as text input, checkbox, radio button, or select dropdown. The visible elements are mostly static text and a hyperlink. The input fields named are "csrfmiddlewaretoken" which is a hidden input typically used for security purposes (CSRF protection) and doesn't relate to a user-modifiable field like "url".

In absence of a visible, user-modifiable input element with the name "url", I'm unable to generate a command from the specified list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify the input named "url". 

If your intention was to modify or interact with a different part of the form or if there's additional context about how "url" should be interacted with in the form, please provide further details., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there's a misunderstanding in the request. The provided HTML snippet does not include any form elements related to a "primary_country" input that need modification through the listed commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. The snippet mainly informs about looking up information on a website, without a direct task or input named "primary_country" to modify. 

If there are further details or a different part of the HTML code that includes the input named "primary_country", please provide that information for a more accurate response.
Failed to execute an action It appears there's a misunderstanding in the request. The provided HTML snippet does not include any form elements related to a "primary_country" input that need modification through the listed commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. The snippet mainly informs about looking up information on a website, without a direct task or input named "primary_country" to modify. 

If there are further details or a different part of the HTML code that includes the input named "primary_country", please provide that information for a more accurate response., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you're preparing for a step involving looking up information, but there's no specific HTML input element related to the 'region' input name that you've mentioned for me to generate a command. Could you clarify or provide the HTML snippet that includes the input element for 'region'? This will help me generate the appropriate command.
Failed to execute an action It seems like you're preparing for a step involving looking up information, but there's no specific HTML input element related to the 'region' input name that you've mentioned for me to generate a command. Could you clarify or provide the HTML snippet that includes the input element for 'region'? This will help me generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hat']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']`
----> answers: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29939 <-> row_number: 18
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav'], 'primary_country': ['latvia', 'latvia', 'latvia'], 'region': ['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.'], 'countries': ['canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|latvia|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'http://example.com')


Please ensure the actual command accurately reflects the context
Failed to execute an action self.actions.modify_text('url', 'http://example.com')


Please ensure the actual command accurately reflects the context, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was a miscommunication. To effectively assist you in generating the correct command, I would need specific instructions on what action you'd like to take with regard to the input named "primary_country" in the provided HTML structure. Unfortunately, this structure does not include an input with the name "primary_country", nor does it provide actionable details related to modifying a form input element.

Could you please provide more context or specify a direct action (e.g., the value you want to set for a "primary_country" input, if it were present) along with any missing HTML details that include the "primary_country" input element? This would enable me to generate the accurate command you're seeking.
Failed to execute an action It appears there was a miscommunication. To effectively assist you in generating the correct command, I would need specific instructions on what action you'd like to take with regard to the input named "primary_country" in the provided HTML structure. Unfortunately, this structure does not include an input with the name "primary_country", nor does it provide actionable details related to modifying a form input element.

Could you please provide more context or specify a direct action (e.g., the value you want to set for a "primary_country" input, if it were present) along with any missing HTML details that include the "primary_country" input element? This would enable me to generate the accurate command you're seeking., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there may have been a misunderstanding. The provided HTML snippet does not include any form elements specifically named `region`, nor does it contain input elements like checkbox, radio button, text input, etc., that would directly relate to generating commands for modification based on the example commands provided.

The snippet mainly includes instructions for a specific task related to searching for "Latvian" on the Ethnologue website, but does not provide the actual form inputs related to the `region` or similar that would necessitate using commands such as `modify_text`, `modify_checkbox`, etc.

If you're looking to interact programmatically with a web form that includes a `region` input, please ensure the HTML snippet provided includes the form input element named `region` or provide more details about the specific form interaction you're looking to achieve.
Failed to execute an action It appears there may have been a misunderstanding. The provided HTML snippet does not include any form elements specifically named `region`, nor does it contain input elements like checkbox, radio button, text input, etc., that would directly relate to generating commands for modification based on the example commands provided.

The snippet mainly includes instructions for a specific task related to searching for "Latvian" on the Ethnologue website, but does not provide the actual form inputs related to the `region` or similar that would necessitate using commands such as `modify_text`, `modify_checkbox`, etc.

If you're looking to interact programmatically with a web form that includes a `region` input, please ensure the HTML snippet provided includes the form input element named `region` or provide more details about the specific form interaction you're looking to achieve., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=lav']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['latvia', 'latvia', 'latvia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']`
----> answers: `['Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29944 <-> row_number: 23
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus'], 'primary_country': ['spain', 'spain', 'spain'], 'region': ['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.'], 'countries': ['france|philippines|unitedstates|australia|costarica|spain|mexico', 'france|philippines|unitedstates|australia|costarica|mexico|other', 'france|aruba|philippines|unitedstates|australia|costarica|spain|mexico|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you've shared a piece of HTML code which includes a form and a reference to looking up "basque" on the Ethnologue website, but you haven't specified a modification command or provided additional context or details I can use to perform a specific action or give you a detailed response.

If you need to modify the "url" input in the form based on commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`, please provide the specific modification you wish to perform.

For instance, if there was a text input for a URL you wanted to change, you'd provide the desired value for that "url" input. However, based on the provided HTML snippet, there's no visible input named "url", so I might need more details to assist you correctly.

Could you please clarify your request?
Failed to execute an action It appears you've shared a piece of HTML code which includes a form and a reference to looking up "basque" on the Ethnologue website, but you haven't specified a modification command or provided additional context or details I can use to perform a specific action or give you a detailed response.

If you need to modify the "url" input in the form based on commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`, please provide the specific modification you wish to perform.

For instance, if there was a text input for a URL you wanted to change, you'd provide the desired value for that "url" input. However, based on the provided HTML snippet, there's no visible input named "url", so I might need more details to assist you correctly.

Could you please clarify your request?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any misunderstanding, but without visible form elements relevant specifically to the input name "primary_country" provided in the HTML snippet you shared, I can't generate a precise command like those involving `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`.

The HTML snippet you've provided doesn't include specific input elements related to "primary_country" that could be modified using the commands described. Please check if there's additional or missing information to work with, or if you could provide further details surrounding the "primary_country" input. This would include what kind of input it is (e.g., text, checkbox, radio button, select dropdown, range) and its intended modification value. With that information, I'd be better positioned to generate the appropriate command for you.
Failed to execute an action I'm sorry for any misunderstanding, but without visible form elements relevant specifically to the input name "primary_country" provided in the HTML snippet you shared, I can't generate a precise command like those involving `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`.

The HTML snippet you've provided doesn't include specific input elements related to "primary_country" that could be modified using the commands described. Please check if there's additional or missing information to work with, or if you could provide further details surrounding the "primary_country" input. This would include what kind of input it is (e.g., text, checkbox, radio button, select dropdown, range) and its intended modification value. With that information, I'd be better positioned to generate the appropriate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text`, `self.actions.modify_checkbox`, etc. 

If you are looking to interact with a form input named "region" as part of web automation or manipulation, please make sure the HTML snippet includes such an element or provide the specific action and value intended for "region", assuming it's part of the wider form not shown in the snippet.
Failed to execute an action self.actions.modify_text`, `self.actions.modify_checkbox`, etc. 

If you are looking to interact with a form input named "region" as part of web automation or manipulation, please make sure the HTML snippet includes such an element or provide the specific action and value intended for "region", assuming it's part of the wider form not shown in the snippet., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=eus']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['spain', 'spain', 'spain']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']`
----> answers: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29925 <-> row_number: 4
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry'], 'primary_country': ['netherlands', 'netherlands', 'other'], 'region': ['North, Friesland.', 'North, Friesland', 'North, Friesland.'], 'countries': ['other', 'other', 'other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: The provided HTML code snippet and instructions do not have an actionable item for modifying an input field directly related to the "url" input name. It seems there's a misunderstanding or missing context for this task. If you wish to fill or modify a form programmatically, usually, you would interact with visible input fields such as text boxes, radio buttons, checkboxes, etc.

Given the details, it looks like you might want to interact with a link or conduct a web search, which doesn't directly correlate with modifying a form input through scripting commands like those provided initially (`modify_text`, `modify_checkbox`, etc.).

If you could provide more specific details regarding what you want to achieve with the "url" input or correct the context of the request, I might be able to offer a more fitting suggestion or command.
Failed to execute an action The provided HTML code snippet and instructions do not have an actionable item for modifying an input field directly related to the "url" input name. It seems there's a misunderstanding or missing context for this task. If you wish to fill or modify a form programmatically, usually, you would interact with visible input fields such as text boxes, radio buttons, checkboxes, etc.

Given the details, it looks like you might want to interact with a link or conduct a web search, which doesn't directly correlate with modifying a form input through scripting commands like those provided initially (`modify_text`, `modify_checkbox`, etc.).

If you could provide more specific details regarding what you want to achieve with the "url" input or correct the context of the request, I might be able to offer a more fitting suggestion or command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but without additional context such as a selection list or specific input types related to "primary_country", it's not possible to generate a specific command from the list of valid commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) based on the given HTML snippet. 

The snippet provided does not contain any form elements directly related to "primary_country" for modifying its value through those commands. For accurate command generation, please provide HTML code that includes the input with the name "primary_country" and its type (e.g., select, input text, radio).
Failed to execute an action I'm sorry, but without additional context such as a selection list or specific input types related to "primary_country", it's not possible to generate a specific command from the list of valid commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) based on the given HTML snippet. 

The snippet provided does not contain any form elements directly related to "primary_country" for modifying its value through those commands. For accurate command generation, please provide HTML code that includes the input with the name "primary_country" and its type (e.g., select, input text, radio)., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems that there might have been an oversight. The provided HTML snippet does not contain the input field named "region" that you wish to modify, nor does it contain inputs such as text, checkbox, radio, select, or range that would allow for an operation such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. Could you provide more details or ensure that the relevant part of the HTML is included? This will help in generating the appropriate command.
Failed to execute an action It seems that there might have been an oversight. The provided HTML snippet does not contain the input field named "region" that you wish to modify, nor does it contain inputs such as text, checkbox, radio, select, or range that would allow for an operation such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. Could you provide more details or ensure that the relevant part of the HTML is included? This will help in generating the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=fry']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['netherlands', 'netherlands', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Friesland.', 'North, Friesland', 'North, Friesland.']`
----> answers: `['North, Friesland.', 'North, Friesland']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['other', 'other', 'other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29966 <-> row_number: 45
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye'], 'primary_country': ['armenia', 'armenia', 'armenia'], 'region': ['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.'], 'countries': ['bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|unitedstates|jordan|kazakhstan|uzbekistan|cyprus|romania|hungary|egypt|lebanon|russianfederation|other|estonia|india', 'bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|unitedstates|jordan|kazakhstan|uzbekistan|cyprus|hungary|egypt|lebanon|russianfederation|estonia|india', 'bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|japan|unitedstates|kazakhstan|uzbekistan|cyprus|romania|hungary|egypt|lebanon|russianfederation|estonia|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, where you're given the task to look up "Armenian" on the Ethnologue website, but there's no directly modifiable form fields related to "url" in the snippet you've shared. If your intention is to set or modify a value in a form related to a URL, unfortunately, there's no such input field explicitly named "url" in the snippet provided.

However, if you were looking to automate a different kind of interaction, like submitting the form after doing some actions (like looking up information), you might use JavaScript in a browser context or simulate this action if you're working with a headless browser in a scraping or automation task. Your task might not directly modify an input named "url", as that doesn't appear in the snippet. 

If you're working in an environment that supports JavaScript execution or web automation (like using Selenium or a similar library in a programming language), you might simulate the navigation and search actions required by your task. Without a specific "url" input to modify and based on the context you've provided, I can't generate a direct command for altering a "url" field, as it doesn't exist in the HTML snippet.
Failed to execute an action Based on the provided HTML snippet, where you're given the task to look up "Armenian" on the Ethnologue website, but there's no directly modifiable form fields related to "url" in the snippet you've shared. If your intention is to set or modify a value in a form related to a URL, unfortunately, there's no such input field explicitly named "url" in the snippet provided.

However, if you were looking to automate a different kind of interaction, like submitting the form after doing some actions (like looking up information), you might use JavaScript in a browser context or simulate this action if you're working with a headless browser in a scraping or automation task. Your task might not directly modify an input named "url", as that doesn't appear in the snippet. 

If you're working in an environment that supports JavaScript execution or web automation (like using Selenium or a similar library in a programming language), you might simulate the navigation and search actions required by your task. Without a specific "url" input to modify and based on the context you've provided, I can't generate a direct command for altering a "url" field, as it doesn't exist in the HTML snippet., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet and input name "primary_country," it seems there's insufficient information to specifically determine how to modify an input for "primary_country" since there is no visible form input related to "primary_country" in the shared HTML code. 

If "primary_country" is supposed to be a part of the form but not visible in the provided HTML snippet, and if it requires a string or specific value (e.g., a country code or name), you would generally use a command similar to `self.modify_text` assuming that "primary_country" is a text input. If it was meant to be selected from options, a `self.modify_select` command might be appropriate. 

However, since the exact input type and options for "primary_country" are not specified in your request, I would need more details to generate a precise command.
Failed to execute an action Given the provided HTML snippet and input name "primary_country," it seems there's insufficient information to specifically determine how to modify an input for "primary_country" since there is no visible form input related to "primary_country" in the shared HTML code. 

If "primary_country" is supposed to be a part of the form but not visible in the provided HTML snippet, and if it requires a string or specific value (e.g., a country code or name), you would generally use a command similar to `self.modify_text` assuming that "primary_country" is a text input. If it was meant to be selected from options, a `self.modify_select` command might be appropriate. 

However, since the exact input type and options for "primary_country" are not specified in your request, I would need more details to generate a precise command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but based on the provided HTML snippet, there is no visible input element with the name "region" to modify. The HTML provided seems incomplete in terms of fulfilling the request for generating a specific command from the initial list. Could you please provide more details or correct the input name?
Failed to execute an action I'm sorry, but based on the provided HTML snippet, there is no visible input element with the name "region" to modify. The HTML provided seems incomplete in terms of fulfilling the request for generating a specific command from the initial list. Could you please provide more details or correct the input name?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hye']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['armenia', 'armenia', 'armenia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.']`
----> answers: `['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|other|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|japan|kazakhstan|lebanon|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|other|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|japan|kazakhstan|lebanon|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29949 <-> row_number: 28
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan'], 'primary_country': ['denmark', 'denmark', 'denmark'], 'region': ['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.'], 'countries': ['norway|canada|uae|germany|unitedstates|sweden', 'norway|canada|uae|germany|sweden', 'norway|canada|uae|germany|unitedstates|sweden|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but it appears there's been a misunderstanding. The provided HTML code does not contain a form input with the name "url" nor any specific command-related context that allows me to generate a modification command based on the guidelines you've provided.

If you need assistance generating a specific command from the list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify an HTML input or another type of content manipulation using a given input name, please provide the relevant details or correct the input name according to the actual inputs in the provided HTML code.
Failed to execute an action I'm sorry, but it appears there's been a misunderstanding. The provided HTML code does not contain a form input with the name "url" nor any specific command-related context that allows me to generate a modification command based on the guidelines you've provided.

If you need assistance generating a specific command from the list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify an HTML input or another type of content manipulation using a given input name, please provide the relevant details or correct the input name according to the actual inputs in the provided HTML code., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you haven't provided any code related to the input name `primary_country` within the HTML snippet you shared. Without the specific code for the input element `primary_country`, it's not possible to generate an appropriate command from the given commands list. Please provide the HTML code snippet that includes the `primary_country` input element for accurate assistance.
Failed to execute an action It seems like you haven't provided any code related to the input name `primary_country` within the HTML snippet you shared. Without the specific code for the input element `primary_country`, it's not possible to generate an appropriate command from the given commands list. Please provide the HTML code snippet that includes the `primary_country` input element for accurate assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet, there doesn't seem to be an input element with the name "region" visible in the provided code. Please ensure the full HTML code related to the input element named "region" is provided for accurate command generation, or specify the type of input you intend to modify if it pertains to elements not shown in the snippet.
Failed to execute an action Based on the given HTML snippet, there doesn't seem to be an input element with the name "region" visible in the provided code. Please ensure the full HTML code related to the input element named "region" is provided for accurate command generation, or specify the type of input you intend to modify if it pertains to elements not shown in the snippet., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=dan']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['denmark', 'denmark', 'denmark']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']`
----> answers: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29930 <-> row_number: 9
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori'], 'primary_country': ['india', 'india', 'india'], 'region': ['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.'], 'countries': ['bangladesh', 'bangladesh', 'bangladesh|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'input_value')


Without an input named "url", I can't generate a specific command. If you need assistance with a different input or a different task, please provide more details.
Failed to execute an action self.actions.modify_text('url', 'input_value')


Without an input named "url", I can't generate a specific command. If you need assistance with a different input or a different task, please provide more details., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_select('primary_country', 'desired_value')


Replace 'desired_value' with the value that corresponds to the desired option within the "primary_country" dropdown. However, please ensure the input field's actual HTML markup is provided for a precise command tailored to your needs.
Failed to execute an action self.actions.modify_select('primary_country', 'desired_value')


Replace 'desired_value' with the value that corresponds to the desired option within the "primary_country" dropdown. However, please ensure the input field's actual HTML markup is provided for a precise command tailored to your needs., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there hasn't been a clear request regarding how to modify the "region" input within the provided HTML code sample. The HTML snippet doesn't include an input with the name "region." Could you please provide more specific details on what you need, such as the type of input for "region" and the desired modification?
Failed to execute an action I'm sorry for any confusion, but it seems there hasn't been a clear request regarding how to modify the "region" input within the provided HTML code sample. The HTML snippet doesn't include an input with the name "region." Could you please provide more specific details on what you need, such as the type of input for "region" and the desired modification?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ori']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']`
----> answers: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh', 'bangladesh', 'bangladesh|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29945 <-> row_number: 24
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway', 'norway'], 'region': ['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://www.example.com')
   
   Here, 'https://www.example.com' would be replaced with the actual URL you wish to input.

2. If the goal were to programmatically click a link (assuming it was possible within the given context, which usually isn't directly achievable through server-side input modification commands but rather involves client-side or browser automation):
   -
Failed to execute an action self.actions.modify_text('url', 'https://www.example.com')
   
   Here, 'https://www.example.com' would be replaced with the actual URL you wish to input.

2. If the goal were to programmatically click a link (assuming it was possible within the given context, which usually isn't directly achievable through server-side input modification commands but rather involves client-side or browser automation):
   -, error: unexpected indent (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might have missed providing all necessary details from the HTML content that contains the `input` element for the `primary_country`. Could you please provide the specific section of the HTML that includes the `input` element with the name `primary_country`? This way, I can generate the correct command to modify it.
Failed to execute an action It seems like you might have missed providing all necessary details from the HTML content that contains the `input` element for the `primary_country`. Could you please provide the specific section of the HTML that includes the `input` element with the name `primary_country`? This way, I can generate the correct command to modify it., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems you've provided a setup for a task involving looking up information on the Ehtnologue website but didn't specify what needs to be modified on the provided HTML form based on the task's outcome. Could you please clarify the input modification required based on the task's result?
Failed to execute an action It seems you've provided a setup for a task involving looking up information on the Ehtnologue website but didn't specify what needs to be modified on the provided HTML form based on the task's outcome. Could you please clarify the input modification required based on the task's result?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Denmark, Finland, Norway and Sweden', 'Not available']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29965 <-> row_number: 44
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new'], 'primary_country': ['nepal', 'nepal', 'albania'], 'region': ['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.'], 'countries': ['nepal|india', 'other|india', 'nepal|other|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Your request indicates you might be looking for a script to fill or interact with a form on a web page, and while you mentioned an input name "url," the provided HTML extract does not include a visible input field with the name "url" to directly interact with. It seems like you're possibly looking to fetch or work with information related to "newar / nepal bhasa" from an external resource, but the specific action or modification you intend to apply to the "url" input is unclear from the provided context.

If your intention is to programmatically navigate or interact with a webpage, Python libraries like `requests` for HTTP requests or `selenium` for browser automation could be relevant, but these actions would typically be scripted in a Python environment rather than using the form-based command structure you've proposed.

Please provide further details or clarify your request if you're looking for a specific form of interaction with the "url" input or the webpage content related to "newar / nepal bhasa."
Failed to execute an action Your request indicates you might be looking for a script to fill or interact with a form on a web page, and while you mentioned an input name "url," the provided HTML extract does not include a visible input field with the name "url" to directly interact with. It seems like you're possibly looking to fetch or work with information related to "newar / nepal bhasa" from an external resource, but the specific action or modification you intend to apply to the "url" input is unclear from the provided context.

If your intention is to programmatically navigate or interact with a webpage, Python libraries like `requests` for HTTP requests or `selenium` for browser automation could be relevant, but these actions would typically be scripted in a Python environment rather than using the form-based command structure you've proposed.

Please provide further details or clarify your request if you're looking for a specific form of interaction with the "url" input or the webpage content related to "newar / nepal bhasa.", error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was no direct instructions or given input value for modifying an element named "primary_country" in the HTML code provided. If a specific action is needed, such as filling out or selecting a value for an input field named "primary_country," please provide additional context or specify the desired action and value.
Failed to execute an action It appears there was no direct instructions or given input value for modifying an element named "primary_country" in the HTML code provided. If a specific action is needed, such as filling out or selecting a value for an input field named "primary_country," please provide additional context or specify the desired action and value., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you may want a command to adjust a form input named "region". However, without seeing any specific input elements for "region" in the HTML snippet you've provided, such as `<input>`, `<select>`, `<textarea>`, etc., associated with the name "region", I am unable to generate a precise command.

Could you please provide more details about the type of input (text, checkbox, radio button, dropdown select, etc.) and the desired value or selection for "region"? This information will enable me to generate the appropriate command to modify the input.
Failed to execute an action It appears you may want a command to adjust a form input named "region". However, without seeing any specific input elements for "region" in the HTML snippet you've provided, such as `<input>`, `<select>`, `<textarea>`, etc., associated with the name "region", I am unable to generate a precise command.

Could you please provide more details about the type of input (text, checkbox, radio button, dropdown select, etc.) and the desired value or selection for "region"? This information will enable me to generate the appropriate command to modify the input., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=new']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['nepal', 'nepal', 'albania']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.']`
----> answers: `['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india|nepal', 'india|other', 'india|nepal|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['india|nepal', 'india|other', 'india|nepal|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29968 <-> row_number: 47
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv'], 'primary_country': ['russianfederation', 'russianfederation', 'russianfederation'], 'region': ['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan'], 'countries': ['kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|russia|russianfederation|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, there doesn't seem to be an input element with the name "url" to modify. The snippet shows the structure for a form submission with a CSRF (Cross-Site Request Forgery) token for security purposes, along with a hyperlink guiding the user on how to perform a specific step, but it does not include an editable text, select, checkbox, or radio type input by the name of "url".

If you intended to modify a different type of input or have more details about the specific input you want to address, please provide further information or clarify your request.
Failed to execute an action Based on the provided HTML snippet, there doesn't seem to be an input element with the name "url" to modify. The snippet shows the structure for a form submission with a CSRF (Cross-Site Request Forgery) token for security purposes, along with a hyperlink guiding the user on how to perform a specific step, but it does not include an editable text, select, checkbox, or radio type input by the name of "url".

If you intended to modify a different type of input or have more details about the specific input you want to address, please provide further information or clarify your request., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might be looking for a command to modify a form input, but the provided HTML snippet doesn't showcase a form input element related to "primary_country" or any select, checkbox, text, radio, or range input that matches with the given input name. Please provide the specific HTML code segment that includes the "primary_country" input field or clarify the type of modification you're looking to perform.
Failed to execute an action It seems like you might be looking for a command to modify a form input, but the provided HTML snippet doesn't showcase a form input element related to "primary_country" or any select, checkbox, text, radio, or range input that matches with the given input name. Please provide the specific HTML code segment that includes the "primary_country" input field or clarify the type of modification you're looking to perform., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It looks like you might need assistance with an HTML element or form interaction related to a field named "region," but the snippet you've provided does not contain a form field (input, select, radio, checkbox, etc.) related to "region". Could you please provide more details or additional HTML code that includes the "region" input you're referring to? This way, I can give a more accurate and helpful response.
Failed to execute an action It looks like you might need assistance with an HTML element or form interaction related to a field named "region," but the snippet you've provided does not contain a form field (input, select, radio, checkbox, etc.) related to "region". Could you please provide more details or additional HTML code that includes the "region" input you're referring to? This way, I can give a more accurate and helpful response., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=chv']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['russianfederation', 'russianfederation', 'russianfederation']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']`
----> answers: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Radiology Report Sentence Classification` = = = = = = = = = = = = 
First instance id: 32981
instance_id: 33160 <-> row_number: 179
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 179 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0]}
instance_id: 33070 <-> row_number: 89
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 89 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 33367 <-> row_number: 386
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 386 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33324 <-> row_number: 343
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 343 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33194 <-> row_number: 213
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 213 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33204 <-> row_number: 223
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 223 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33053 <-> row_number: 72
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'NotConfident', 'SomewhatConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33284 <-> row_number: 303
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 303 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33248 <-> row_number: 267
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 267 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33157 <-> row_number: 176
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 176 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33155 <-> row_number: 174
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 174 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33113 <-> row_number: 132
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 132 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33072 <-> row_number: 91
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 91 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33171 <-> row_number: 190
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 190 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33058 <-> row_number: 77
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 77 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33307 <-> row_number: 326
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 326 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33094 <-> row_number: 113
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 113 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33167 <-> row_number: 186
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 186 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33368 <-> row_number: 387
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 387 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33260 <-> row_number: 279
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 279 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Reddit In-group Analysis Comment annotation 3` = = = = = = = = = = = = 
First instance id: 33913
instance_id: 34053 <-> row_number: 140
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 140 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet and the input name "option0," it appears you want to interact with an element, possibly a radio button or a selection input, but the relevant HTML code for the input element named "option0" is not provided in your snippet. 

For optimal assistance, could you please provide the complete HTML code that includes the element named "option0"?
Failed to execute an action Given the provided HTML snippet and the input name "option0," it appears you want to interact with an element, possibly a radio button or a selection input, but the relevant HTML code for the input element named "option0" is not provided in your snippet. 

For optimal assistance, could you please provide the complete HTML code that includes the element named "option0"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not include any form controls such as `<input>`, `<select>`, or `<textarea>` related to the `option1` input name. Consequently, without additional context on the HTML structure and the specific input control you're referring to, it's not possible to create a command to modify an input named `option1`. 

Please provide more detailed HTML code that includes the form control associated with `option1` so I can assist you accurately.
Failed to execute an action It seems like the provided HTML snippet does not include any form controls such as `<input>`, `<select>`, or `<textarea>` related to the `option1` input name. Consequently, without additional context on the HTML structure and the specific input control you're referring to, it's not possible to create a command to modify an input named `option1`. 

Please provide more detailed HTML code that includes the form control associated with `option1` so I can assist you accurately., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Since the provided HTML does not contain any form input elements directly related to the name "option2", it's not possible to generate a valid command from the provided list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) without understanding the specific input type and options associated with "option2". 

Please provide more context or the specific input element related to "option2" to assist you accurately.
Failed to execute an action Since the provided HTML does not contain any form input elements directly related to the name "option2", it's not possible to generate a valid command from the provided list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) without understanding the specific input type and options associated with "option2". 

Please provide more context or the specific input element related to "option2" to assist you accurately., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but based on the HTML snippet you've provided, there's no form input element related to "option3" for me to generate a command. Could you please provide more details regarding the specific modification you want to make, including any relevant form elements?
Failed to execute an action I'm sorry, but based on the HTML snippet you've provided, there's no form input element related to "option3" for me to generate a command. Could you please provide more details regarding the specific modification you want to make, including any relevant form elements?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To provide a proper command, we would need to see the actual HTML input specifics for "option4" (e.g., whether it is a radio button, checkbox, select dropdown, etc., and its value options). However, if "option4" is not clearly defined or shown in the provided HTML excerpt, I cannot generate an accurate command to modify the input. Could you please provide more details or the relevant HTML code that includes the input element for "option4"?
Failed to execute an action To provide a proper command, we would need to see the actual HTML input specifics for "option4" (e.g., whether it is a radio button, checkbox, select dropdown, etc., and its value options). However, if "option4" is not clearly defined or shown in the provided HTML excerpt, I cannot generate an accurate command to modify the input. Could you please provide more details or the relevant HTML code that includes the input element for "option4"?, error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34044 <-> row_number: 131
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 131 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: The provided input and HTML snippet do not give clear information on the specific action or the type of input element (e.g., text, checkbox, radio, select, range) that needs to be modified. Additionally, the HTML excerpt does not contain an input element with the name "option0" for me to generate a valid command based on the valid commands list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more details about the type of input named "option0" (such as whether it's a text field, checkbox, radio button, dropdown, or range slider) and its possible values. With that information, I can then generate the appropriate modification command.
Failed to execute an action The provided input and HTML snippet do not give clear information on the specific action or the type of input element (e.g., text, checkbox, radio, select, range) that needs to be modified. Additionally, the HTML excerpt does not contain an input element with the name "option0" for me to generate a valid command based on the valid commands list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more details about the type of input named "option0" (such as whether it's a text field, checkbox, radio button, dropdown, or range slider) and its possible values. With that information, I can then generate the appropriate modification command., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_checkbox('option1', 'input_value')

Or, if "option1" is related to a radio button:
python
self.actions.modify_radio('option1', 'input_value')

Or, if "option1" is a select drop-down:
python
self.actions.modify_select('option1', 'input_value')

Or finally, if it's a text input or similar:
python
self.actions.modify_text('option1', 'input_value')


Please replace 'input_value' with the actual value that corresponds to the option you want to modify for "option1". Also, adjust the command type based on the actual input type for "option1" in your HTML code.
Failed to execute an action self.actions.modify_checkbox('option1', 'input_value')

Or, if "option1" is related to a radio button:
python
self.actions.modify_radio('option1', 'input_value')

Or, if "option1" is a select drop-down:
python
self.actions.modify_select('option1', 'input_value')

Or finally, if it's a text input or similar:
python
self.actions.modify_text('option1', 'input_value')


Please replace 'input_value' with the actual value that corresponds to the option you want to modify for "option1". Also, adjust the command type based on the actual input type for "option1" in your HTML code., error: unterminated string literal (detected at line 11) (<string>, line 11)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain input elements related to the "option2" input name you've mentioned. Can you provide more details or the relevant portion of the HTML code that includes the input element for "option2"? This information is necessary for generating a valid command to modify the input.
Failed to execute an action It appears that the provided HTML snippet does not contain input elements related to the "option2" input name you've mentioned. Can you provide more details or the relevant portion of the HTML code that includes the input element for "option2"? This information is necessary for generating a valid command to modify the input., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the relevant HTML for modifying the input named "option3" isn't provided in the content you shared. The snippet given focuses on form instructions but does not include the actual `<input>` elements necessary to generate a specific command.

Could you please provide the part of the HTML that includes the `<input>` or `<select>` element named "option3" so I can assist you more accurately?
Failed to execute an action It seems like the relevant HTML for modifying the input named "option3" isn't provided in the content you shared. The snippet given focuses on form instructions but does not include the actual `<input>` elements necessary to generate a specific command.

Could you please provide the part of the HTML that includes the `<input>` or `<select>` element named "option3" so I can assist you more accurately?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command for modifying an input named "option4" based on the given HTML snippet, it's essential to know the type of input element (e.g., text, checkbox, radio, select, or range) associated with "option4". However, the provided HTML snippet does not contain an input element with the name "option4". The snippet provided seems to be an introduction or instruction section without any form inputs.

Could you please provide more details about the input element "option4", such as its type or additional parts of the HTML code that includes the actual input element? This information will help me generate the correct command.
Failed to execute an action To generate a command for modifying an input named "option4" based on the given HTML snippet, it's essential to know the type of input element (e.g., text, checkbox, radio, select, or range) associated with "option4". However, the provided HTML snippet does not contain an input element with the name "option4". The snippet provided seems to be an introduction or instruction section without any form inputs.

Could you please provide more details about the input element "option4", such as its type or additional parts of the HTML code that includes the actual input element? This information will help me generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34063 <-> row_number: 150
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 150 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Hard to tell', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you've provided information about an HTML form that includes instructions for selecting options, but you have not provided the HTML code containing the input field named "option0." To correctly generate a command to modify the input, more details about the input element (e.g., type of input, possible values) are needed.

Could you provide the relevant HTML code snippet that includes the input named "option0"?
Failed to execute an action It appears you've provided information about an HTML form that includes instructions for selecting options, but you have not provided the HTML code containing the input field named "option0." To correctly generate a command to modify the input, more details about the input element (e.g., type of input, possible values) are needed.

Could you provide the relevant HTML code snippet that includes the input named "option0"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no clear HTML input or selection related to the input name "option1" based on the provided HTML snippet. The snippet primarily consists of introductory or instructional text without a form input element (like a checkbox, radio button, select dropdown, etc.) explicitly for "option1". 

To generate a command, more information on the form elements specifically related to "option1" is necessary, such as an input tag with name="option1" or any element that corresponds to this input name within the form. Please provide details on the input type and possible values for "option1".
Failed to execute an action It appears there is no clear HTML input or selection related to the input name "option1" based on the provided HTML snippet. The snippet primarily consists of introductory or instructional text without a form input element (like a checkbox, radio button, select dropdown, etc.) explicitly for "option1". 

To generate a command, more information on the form elements specifically related to "option1" is necessary, such as an input tag with name="option1" or any element that corresponds to this input name within the form. Please provide details on the input type and possible values for "option1"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet is incomplete and doesn't contain a form input corresponding to the given input name "option2". Without seeing the form inputs to know how they're constructed (whether it’s a set of radio buttons, dropdown, etc.), it's difficult to provide an accurate command to modify the input. 

For generating a valid command, I need to see the input tags or elements that relate to "option2" within the form. Could you please provide the full HTML details surrounding the "option2" input, including its type (radio buttons, checkboxes, select dropdown, etc.)?
Failed to execute an action It appears that the provided HTML snippet is incomplete and doesn't contain a form input corresponding to the given input name "option2". Without seeing the form inputs to know how they're constructed (whether it’s a set of radio buttons, dropdown, etc.), it's difficult to provide an accurate command to modify the input. 

For generating a valid command, I need to see the input tags or elements that relate to "option2" within the form. Could you please provide the full HTML details surrounding the "option2" input, including its type (radio buttons, checkboxes, select dropdown, etc.)?, error: invalid character '’' (U+2019) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It looks like the HTML snippet you provided was cut off and does not show the options for input named "option3". Could you provide more context or the rest of the HTML code related to the input "option3"? This would help me generate the right command for modifying the web page.
Failed to execute an action It looks like the HTML snippet you provided was cut off and does not show the options for input named "option3". Could you provide more context or the rest of the HTML code related to the input "option3"? This would help me generate the right command for modifying the web page., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you've provided a snippet of HTML, but didn't specify the input type (e.g., checkbox, radio button, select menu) associated with "option4". Additionally, the given HTML snippet doesn't contain any form inputs related to "option4". Could you please provide more details or the relevant part of the HTML containing the input named "option4"? This would enable me to generate the accurate command you need.
Failed to execute an action It appears you've provided a snippet of HTML, but didn't specify the input type (e.g., checkbox, radio button, select menu) associated with "option4". Additionally, the given HTML snippet doesn't contain any form inputs related to "option4". Could you please provide more details or the relevant part of the HTML containing the input named "option4"? This would enable me to generate the accurate command you need., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34039 <-> row_number: 126
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 126 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Hard to tell', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that you're asking for a command without providing details about the type of input (for example, checkbox, radio, text, select, range) or the options/values within the form related to the input name "option0". The snippet of HTML you provided does not include the input element itself, just part of the instructions for a form.

For a more accurate response, please provide the HTML tag for the input named "option0" and clarify what action you'd like to perform (e.g., select an option, fill in a text, etc.).
Failed to execute an action It appears that you're asking for a command without providing details about the type of input (for example, checkbox, radio, text, select, range) or the options/values within the form related to the input name "option0". The snippet of HTML you provided does not include the input element itself, just part of the instructions for a form.

For a more accurate response, please provide the HTML tag for the input named "option0" and clarify what action you'd like to perform (e.g., select an option, fill in a text, etc.)., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not contain an input with the name "option1" for me to generate a specific command. Can you provide more details or check the input name?
Failed to execute an action It seems like the provided HTML snippet does not contain an input with the name "option1" for me to generate a specific command. Can you provide more details or check the input name?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information in the provided HTML snippet to accurately determine the type of input and generate a valid command based on the initial instructions. Since the HTML doesn't contain any inputs (checkbox, radio, select, range, or text input) related to "option2," I cannot generate a specific command.

Could you please provide more details about the input type you wish to modify or ensure the HTML contains the input field for "option2"?
Failed to execute an action It appears there's missing information in the provided HTML snippet to accurately determine the type of input and generate a valid command based on the initial instructions. Since the HTML doesn't contain any inputs (checkbox, radio, select, range, or text input) related to "option2," I cannot generate a specific command.

Could you please provide more details about the input type you wish to modify or ensure the HTML contains the input field for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems you've provided only part of the HTML content and the instructions or the question without specifying what type and options for the input named "option3". Based on the provided snippet, it's not clear what specific type of input (checkbox, radio, select, etc.) "option3" refers to or what options are available for it. 

Could you please provide more context or details on the input named "option3"? With more information, I can generate the appropriate command to modify the input based on its type.
Failed to execute an action It seems you've provided only part of the HTML content and the instructions or the question without specifying what type and options for the input named "option3". Based on the provided snippet, it's not clear what specific type of input (checkbox, radio, select, etc.) "option3" refers to or what options are available for it. 

Could you please provide more context or details on the input named "option3"? With more information, I can generate the appropriate command to modify the input based on its type., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, there is no form input (like input, select, checkbox, or radio button) associated with `option4`. The snippet only contains instructional text without any form element related to `option4`. To generate a valid command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), an input element with the name `option4` and its type is necessary.

Could you please provide the missing part of the HTML code that includes the input element for `option4`? This will enable me to generate the appropriate command to modify it.
Failed to execute an action Based on the provided HTML snippet, there is no form input (like input, select, checkbox, or radio button) associated with `option4`. The snippet only contains instructional text without any form element related to `option4`. To generate a valid command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), an input element with the name `option4` and its type is necessary.

Could you please provide the missing part of the HTML code that includes the input element for `option4`? This will enable me to generate the appropriate command to modify it., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33926 <-> row_number: 13
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided input name and HTML snippet, it appears you might want to generate a command for an input named "option0". However, the HTML snippet doesn't contain an input field with the name "option0" to provide a specific command like those mentioned (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more details about the type of input field (e.g., text, checkbox, radio, select, range) for "option0" or clarify the task you'd like to accomplish? This will help in generating the correct command.
Failed to execute an action Given the provided input name and HTML snippet, it appears you might want to generate a command for an input named "option0". However, the HTML snippet doesn't contain an input field with the name "option0" to provide a specific command like those mentioned (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more details about the type of input field (e.g., text, checkbox, radio, select, range) for "option0" or clarify the task you'd like to accomplish? This will help in generating the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like you're looking to generate a command for an unspecified action on a given input named "option1" within a form element in an HTML snippet. Unfortunately, the HTML provided doesn't contain a direct reference to an input element named "option1", nor does it show the types of inputs available (e.g., text, checkbox, radio, select, range) for this specific name. Without knowing the type of input corresponding to "option1" or its available values, it's not possible to generate a precise command. 

Could you please provide more details about the input type and the action you wish to perform on "option1"? This could include whether "option1" is a text field, checkbox, radio button, select dropdown, or range input, and what value you'd like to set it to if applicable.
Failed to execute an action It seems like you're looking to generate a command for an unspecified action on a given input named "option1" within a form element in an HTML snippet. Unfortunately, the HTML provided doesn't contain a direct reference to an input element named "option1", nor does it show the types of inputs available (e.g., text, checkbox, radio, select, range) for this specific name. Without knowing the type of input corresponding to "option1" or its available values, it's not possible to generate a precise command. 

Could you please provide more details about the input type and the action you wish to perform on "option1"? This could include whether "option1" is a text field, checkbox, radio button, select dropdown, or range input, and what value you'd like to set it to if applicable., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the HTML provided does not contain an input element named "option2" to directly apply a command like modify_text, modify_checkbox, modify_radio, modify_select, or modify_range on. The content provided seems to be instructional in nature and does not provide an interactive element regarding "option2". 

Could you please provide more details or the relevant portion of the HTML containing the input named "option2"? This would enable me to generate the appropriate command.
Failed to execute an action It seems like the HTML provided does not contain an input element named "option2" to directly apply a command like modify_text, modify_checkbox, modify_radio, modify_select, or modify_range on. The content provided seems to be instructional in nature and does not provide an interactive element regarding "option2". 

Could you please provide more details or the relevant portion of the HTML containing the input named "option2"? This would enable me to generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided input and HTML snippet, it appears that the snippet does not directly correlate with a form interaction such as selecting an option or filling out a field. The information provided is insufficient to generate a specific command for modifying a form input without additional context about the form inputs available (like radio buttons, select options, checkbox, etc.) related to 'option3'.

If 'option3' corresponds to a specific type of input not shown in the snippet, could you please provide more detail on the type of input (checkbox, radio button, text input, etc.) and the desired value or state you wish to set for 'option3'? This would enable me to generate an accurate command based on the list of valid commands you've provided.
Failed to execute an action Given the provided input and HTML snippet, it appears that the snippet does not directly correlate with a form interaction such as selecting an option or filling out a field. The information provided is insufficient to generate a specific command for modifying a form input without additional context about the form inputs available (like radio buttons, select options, checkbox, etc.) related to 'option3'.

If 'option3' corresponds to a specific type of input not shown in the snippet, could you please provide more detail on the type of input (checkbox, radio button, text input, etc.) and the desired value or state you wish to set for 'option3'? This would enable me to generate an accurate command based on the list of valid commands you've provided., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet lacks form elements (like radio buttons, checkboxes, or select menus) associated with the input name "option4." Due to the incomplete information, I can't generate a specific command to modify an input named "option4" as requested. If you provide details about the type of input (e.g., checkbox, radio, select) and the available options for "option4," I'd be happy to help with a more accurate response.
Failed to execute an action I'm sorry, but the provided HTML snippet lacks form elements (like radio buttons, checkboxes, or select menus) associated with the input name "option4." Due to the incomplete information, I can't generate a specific command to modify an input named "option4" as requested. If you provide details about the type of input (e.g., checkbox, radio, select) and the available options for "option4," I'd be happy to help with a more accurate response., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33974 <-> row_number: 61
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Could you please provide the complete HTML code or specify what actions you'd like to accomplish based on the provided HTML snippet? The snippet contains only part of the form and lacks the input element related directly to "option0".
Failed to execute an action Could you please provide the complete HTML code or specify what actions you'd like to accomplish based on the provided HTML snippet? The snippet contains only part of the form and lacks the input element related directly to "option0"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option1', 'Highly Likely')


However, if "option1" were to be a part of a set of radio buttons or a select dropdown for choosing the likelihood (e.g., "Highly Likely", "Somewhat Likely", "Unlikely"), and assuming "Highly Likely" is one of the possible values to set, then commands might look like this:

For a radio button:

python
self.actions.modify_radio('option1', 'Highly Likely')


For a select dropdown:

python
self.actions.modify_select('option1', 'Highly Likely')


Unfortunately, without a detailed view of
Failed to execute an action self.actions.modify_text('option1', 'Highly Likely')


However, if "option1" were to be a part of a set of radio buttons or a select dropdown for choosing the likelihood (e.g., "Highly Likely", "Somewhat Likely", "Unlikely"), and assuming "Highly Likely" is one of the possible values to set, then commands might look like this:

For a radio button:

python
self.actions.modify_radio('option1', 'Highly Likely')


For a select dropdown:

python
self.actions.modify_select('option1', 'Highly Likely')


Unfortunately, without a detailed view of, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like there's a missing portion of HTML code that specifically relates to an input named "option2." The provided HTML snippet contains an introduction and instructions for a form, but does not include the form inputs themselves. Without the actual input component associated with "option2" (such as a checkbox, radio button, text field, etc.), I cannot generate a precise command. 

Please provide the relevant HTML code that includes the "option2" input element or more context about what "option2" refers to in the form.
Failed to execute an action It seems like there's a missing portion of HTML code that specifically relates to an input named "option2." The provided HTML snippet contains an introduction and instructions for a form, but does not include the form inputs themselves. Without the actual input component associated with "option2" (such as a checkbox, radio button, text field, etc.), I cannot generate a precise command. 

Please provide the relevant HTML code that includes the "option2" input element or more context about what "option2" refers to in the form., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a misunderstanding regarding the provided input. The given HTML snippet and the request lack sufficient information for generating a specific modification command. To generate an accurate command, detailed insights into the form elements related to "option3" are necessary, especially those that dictate the input type (e.g., select, radio, checkbox) and the options or value to be modified.

Without details on what "option3" specifically refers to within the form (such as a checkbox, radio button, select dropdown, or other input types), and the value or modification intended, it's not possible to generate an accurate command. Please provide the type of input "option3" refers to, and the action or value you wish to assign or modify for "option3".
Failed to execute an action It seems there's a misunderstanding regarding the provided input. The given HTML snippet and the request lack sufficient information for generating a specific modification command. To generate an accurate command, detailed insights into the form elements related to "option3" are necessary, especially those that dictate the input type (e.g., select, radio, checkbox) and the options or value to be modified.

Without details on what "option3" specifically refers to within the form (such as a checkbox, radio button, select dropdown, or other input types), and the value or modification intended, it's not possible to generate an accurate command. Please provide the type of input "option3" refers to, and the action or value you wish to assign or modify for "option3"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the provided HTML snippet does not contain an input field named "option4" or any form controls such as `<input>`, `<select>`, `<textarea>`, etc., that can be directly manipulated with the commands you provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more detailed HTML code including the form control for "option4" or clarify the type of input and the corresponding manipulation required for "option4".
Failed to execute an action It seems the provided HTML snippet does not contain an input field named "option4" or any form controls such as `<input>`, `<select>`, `<textarea>`, etc., that can be directly manipulated with the commands you provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more detailed HTML code including the form control for "option4" or clarify the type of input and the corresponding manipulation required for "option4"., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34071 <-> row_number: 158
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 158 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Hard to tell', 'Hard to tell'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet doesn't offer a clear indication of what form elements exist related to `option0`, nor does it specify what type of input `option0` corresponds to (e.g., text, radio button, checkbox, etc.).

Given the context provided, it's not possible to generate a specific command without seeing the pertinent HTML input elements related to `option0`.

If you could provide more details regarding the type of input `option0` is (such as a text field, checkbox, select dropdown), or more of the HTML code that shows the input element for `option0`, I would be able to provide a more accurate command.
Failed to execute an action It seems like the provided HTML snippet doesn't offer a clear indication of what form elements exist related to `option0`, nor does it specify what type of input `option0` corresponds to (e.g., text, radio button, checkbox, etc.).

Given the context provided, it's not possible to generate a specific command without seeing the pertinent HTML input elements related to `option0`.

If you could provide more details regarding the type of input `option0` is (such as a text field, checkbox, select dropdown), or more of the HTML code that shows the input element for `option0`, I would be able to provide a more accurate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the HTML snippet provided, there isn't a clear indication of what specific form input element (like text input, radio button, checkbox, select dropdown box, etc.) is associated with the input name "option1". The provided HTML focuses on the introductory and instructional text of the form without showing the actual input elements where participants can select or enter their response.

To generate a command to modify a form input, I would need more information about the type of input associated with "option1" (e.g., is it a checkbox, text input, radio button, etc.). If you could provide details about the specific form input element for "option1" within the form or any additional context, I could better assist with generating the appropriate command.
Failed to execute an action Given the HTML snippet provided, there isn't a clear indication of what specific form input element (like text input, radio button, checkbox, select dropdown box, etc.) is associated with the input name "option1". The provided HTML focuses on the introductory and instructional text of the form without showing the actual input elements where participants can select or enter their response.

To generate a command to modify a form input, I would need more information about the type of input associated with "option1" (e.g., is it a checkbox, text input, radio button, etc.). If you could provide details about the specific form input element for "option1" within the form or any additional context, I could better assist with generating the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I need more details on how to select 'option2' because the provided HTML snippet does not include an input field named 'option2' or any identifiable form controls related to it. Could you please provide the relevant part of the HTML?
Failed to execute an action I need more details on how to select 'option2' because the provided HTML snippet does not include an input field named 'option2' or any identifiable form controls related to it. Could you please provide the relevant part of the HTML?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Your provided snippet does not contain an input element with the name "option3" to demonstrate a modification action (like a checkbox, radio button, select box, etc.). Could you please provide more context or details on what type of input "option3" is and its expected modification? This information is crucial to generate a precise command.
Failed to execute an action Your provided snippet does not contain an input element with the name "option3" to demonstrate a modification action (like a checkbox, radio button, select box, etc.). Could you please provide more context or details on what type of input "option3" is and its expected modification? This information is crucial to generate a precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('input_name', 'input_value')` or `self.actions.modify_checkbox('input_name', 'input_value')`.

Please provide more detailed information or the specific section of the HTML code that includes the input element related to "option4."
Failed to execute an action self.actions.modify_radio('input_name', 'input_value')` or `self.actions.modify_checkbox('input_name', 'input_value')`.

Please provide more detailed information or the specific section of the HTML code that includes the input element related to "option4.", error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34037 <-> row_number: 124
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 124 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Hard to tell'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Unlikely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is a mistake in my previous response as the provided HTML snippet does not include form elements associated with the input name "option0" that you want to modify. Without seeing the specific input elements tied to "option0" (such as checkboxes, radio buttons, select dropdowns, etc.), I cannot generate a valid command. Could you please provide a detailed snippet of the form elements related to "option0" so I can assist you accurately?
Failed to execute an action It appears there is a mistake in my previous response as the provided HTML snippet does not include form elements associated with the input name "option0" that you want to modify. Without seeing the specific input elements tied to "option0" (such as checkboxes, radio buttons, select dropdowns, etc.), I cannot generate a valid command. Could you please provide a detailed snippet of the form elements related to "option0" so I can assist you accurately?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you're requesting assistance with a form input modification based on the provided HTML snippet. However, the snippet lacks the complete information about the input fields available and their corresponding types (e.g., checkbox, radio, text). To accurately generate a command using the methods provided earlier (e.g., `modify_text`, `modify_checkbox`, etc.), detailed information about the "option1" input is needed. Can you provide the specific details for the "option1" input, such as its type (checkbox, radio, select, range, or text) and the value you wish to assign to it?
Failed to execute an action It appears you're requesting assistance with a form input modification based on the provided HTML snippet. However, the snippet lacks the complete information about the input fields available and their corresponding types (e.g., checkbox, radio, text). To accurately generate a command using the methods provided earlier (e.g., `modify_text`, `modify_checkbox`, etc.), detailed information about the "option1" input is needed. Can you provide the specific details for the "option1" input, such as its type (checkbox, radio, select, range, or text) and the value you wish to assign to it?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To provide a command based on the HTML snippet you've provided, more specific information is needed, such as the type of input (checkbox, radio, select, text, range) associated with "option2" and how you intend to modify it (the value or action you aim to apply). Unfortunately, the provided HTML snippet lacks these details. Could you please provide the input type and the intended modification for "option2"?
Failed to execute an action To provide a command based on the HTML snippet you've provided, more specific information is needed, such as the type of input (checkbox, radio, select, text, range) associated with "option2" and how you intend to modify it (the value or action you aim to apply). Unfortunately, the provided HTML snippet lacks these details. Could you please provide the input type and the intended modification for "option2"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears the provided HTML snippet is incomplete and does not include an input element with the name "option3" that you're asking to modify. Without knowing the type of input (e.g., text, checkbox, radio, select, range) associated with "option3" or the context in which it should be modified, generating an accurate command is not possible.

Please provide the complete details or context for the input named "option3", including its type and the modification you desire, so an appropriate command can be generated.
Failed to execute an action It appears the provided HTML snippet is incomplete and does not include an input element with the name "option3" that you're asking to modify. Without knowing the type of input (e.g., text, checkbox, radio, select, range) associated with "option3" or the context in which it should be modified, generating an accurate command is not possible.

Please provide the complete details or context for the input named "option3", including its type and the modification you desire, so an appropriate command can be generated., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is missing information regarding the HTML input elements related to `option4`. To accurately generate a command to modify an HTML page, the HTML code snippet should contain an input or selection element with `name="option4"` and associated options or values. Without this detail, it's not possible to provide a specific command.

Could you please provide the HTML code snippet containing the input element for `option4`? This would include details such as the type of input (e.g., checkbox, radio, select, text, or range) and its options or allowable values.
Failed to execute an action It appears there is missing information regarding the HTML input elements related to `option4`. To accurately generate a command to modify an HTML page, the HTML code snippet should contain an input or selection element with `name="option4"` and associated options or values. Without this detail, it's not possible to provide a specific command.

Could you please provide the HTML code snippet containing the input element for `option4`? This would include details such as the type of input (e.g., checkbox, radio, select, text, or range) and its options or allowable values., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34010 <-> row_number: 97
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 97 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not include any input element related to "option0". From what is shared, it's challenging to generate a specific command, as the needed portions of the form, especially where "option0" is mentioned as an input name, are missing.

To generate an accurate command for modifying an input named "option0", I would need the complete context or the specific type of input (e.g., text, checkbox, radio, select, range) and the desired value to set. If possible, please provide a complete or more detailed snippet that includes the input with name "option0" and some indication of what kind of modification is intended.
Failed to execute an action It appears that the provided HTML snippet does not include any input element related to "option0". From what is shared, it's challenging to generate a specific command, as the needed portions of the form, especially where "option0" is mentioned as an input name, are missing.

To generate an accurate command for modifying an input named "option0", I would need the complete context or the specific type of input (e.g., text, checkbox, radio, select, range) and the desired value to set. If possible, please provide a complete or more detailed snippet that includes the input with name "option0" and some indication of what kind of modification is intended., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you expect a command to be generated based on the given HTML snippet and input name "option1", however, the provided HTML does not contain an input field or form element specifically named "option1" that can be directly referred to for modifying. The snippet mostly contains instructions and headings with no form controls (like input, select, checkbox, radio buttons) related to "option1".

To generate an accurate command, more detailed information or a corrected snippet including the form control for "option1" is needed. Please provide the HTML code that includes the input, select, checkbox, or another element with the name "option1".
Failed to execute an action It appears you expect a command to be generated based on the given HTML snippet and input name "option1", however, the provided HTML does not contain an input field or form element specifically named "option1" that can be directly referred to for modifying. The snippet mostly contains instructions and headings with no form controls (like input, select, checkbox, radio buttons) related to "option1".

To generate an accurate command, more detailed information or a corrected snippet including the form control for "option1" is needed. Please provide the HTML code that includes the input, select, checkbox, or another element with the name "option1"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not show options related to the input name "option2." Without specific options present in the HTML relating to "option2," generating a precise command is challenging. Please provide the complete section of the HTML that includes the input options for "option2."
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not show options related to the input name "option2." Without specific options present in the HTML relating to "option2," generating a precise command is challenging. Please provide the complete section of the HTML that includes the input options for "option2.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the HTML provided contains instructions for a form asking users to choose how likely an author belongs to a given in-group based on a comment. However, the HTML snippet does not contain a form input or selection element (such as radio buttons or a select dropdown) for the input name "option3" that you provided.

To generate a valid command from the previous instructions, I would need to see the actual form element associated with "option3" (e.g., a set of radio buttons, a dropdown select, or another input type). This element would define what type of input "option3" represents and what values can be assigned to it.
Failed to execute an action It appears that the HTML provided contains instructions for a form asking users to choose how likely an author belongs to a given in-group based on a comment. However, the HTML snippet does not contain a form input or selection element (such as radio buttons or a select dropdown) for the input name "option3" that you provided.

To generate a valid command from the previous instructions, I would need to see the actual form element associated with "option3" (e.g., a set of radio buttons, a dropdown select, or another input type). This element would define what type of input "option3" represents and what values can be assigned to it., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_select('option4', 'Highly Likely')


This is an example based on the assumption that "option4" is a dropdown where 'Highly Likely' is one of the options to select. Please provide more specific details or correct HTML form element details if "option4" refers to a different kind of input.
Failed to execute an action self.actions.modify_select('option4', 'Highly Likely')


This is an example based on the assumption that "option4" is a dropdown where 'Highly Likely' is one of the options to select. Please provide more specific details or correct HTML form element details if "option4" refers to a different kind of input., error: invalid syntax (<string>, line 4)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33975 <-> row_number: 62
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Hard to tell', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I would need the specific options available for input "option0" to generate an accurate command for modifying the HTML page. Could you please provide more details about the options associated with "option0"?
Failed to execute an action I would need the specific options available for input "option0" to generate an accurate command for modifying the HTML page. Could you please provide more details about the options associated with "option0"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command based on the given input name "option1" and the provided HTML snippet, additional context or details about the type of input (such as checkbox, select, radio, text, or range) for "option1" would be necessary since the HTML snippet does not explicitly include an input element with the name "option1". If you could provide more details about the nature of the input or the rest of the form, I would be able to generate an appropriate command.
Failed to execute an action To generate a command based on the given input name "option1" and the provided HTML snippet, additional context or details about the type of input (such as checkbox, select, radio, text, or range) for "option1" would be necessary since the HTML snippet does not explicitly include an input element with the name "option1". If you could provide more details about the nature of the input or the rest of the form, I would be able to generate an appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the HTML snippet provided does not include the actual form elements related to the input name "option2". Without specific form fields (like radio buttons, checkboxes, select dropdowns, etc.) associated with "option2", I cannot generate an exact command from the list provided. Please ensure to include the section of the HTML containing the input elements associated with "option2" for a more precise guidance.
Failed to execute an action It seems the HTML snippet provided does not include the actual form elements related to the input name "option2". Without specific form fields (like radio buttons, checkboxes, select dropdowns, etc.) associated with "option2", I cannot generate an exact command from the list provided. Please ensure to include the section of the HTML containing the input elements associated with "option2" for a more precise guidance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not include an input element with the name `option3`. Thus, I'm unable to generate a specific command to modify such an input without seeing its HTML code. Could you please provide the full HTML code for the input named `option3`?
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not include an input element with the name `option3`. Thus, I'm unable to generate a specific command to modify such an input without seeing its HTML code. Could you please provide the full HTML code for the input named `option3`?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry for any confusion, but without seeing the HTML input elements associated with "option4", I can't generate a precise command to modify it. Could you please provide more details about the input type for "option4"? Specifically, I need to know if it's a text, checkbox, radio button, select dropdown, or range input to give you the correct command.
Failed to execute an action I'm sorry for any confusion, but without seeing the HTML input elements associated with "option4", I can't generate a precise command to modify it. Could you please provide more details about the input type for "option4"? Specifically, I need to know if it's a text, checkbox, radio button, select dropdown, or range input to give you the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33953 <-> row_number: 40
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option0', 'Highly Likely')


If it's a radio button or a checkbox where you need to select an option labeled "Highly Likely", you would need the specific value associated with that option. Since I don't have those details, I'm providing a generic placeholder:

For a radio button:

python
self.actions.modify_radio('option0', 'value_for_highly_likely')


For a checkbox (assuming checking it means selecting "Highly Likely"):

python
self.actions.modify_checkbox('option0', 'on') 
Failed to execute an action self.actions.modify_text('option0', 'Highly Likely')


If it's a radio button or a checkbox where you need to select an option labeled "Highly Likely", you would need the specific value associated with that option. Since I don't have those details, I'm providing a generic placeholder:

For a radio button:

python
self.actions.modify_radio('option0', 'value_for_highly_likely')


For a checkbox (assuming checking it means selecting "Highly Likely"):

python
self.actions.modify_checkbox('option0', 'on') , error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the provided HTML snippet does not include the input named "option1" or any inputs at all, which means I cannot generate a corresponding command without more details on the type of input (text, checkbox, radio, select, range) and the context where it is used. Could you provide more specifics or the relevant portion of the HTML code that includes the input you're asking about?
Failed to execute an action It seems the provided HTML snippet does not include the input named "option1" or any inputs at all, which means I cannot generate a corresponding command without more details on the type of input (text, checkbox, radio, select, range) and the context where it is used. Could you provide more specifics or the relevant portion of the HTML code that includes the input you're asking about?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided information and the structure of the HTML code snippet, it appears that the actual input field or selection options for "option2" were not included in the excerpt you provided. To generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the specific input element (text, checkbox, radio button, dropdown, or range) associated with "option2" in the HTML code. 

Could you please provide more detail or the part of the HTML code that includes the input element for "option2"?
Failed to execute an action Given the provided information and the structure of the HTML code snippet, it appears that the actual input field or selection options for "option2" were not included in the excerpt you provided. To generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the specific input element (text, checkbox, radio button, dropdown, or range) associated with "option2" in the HTML code. 

Could you please provide more detail or the part of the HTML code that includes the input element for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, your instruction seems to request a decision but the HTML snippet provided does not include a form element (like input, select, checkbox, or radio button) directly related to an input named "option3". If you're looking for a command to fill or select an option for "option3" but haven't provided the specific HTML code for that input, it would be challenging to generate an accurate command.

However, if "option3" is supposed to be a type of input not shown (e.g., a radio button, checkbox, text input, etc.), you would usually look for the specific HTML tag that corresponds to this input. For example, if "option3" was a radio button, you would look for an input tag with `name="option3"`.

Since there's not enough detail to generate an accurate command, I recommend providing the exact HTML code snippet that includes the "option3" input or more context about what "option3" is supposed to represent.
Failed to execute an action Based on the provided details, your instruction seems to request a decision but the HTML snippet provided does not include a form element (like input, select, checkbox, or radio button) directly related to an input named "option3". If you're looking for a command to fill or select an option for "option3" but haven't provided the specific HTML code for that input, it would be challenging to generate an accurate command.

However, if "option3" is supposed to be a type of input not shown (e.g., a radio button, checkbox, text input, etc.), you would usually look for the specific HTML tag that corresponds to this input. For example, if "option3" was a radio button, you would look for an input tag with `name="option3"`.

Since there's not enough detail to generate an accurate command, I recommend providing the exact HTML code snippet that includes the "option3" input or more context about what "option3" is supposed to represent., error: unterminated string literal (detected at line 5) (<string>, line 5)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet does not contain an input element with the name "option4" or any indication of the type of input (such as text, checkbox, radio, select, or range inputs) associated with "option4". Could you please provide more information or clarify the type of input and its corresponding HTML code? This will enable me to generate the correct command.
Failed to execute an action I'm sorry, but the provided HTML snippet does not contain an input element with the name "option4" or any indication of the type of input (such as text, checkbox, radio, select, or range inputs) associated with "option4". Could you please provide more information or clarify the type of input and its corresponding HTML code? This will enable me to generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34007 <-> row_number: 94
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 94 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, it seems like there's no specific HTML form input elements shown for the input named "option0". The excerpt only includes some headings and a paragraph without showing any `<input>`, `<select>`, or similar elements that would allow for an actionable command to modify a page element associated with "option0".

Could you please provide more details or clarify the type of input associated with "option0"? This information is necessary for generating the appropriate command to modify the HTML page as per your requirements.
Failed to execute an action Based on the provided details, it seems like there's no specific HTML form input elements shown for the input named "option0". The excerpt only includes some headings and a paragraph without showing any `<input>`, `<select>`, or similar elements that would allow for an actionable command to modify a page element associated with "option0".

Could you please provide more details or clarify the type of input associated with "option0"? This information is necessary for generating the appropriate command to modify the HTML page as per your requirements., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the input and the HTML snippet provided, it appears that the specific input element related to "option1" is not included in the snippet you've shared. The HTML provided describes a form with instructions but does not contain any input elements such as checkboxes, radio buttons, text inputs, etc., that are named "option1". 

To accurately generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the HTML code that includes the `<input>` or other form element with the name "option1". This would help me understand the type of input and the appropriate command to modify it. 

Could you please provide the relevant part of the HTML code or clarify the type of input associated with "option1"?
Failed to execute an action Given the input and the HTML snippet provided, it appears that the specific input element related to "option1" is not included in the snippet you've shared. The HTML provided describes a form with instructions but does not contain any input elements such as checkboxes, radio buttons, text inputs, etc., that are named "option1". 

To accurately generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the HTML code that includes the `<input>` or other form element with the name "option1". This would help me understand the type of input and the appropriate command to modify it. 

Could you please provide the relevant part of the HTML code or clarify the type of input associated with "option1"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there was an oversight, as the provided HTML does not include form inputs related to "option2" that you've mentioned. Could you please provide the relevant segment of the HTML code that includes input elements, specifically those related to "option2"? This information will help me generate the correct command to modify the input as you wish.
Failed to execute an action It seems there was an oversight, as the provided HTML does not include form inputs related to "option2" that you've mentioned. Could you please provide the relevant segment of the HTML code that includes input elements, specifically those related to "option2"? This information will help me generate the correct command to modify the input as you wish., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option3', '<appropriate_value>')


For a select input (if applicable):

self.actions.modify_select('option3', '<appropriate_option_value>')


However, without the exact HTML structure for "option3," this remains a guess.

Please provide the complete HTML snippet including the input for "option3" or specify its type and expected values for a more accurate answer.
Failed to execute an action self.actions.modify_radio('option3', '<appropriate_value>')


For a select input (if applicable):

self.actions.modify_select('option3', '<appropriate_option_value>')


However, without the exact HTML structure for "option3," this remains a guess.

Please provide the complete HTML snippet including the input for "option3" or specify its type and expected values for a more accurate answer., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no HTML code provided that contains input elements with the name "option4". However, if you're looking to generate a command for modifying an input named "option4", you would generally need to know the input type (text, checkbox, radio, select, range) to use the correct method.

Without specific details on the type or choices related to "option4", I can't generate an accurate command. If you can provide more details or the rest of the HTML code that includes the "option4" input, I would be able to assist better.
Failed to execute an action It appears there is no HTML code provided that contains input elements with the name "option4". However, if you're looking to generate a command for modifying an input named "option4", you would generally need to know the input type (text, checkbox, radio, select, range) to use the correct method.

Without specific details on the type or choices related to "option4", I can't generate an accurate command. If you can provide more details or the rest of the HTML code that includes the "option4" input, I would be able to assist better., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34027 <-> row_number: 114
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 114 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Hard to tell', 'Hard to tell', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like there's a misunderstanding. Based on the provided HTML snippet, there's no explicit input field or form control (like radio buttons or select dropdowns) associated with the input name "option0" directly mentioned in the content you've shared. The snippet mostly contains instructional text without an actual form input example for choosing an option.

Given the absence of form controls in the snippet, I can't generate a specific command without seeing the actual input field (e.g., radio, select) associated with "option0". If you can provide that part of the HTML or clarify the type of input and the options associated with "option0", that would be helpful for generating the appropriate command.
Failed to execute an action It seems like there's a misunderstanding. Based on the provided HTML snippet, there's no explicit input field or form control (like radio buttons or select dropdowns) associated with the input name "option0" directly mentioned in the content you've shared. The snippet mostly contains instructional text without an actual form input example for choosing an option.

Given the absence of form controls in the snippet, I can't generate a specific command without seeing the actual input field (e.g., radio, select) associated with "option0". If you can provide that part of the HTML or clarify the type of input and the options associated with "option0", that would be helpful for generating the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's not enough HTML provided to identify the type of input (e.g., checkbox, radio, select) related to "option1" and what specific command should be generated. Please provide more details about the input type or further HTML code to proceed effectively.
Failed to execute an action It appears there's not enough HTML provided to identify the type of input (e.g., checkbox, radio, select) related to "option1" and what specific command should be generated. Please provide more details about the input type or further HTML code to proceed effectively., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option2', '1')


Or if it's a select menu with "Highly Likely" as
Failed to execute an action self.actions.modify_radio('option2', '1')


Or if it's a select menu with "Highly Likely" as, error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML code snippet is incomplete and does not include form inputs (e.g., checkboxes, radio buttons, select dropdowns, text inputs) directly related to the input name "option3" you've mentioned. To generate a command, I would need more information about the type of input associated with "option3" (whether it's a text input, a checkbox, a radio button, a select dropdown, or a range input), and ideally, the full relevant HTML markup that includes the form control for "option3".

Could you please provide more details or a more complete HTML snippet that includes the form input for "option3"? This will help in generating the correct command to modify the input.
Failed to execute an action It seems like the provided HTML code snippet is incomplete and does not include form inputs (e.g., checkboxes, radio buttons, select dropdowns, text inputs) directly related to the input name "option3" you've mentioned. To generate a command, I would need more information about the type of input associated with "option3" (whether it's a text input, a checkbox, a radio button, a select dropdown, or a range input), and ideally, the full relevant HTML markup that includes the form control for "option3".

Could you please provide more details or a more complete HTML snippet that includes the form input for "option3"? This will help in generating the correct command to modify the input., error: unmatched ')' (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's a misunderstanding due to the incomplete information provided. If you're looking for a way to generate a command based on the input name "option4", it's necessary to know the type of input (e.g., text, checkbox, radio, select, range) and its context within the provided HTML. However, the excerpt given doesn't clearly include an input with the name "option4" or specify its type.

For accurate assistance, I would need more details, specifically:

1. The type of input associated with "option4" (i.e., is it a checkbox, radio button, text input, selection dropdown, or range slider?).
2. The intended value or modification for "option4".

With this information, I could generate the appropriate command.
Failed to execute an action It appears there's a misunderstanding due to the incomplete information provided. If you're looking for a way to generate a command based on the input name "option4", it's necessary to know the type of input (e.g., text, checkbox, radio, select, range) and its context within the provided HTML. However, the excerpt given doesn't clearly include an input with the name "option4" or specify its type.

For accurate assistance, I would need more details, specifically:

1. The type of input associated with "option4" (i.e., is it a checkbox, radio button, text input, selection dropdown, or range slider?).
2. The intended value or modification for "option4".

With this information, I could generate the appropriate command., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33991 <-> row_number: 78
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option0', 'Highly Likely')


For accuracy, please provide the corresponding HTML input elements for "option0".
Failed to execute an action self.actions.modify_radio('option0', 'Highly Likely')


For accuracy, please provide the corresponding HTML input elements for "option0"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, it appears you may have intended to share more information or a specific set of options related to the 'option1' input. However, without seeing an input element named 'option1' or related options in the provided HTML, it's not entirely clear how you expect it to be modified.

Could you please provide the specific options or the detailed part of the HTML where 'option1' is clearly defined as an input element (like a text input, radio button, or select dropdown)? That would help generate the accurate command to modify it.
Failed to execute an action Based on the provided HTML snippet, it appears you may have intended to share more information or a specific set of options related to the 'option1' input. However, without seeing an input element named 'option1' or related options in the provided HTML, it's not entirely clear how you expect it to be modified.

Could you please provide the specific options or the detailed part of the HTML where 'option1' is clearly defined as an input element (like a text input, radio button, or select dropdown)? That would help generate the accurate command to modify it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet and the task of generating a command for modifying an input named "option2", there is insufficient information in the HTML snippet to identify the specific HTML input element associated with "option2." The snippet mainly contains instructions without any form input elements related to "option2".

To generate a valid command for modifying an input named "option2", additional details about the input element (such as its type and possible values) are required. If "option2" refers to a radio button, checkbox, text field, select dropdown, or range slider, the command would depend on that specific type. 

Please provide additional details or the complete HTML form segment that includes the input named "option2" for accurate assistance.
Failed to execute an action Given the provided HTML snippet and the task of generating a command for modifying an input named "option2", there is insufficient information in the HTML snippet to identify the specific HTML input element associated with "option2." The snippet mainly contains instructions without any form input elements related to "option2".

To generate a valid command for modifying an input named "option2", additional details about the input element (such as its type and possible values) are required. If "option2" refers to a radio button, checkbox, text field, select dropdown, or range slider, the command would depend on that specific type. 

Please provide additional details or the complete HTML form segment that includes the input named "option2" for accurate assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is a misunderstanding. The provided HTML excerpt does not include an input field named "option3" for me to generate a command to modify it. Please, could you provide the section of the HTML code where the input named "option3" is defined? This would include its type (e.g., text, checkbox, radio, select, range) so that I can generate an accurate command.
Failed to execute an action It appears there is a misunderstanding. The provided HTML excerpt does not include an input field named "option3" for me to generate a command to modify it. Please, could you provide the section of the HTML code where the input named "option3" is defined? This would include its type (e.g., text, checkbox, radio, select, range) so that I can generate an accurate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there is an incomplete HTML provided, which does not include the specific input named "option4" to modify. Without complete information including the element associated with 'option4' (whether it's a text input, checkbox, radio button, select dropdown, or a range slider), I can't generate an accurate command. Could you provide details about the 'option4' input type and the action you'd like to perform on it?
Failed to execute an action It seems there is an incomplete HTML provided, which does not include the specific input named "option4" to modify. Without complete information including the element associated with 'option4' (whether it's a text input, checkbox, radio button, select dropdown, or a range slider), I can't generate an accurate command. Could you provide details about the 'option4' input type and the action you'd like to perform on it?, error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33957 <-> row_number: 44
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain a complete form input related to "option0", nor does it actually include an input tag for a selection to be made. Therefore, I cannot generate a specific command such as modify_text, modify_checkbox, modify_radio, modify_select, or modify_range without the relevant input field structure.

Could you provide more details about the input you would like to modify or ensure the HTML includes the form field related to "option0"? This would help in generating the precise command you're asking for.
Failed to execute an action It appears that the provided HTML snippet does not contain a complete form input related to "option0", nor does it actually include an input tag for a selection to be made. Therefore, I cannot generate a specific command such as modify_text, modify_checkbox, modify_radio, modify_select, or modify_range without the relevant input field structure.

Could you provide more details about the input you would like to modify or ensure the HTML includes the form field related to "option0"? This would help in generating the precise command you're asking for., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems you were expecting a continuation of a form for selecting an option based on a scenario or question given. However, the provided HTML snippet is incomplete, and it doesn't contain specific input elements (like radio buttons, dropdowns, etc.) for which you are seeking a command. 

Please provide the complete HTML code snippet including the elements corresponding to "option1" to generate a valid command.
Failed to execute an action It seems you were expecting a continuation of a form for selecting an option based on a scenario or question given. However, the provided HTML snippet is incomplete, and it doesn't contain specific input elements (like radio buttons, dropdowns, etc.) for which you are seeking a command. 

Please provide the complete HTML code snippet including the elements corresponding to "option1" to generate a valid command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio` or `self.actions.modify_select` wouldn't be accurate or possible.
Failed to execute an action self.actions.modify_radio` or `self.actions.modify_select` wouldn't be accurate or possible., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I apologize for any confusion, but it seems the provided HTML snippet is incomplete and does not include the actual form elements such as radio buttons, checkboxes, or select options that correspond to the input name "option3". Could you please provide the complete HTML code including the element with the name "option3"? This will help me give a more accurate command to modify the input.
Failed to execute an action I apologize for any confusion, but it seems the provided HTML snippet is incomplete and does not include the actual form elements such as radio buttons, checkboxes, or select options that correspond to the input name "option3". Could you please provide the complete HTML code including the element with the name "option3"? This will help me give a more accurate command to modify the input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option4', 'input_value')` or similar.

Please provide the specific HTML `<input>` element or further details on what "option4" refers to in the provided HTML code so I can generate the appropriate command.
Failed to execute an action self.actions.modify_text('option4', 'input_value')` or similar.

Please provide the specific HTML `<input>` element or further details on what "option4" refers to in the provided HTML code so I can generate the appropriate command., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33929 <-> row_number: 16
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Likely', ''], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, it appears you're seeking to generate a command to modify an input element with the name "option0." However, the HTML snippet provided lacks the definition of an input element (such as <input>, <select>, or similar) with the name "option0." For a precise command, the exact type of input (text, checkbox, radio, select, range) and intended modification value are required.

Could you provide more details or clarify the type of input for "option0" and the value or action you'd like to apply? This would enable me to generate the correct command based on the input's characteristics and your modification requirements.
Failed to execute an action Based on the provided details, it appears you're seeking to generate a command to modify an input element with the name "option0." However, the HTML snippet provided lacks the definition of an input element (such as <input>, <select>, or similar) with the name "option0." For a precise command, the exact type of input (text, checkbox, radio, select, range) and intended modification value are required.

Could you provide more details or clarify the type of input for "option0" and the value or action you'd like to apply? This would enable me to generate the correct command based on the input's characteristics and your modification requirements., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information necessary to generate a command based on the provided HTML and input name 'option1'. The given snippet does not contain input fields related to 'option1', nor does it provide options (like radio buttons, checkboxes, or a select dropdown) that would allow assigning a specific command for modification. Additional details or a more complete section of the HTML content would be required to accurately generate a command.
Failed to execute an action It appears there's missing information necessary to generate a command based on the provided HTML and input name 'option1'. The given snippet does not contain input fields related to 'option1', nor does it provide options (like radio buttons, checkboxes, or a select dropdown) that would allow assigning a specific command for modification. Additional details or a more complete section of the HTML content would be required to accurately generate a command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided context, it appears that there is not enough HTML content related to input elements named "option2" to derive a meaningful command from the list of commands I can generate (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more HTML content related to the input element named "option2"?
Failed to execute an action Based on the provided context, it appears that there is not enough HTML content related to input elements named "option2" to derive a meaningful command from the list of commands I can generate (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more HTML content related to the input element named "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet is not complete and does not contain an input element with the name "option3" that I can give a specific command for. Please provide the complete HTML that includes the input element named "option3" so that I can generate the appropriate command.
Failed to execute an action It appears that the provided HTML snippet is not complete and does not contain an input element with the name "option3" that I can give a specific command for. Please provide the complete HTML that includes the input element named "option3" so that I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information regarding the form elements related to the input name "option4", such as <input> or <select> tags that define what kind of form control is associated with "option4". Without this information, I cannot generate a specific command as requested.

To give a useful example, I would need to know if "option4" is associated with a checkbox, radio button, text input, range slider, or select/dropdown menu in the HTML form provided. Further context on how "option4" is structured within the form (i.e., part of a series of choices or a stand-alone decision) would also be important.

Could you provide the relevant HTML segment including the form control for "option4"?
Failed to execute an action It appears there's missing information regarding the form elements related to the input name "option4", such as <input> or <select> tags that define what kind of form control is associated with "option4". Without this information, I cannot generate a specific command as requested.

To give a useful example, I would need to know if "option4" is associated with a checkbox, radio button, text input, range slider, or select/dropdown menu in the HTML form provided. Further context on how "option4" is structured within the form (i.e., part of a series of choices or a stand-alone decision) would also be important.

Could you provide the relevant HTML segment including the form control for "option4"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34068 <-> row_number: 155
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 155 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain any form controls (like input, checkbox, radio button, etc.) specifically related to the input name "option0" you provided. The snippet is also incomplete, which makes it challenging to accurately generate a command.

To generate a valid command, I would need either the complete HTML form code containing the input named "option0" and its type (e.g., text, checkbox, radio, select, range) or a clear description of what type of input "option0" is supposed to be and how you intend to modify it (e.g., its value or selection state). 

Could you please provide more detailed information or the relevant part of the HTML code?
Failed to execute an action It appears that the provided HTML snippet does not contain any form controls (like input, checkbox, radio button, etc.) specifically related to the input name "option0" you provided. The snippet is also incomplete, which makes it challenging to accurately generate a command.

To generate a valid command, I would need either the complete HTML form code containing the input named "option0" and its type (e.g., text, checkbox, radio, select, range) or a clear description of what type of input "option0" is supposed to be and how you intend to modify it (e.g., its value or selection state). 

Could you please provide more detailed information or the relevant part of the HTML code?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not include form elements (input, select, checkbox, radio, etc.) corresponding to the "option1" input name. Please provide additional details or clarify the specific input you wish to modify within the given HTML context. Without seeing the form controls related to "option1", I cannot generate a precise command.
Failed to execute an action It seems like the provided HTML snippet does not include form elements (input, select, checkbox, radio, etc.) corresponding to the "option1" input name. Please provide additional details or clarify the specific input you wish to modify within the given HTML context. Without seeing the form controls related to "option1", I cannot generate a precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you're looking for a command to modify an input named "option2", but there isn't enough information in the provided HTML snippet to determine the type of input or the available options. Could you provide more details on the input type (checkbox, radio, text, etc.) and the available options or more context in the HTML code? This information is necessary to generate the correct command.
Failed to execute an action It appears you're looking for a command to modify an input named "option2", but there isn't enough information in the provided HTML snippet to determine the type of input or the available options. Could you provide more details on the input type (checkbox, radio, text, etc.) and the available options or more context in the HTML code? This information is necessary to generate the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a misunderstanding in the request, as there is no actual input or form field related to "option3" shown in the provided HTML snippet. The snippet simply introduces instructions without showing a form field (such as a text box, radio button, checkbox, or dropdown menu) named "option3" to interact with. 

For a more accurate response, please include the part of the HTML code that contains the input named "option3", or describe the nature of the input (e.g., text, checkbox, radio button, select) so I can generate the appropriate command.
Failed to execute an action It seems there's a misunderstanding in the request, as there is no actual input or form field related to "option3" shown in the provided HTML snippet. The snippet simply introduces instructions without showing a form field (such as a text box, radio button, checkbox, or dropdown menu) named "option3" to interact with. 

For a more accurate response, please include the part of the HTML code that contains the input named "option3", or describe the nature of the input (e.g., text, checkbox, radio button, select) so I can generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a need for additional information to generate a specific command, as the provided HTML snippet does not contain input elements related to "option4". Could you please provide the relevant part of the HTML code that includes the input field named "option4"? This would typically involve a line of HTML with <input>, <select>, <textarea>, or another form element including the name "option4".
Failed to execute an action It seems there's a need for additional information to generate a specific command, as the provided HTML snippet does not contain input elements related to "option4". Could you please provide the relevant part of the HTML code that includes the input field named "option4"? This would typically involve a line of HTML with <input>, <select>, <textarea>, or another form element including the name "option4"., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33914 <-> row_number: 1
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears the provided HTML snippet and the instruction to identify the input for "option0" is incomplete or lacks context regarding the options available for modification, such as checkboxes, radio buttons, or a select menu associated with "option0". Without further HTML code detailing the input element itself, it's challenging to generate a precise command. 

Can you provide more details or the specific part of the HTML code that includes "option0" so I can assist you appropriately?
Failed to execute an action It appears the provided HTML snippet and the instruction to identify the input for "option0" is incomplete or lacks context regarding the options available for modification, such as checkboxes, radio buttons, or a select menu associated with "option0". Without further HTML code detailing the input element itself, it's challenging to generate a precise command. 

Can you provide more details or the specific part of the HTML code that includes "option0" so I can assist you appropriately?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information to generate an accurate command based on the provided HTML snippet. The snippet provides an introduction to a form but does not show the actual input fields (e.g., radio buttons, checkboxes, select dropdowns) associated with the "option1" input name. 

For a more accurate response, please provide the HTML code that includes the actual input element named "option1" and its type (checkbox, radio, select, etc.), along with the options or values that are relevant to it.
Failed to execute an action It appears there's missing information to generate an accurate command based on the provided HTML snippet. The snippet provides an introduction to a form but does not show the actual input fields (e.g., radio buttons, checkboxes, select dropdowns) associated with the "option1" input name. 

For a more accurate response, please provide the HTML code that includes the actual input element named "option1" and its type (checkbox, radio, select, etc.), along with the options or values that are relevant to it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, there are no form inputs related to "option2" explicitly shown. It seems like you're asking for a command to modify a HTML page input but didn't provide the necessary details for "option2." Can you please provide more details or clarify what action should be taken for "option2"?
Failed to execute an action Based on the provided HTML snippet, there are no form inputs related to "option2" explicitly shown. It seems like you're asking for a command to modify a HTML page input but didn't provide the necessary details for "option2." Can you please provide more details or clarify what action should be taken for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no specific HTML input element provided for "option3" within the snippet you've given. This snippet only includes headings and paragraph tags without showing any form input elements like text inputs, checkboxes, radio buttons, or select dropdowns that would correspond to "option3." Could you provide more details or the part of the HTML that includes the input element for "option3"? This would help generate the correct command.
Failed to execute an action It appears there is no specific HTML input element provided for "option3" within the snippet you've given. This snippet only includes headings and paragraph tags without showing any form input elements like text inputs, checkboxes, radio buttons, or select dropdowns that would correspond to "option3." Could you provide more details or the part of the HTML that includes the input element for "option3"? This would help generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option4', 'Highly Likely value')


or for a checkbox input:

plaintext
self.actions.modify_checkbox('option4', 'on')


Please provide the corresponding input element for "option4" or clarify the action and value expected for a precise command.
Failed to execute an action self.actions.modify_radio('option4', 'Highly Likely value')


or for a checkbox input:

plaintext
self.actions.modify_checkbox('option4', 'on')


Please provide the corresponding input element for "option4" or clarify the action and value expected for a precise command., error: invalid syntax (<string>, line 4)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34042 <-> row_number: 129
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 129 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command, I need more information about the form elements related to the "option0" input such as type (checkbox, radio, text, select, range) and the choices or the value you'd like to set for "option0". Could you provide more details or the corresponding HTML section for "option0"?
Failed to execute an action To generate a command, I need more information about the form elements related to the "option0" input such as type (checkbox, radio, text, select, range) and the choices or the value you'd like to set for "option0". Could you provide more details or the corresponding HTML section for "option0"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not include form input elements specifically related to "option1." The snippet provided gives a general context for a form, including instructions for completing it, but no actual form inputs such as radio buttons, checkboxes, or text inputs named "option1" are included in the provided HTML.

If you're looking to generate a command for a hypothetical input named "option1" that could be a part of this form, please provide details about the nature of this input (e.g., whether it's a text field, checkbox, radio button, select dropdown, or range slider) and its intended values. This additional information would allow for creating an appropriate command.
Failed to execute an action It appears that the provided HTML snippet does not include form input elements specifically related to "option1." The snippet provided gives a general context for a form, including instructions for completing it, but no actual form inputs such as radio buttons, checkboxes, or text inputs named "option1" are included in the provided HTML.

If you're looking to generate a command for a hypothetical input named "option1" that could be a part of this form, please provide details about the nature of this input (e.g., whether it's a text field, checkbox, radio button, select dropdown, or range slider) and its intended values. This additional information would allow for creating an appropriate command., error: unmatched ')' (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that there isn't enough HTML content provided to determine the type of input related to "option2" accurately. The provided snippet includes headings and paragraphs but lacks a visible input element for "option2" in the provided HTML. Therefore, I'm unable to generate a specific command without more context or visible input elements related to "option2". Could you provide more details or the specific input HTML code for "option2"?
Failed to execute an action It appears that there isn't enough HTML content provided to determine the type of input related to "option2" accurately. The provided snippet includes headings and paragraphs but lacks a visible input element for "option2" in the provided HTML. Therefore, I'm unable to generate a specific command without more context or visible input elements related to "option2". Could you provide more details or the specific input HTML code for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet does not include an input or any form elements related to the input name "option3." Thus, I'm unable to generate a specific command without knowing the type of input (text, checkbox, radio, select, range) associated with "option3". If you can provide more details or clarify the type of input, I'd be happy to help!
Failed to execute an action I'm sorry, but the provided HTML snippet does not include an input or any form elements related to the input name "option3." Thus, I'm unable to generate a specific command without knowing the type of input (text, checkbox, radio, select, range) associated with "option3". If you can provide more details or clarify the type of input, I'd be happy to help!, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there was no continuation of the HTML code provided that includes an element with the name "option4" for me to generate a specific command. Could you please provide the relevant part of the HTML code that includes the input element named "option4"? This will help me generate the correct command to modify that specific input based on the options available (text, checkbox, radio, select, range).
Failed to execute an action It seems there was no continuation of the HTML code provided that includes an element with the name "option4" for me to generate a specific command. Could you please provide the relevant part of the HTML code that includes the input element named "option4"? This will help me generate the correct command to modify that specific input based on the options available (text, checkbox, radio, select, range)., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34001 <-> row_number: 88
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and doesn't contain an input element named "option0" to interact with directly. Without a complete HTML context that includes the `<input>`, `<select>`, or any relevant form element marked with the name "option0", generating an explicit modification command is not possible based on the information given.

If you could provide the portion of the HTML code that includes the form element with the name "option0", I would be better able to generate an appropriate command to modify its value.
Failed to execute an action It seems like the provided HTML snippet is incomplete and doesn't contain an input element named "option0" to interact with directly. Without a complete HTML context that includes the `<input>`, `<select>`, or any relevant form element marked with the name "option0", generating an explicit modification command is not possible based on the information given.

If you could provide the portion of the HTML code that includes the form element with the name "option0", I would be better able to generate an appropriate command to modify its value., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet, it seems incomplete and does not include form elements (like input, select, checkbox, etc.) related to the input name "option1". If "option1" is supposed to represent a form element where the user specifies how likely an author belongs to a given in-group based on a comment, without seeing the relevant form controls (such as radio buttons or a dropdown select), I cannot generate a precise command. 

Please provide the complete HTML including the element named "option1" and its type (e.g., radio, select) so I can generate the appropriate command.
Failed to execute an action Given the provided HTML snippet, it seems incomplete and does not include form elements (like input, select, checkbox, etc.) related to the input name "option1". If "option1" is supposed to represent a form element where the user specifies how likely an author belongs to a given in-group based on a comment, without seeing the relevant form controls (such as radio buttons or a dropdown select), I cannot generate a precise command. 

Please provide the complete HTML including the element named "option1" and its type (e.g., radio, select) so I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not include the form inputs related to the "option2" input name you've mentioned. Without the specific form inputs (e.g., radio buttons, select dropdowns, checkboxes, etc.), it's challenging to generate an accurate command.

Could you please provide more details about the form element related to "option2"? Knowing the type of input (radio, checkbox, select, text, or range) and the value you wish to set would be crucial for generating the correct command.
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not include the form inputs related to the "option2" input name you've mentioned. Without the specific form inputs (e.g., radio buttons, select dropdowns, checkboxes, etc.), it's challenging to generate an accurate command.

Could you please provide more details about the form element related to "option2"? Knowing the type of input (radio, checkbox, select, text, or range) and the value you wish to set would be crucial for generating the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that there is insufficient information in the provided HTML snippet to determine the type of input control (e.g., radio button, checkbox, text input, etc.) for "option3". Could you please provide more details about the form control associated with "option3", such as the input tag or a broader section of the HTML code that includes the specific input element for "option3"? Without this information, it's challenging to generate the correct modification command.
Failed to execute an action It appears that there is insufficient information in the provided HTML snippet to determine the type of input control (e.g., radio button, checkbox, text input, etc.) for "option3". Could you please provide more details about the form control associated with "option3", such as the input tag or a broader section of the HTML code that includes the specific input element for "option3"? Without this information, it's challenging to generate the correct modification command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Could you please provide more details or the specific input change you want to make? The provided HTML snippet includes instructions but does not contain a form element (like input, select, or radio) corresponding to "option4" that I can generate a command for.
Failed to execute an action Could you please provide more details or the specific input change you want to make? The provided HTML snippet includes instructions but does not contain a form element (like input, select, or radio) corresponding to "option4" that I can generate a command for., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Scalar Adjectives Identification` = = = = = = = = = = = = 
First instance id: 9463
instance_id: 9520 <-> row_number: 57
 --> inputs: ['adj_1', 'adj_2', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_4', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 57 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['Yes', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['No', 'No', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9505 <-> row_number: 42
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'neg_qual_ctrl', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 42 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9516 <-> row_number: 53
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'pos_qual_ctrl_3', 'pos_qual_ctrl_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 53 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'No', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_10" value="Naa">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9497 <-> row_number: 34
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_1', 'adj_6', 'adj_7', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_8', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_9', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 34 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'Yes', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'Yes', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'No', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_8" value="Naa">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9527 <-> row_number: 64
 --> inputs: ['neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'pos_qual_ctrl_4', 'pos_qual_ctrl_3', 'adj_10']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['Naa', 'No', 'No'], 'adj_5': ['Yes', 'No', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_10': ['Yes', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Naa', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 9496 <-> row_number: 33
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['Yes', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_1" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_4" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9558 <-> row_number: 95
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_4', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_3', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['No', 'No', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9545 <-> row_number: 82
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 82 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'Yes', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_8" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9621 <-> row_number: 158
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'adj_6', 'pos_qual_ctrl_5', 'pos_qual_ctrl_1', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 158 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9604 <-> row_number: 141
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_4', 'pos_qual_ctrl_1', 'neg_qual_ctrl', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_3', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 141 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'No', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 9598 <-> row_number: 135
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_3', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 135 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'Naa', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 9495 <-> row_number: 32
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'pos_qual_ctrl_2', 'adj_7', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'adj_8', 'adj_9', 'pos_qual_ctrl_3', 'adj_10']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_7': ['Yes', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 9593 <-> row_number: 130
 --> inputs: ['neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'pos_qual_ctrl_5', 'pos_qual_ctrl_1', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 130 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9473 <-> row_number: 10
 --> inputs: ['adj_1', 'pos_qual_ctrl_3', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_10']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['No', 'No', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9569 <-> row_number: 106
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 106 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'Naa', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9500 <-> row_number: 37
 --> inputs: ['pos_qual_ctrl_2', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_2': ['No', 'No', 'Yes'], 'neg_qual_ctrl': ['No', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'Naa', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['Yes', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'Yes', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_1" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_6" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 9532 <-> row_number: 69
 --> inputs: ['pos_qual_ctrl_4', 'neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'No')
We are going to select this radio button: <input type="radio" name="adj_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9551 <-> row_number: 88
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_5', 'adj_4', 'neg_qual_ctrl', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'Naa', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 9486 <-> row_number: 23
 --> inputs: ['pos_qual_ctrl_3', 'adj_1', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'pos_qual_ctrl_1', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'Naa'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9489 <-> row_number: 26
 --> inputs: ['adj_1', 'pos_qual_ctrl_4', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_7', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'Naa'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'No')
We are going to select this radio button: <input type="radio" name="adj_1" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Script KD eval LONG V2 - disc result eval 1` = = = = = = = = = = = = 
First instance id: 25775
instance_id: 26004 <-> row_number: 229
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 229 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '0')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-2" value="0">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 25827 <-> row_number: 52
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [-1, 2], 'on-topic': [-1, -1], 'ordering': [-1, -1], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '3')
The input value (`3`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('on-topic', '3'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='radio' and @name='on-topic' and @value='3']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55acddcf05e3 <unknown>
#1 0x55acdd9b30b7 <unknown>
#2 0x55acdda00f53 <unknown>
#3 0x55acdda01051 <unknown>
#4 0x55acdda469c4 <unknown>
#5 0x55acdda27f1d <unknown>
#6 0x55acdda43b3d <unknown>
#7 0x55acdda27cc3 <unknown>
#8 0x55acdd9f30e4 <unknown>
#9 0x55acdd9f40ae <unknown>
#10 0x55acddcb6ce1 <unknown>
#11 0x55acddcbab7e <unknown>
#12 0x55acddca44b5 <unknown>
#13 0x55acddcbb7d6 <unknown>
#14 0x55acddc87dbf <unknown>
#15 0x55acddcde748 <unknown>
#16 0x55acddcde917 <unknown>
#17 0x55acddcef773 <unknown>
#18 0x7f98f9094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 25894 <-> row_number: 119
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 119 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [-2, 2], 'ordering': [1, 1], 'complete': [-2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '3')
The input value (`3`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('ordering', '3'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='radio' and @name='ordering' and @value='3']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55acddcf05e3 <unknown>
#1 0x55acdd9b30b7 <unknown>
#2 0x55acdda00f53 <unknown>
#3 0x55acdda01051 <unknown>
#4 0x55acdda469c4 <unknown>
#5 0x55acdda27f1d <unknown>
#6 0x55acdda43b3d <unknown>
#7 0x55acdda27cc3 <unknown>
#8 0x55acdd9f30e4 <unknown>
#9 0x55acdd9f40ae <unknown>
#10 0x55acddcb6ce1 <unknown>
#11 0x55acddcbab7e <unknown>
#12 0x55acddca44b5 <unknown>
#13 0x55acddcbb7d6 <unknown>
#14 0x55acddc87dbf <unknown>
#15 0x55acddcde748 <unknown>
#16 0x55acddcde917 <unknown>
#17 0x55acddcef773 <unknown>
#18 0x7f98f9094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25848 <-> row_number: 73
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 73 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [-1, 2], 'complete': [-1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25897 <-> row_number: 122
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 122 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [1, 2], 'ordering': [0, 1], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25800 <-> row_number: 25
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 25 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 2], 'ordering': [-1, 2], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 26009 <-> row_number: 234
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 234 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [1, 2], 'ordering': [0, 1], 'complete': [0, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 25807 <-> row_number: 32
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [0, 1], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25969 <-> row_number: 194
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 194 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 1], 'ordering': [-1, 0], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 25815 <-> row_number: 40
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [1, 2], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 25977 <-> row_number: 202
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 202 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [1, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 25976 <-> row_number: 201
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 201 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 25922 <-> row_number: 147
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 147 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25914 <-> row_number: 139
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 139 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [1, 1], 'ordering': [1, 0], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25863 <-> row_number: 88
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, 0], 'on-topic': [1, 1], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25786 <-> row_number: 11
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 2], 'ordering': [2, 1], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25859 <-> row_number: 84
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 84 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 2], 'ordering': [2, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 25888 <-> row_number: 113
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 113 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [1, 1], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25844 <-> row_number: 69
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, -1], 'on-topic': [1, 2], 'ordering': [-2, 0], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25950 <-> row_number: 175
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, -1], 'on-topic': [0, 2], 'ordering': [-1, 1], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Sherlock IMG 2 TXT Eval 15` = = = = = = = = = = = = 
First instance id: 17695
instance_id: 18027 <-> row_number: 332
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 332 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17748 <-> row_number: 53
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 53 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')


If the target value is different or there are more options to choose from that weren't included in the snippet you provided, please provide the correct value or further instructions.
Failed to execute an action self.actions.modify_radio('elicited_label_answer6', '3')


If the target value is different or there are more options to choose from that weren't included in the snippet you provided, please provide the correct value or further instructions., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')


Please provide the desired action or more details if you're looking for a different command.
Failed to execute an action self.actions.modify_radio('elicited_label_answer10', '3')


Please provide the desired action or more details if you're looking for a different command., error: unterminated string literal (detected at line 4) (<string>, line 4)
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17730 <-> row_number: 35
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: I'm sorry, but you haven't provided information on what command is expected or sufficient context around the HTML element's purpose. Specifically, without knowing which value or modification you want to apply to the radio button with the name `elicited_label_answer8`, it's impossible to generate an accurate command. Could you please provide more details or clarify the desired value for this radio input?
Failed to execute an action I'm sorry, but you haven't provided information on what command is expected or sufficient context around the HTML element's purpose. Specifically, without knowing which value or modification you want to apply to the radio button with the name `elicited_label_answer8`, it's impossible to generate an accurate command. Could you please provide more details or clarify the desired value for this radio input?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17910 <-> row_number: 215
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 215 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 3], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')


If you intended to select a different option or if there were specific criteria to choose an option, please provide that information for a more accurate command.
Failed to execute an action self.actions.modify_radio('elicited_label_answer4', '3')


If you intended to select a different option or if there were specific criteria to choose an option, please provide that information for a more accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17856 <-> row_number: 161
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 161 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17700 <-> row_number: 5
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [2, 1], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [3, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18145 <-> row_number: 450
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 450 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [2, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [1, 3], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')

We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')

We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 17971 <-> row_number: 276
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 276 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17794 <-> row_number: 99
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 99 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 3], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [3, 3], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


This command selects the value '3' for the radio input named "elicited_label_answer2". If you meant to select a different option or need further actions, please provide more details or options.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


This command selects the value '3' for the radio input named "elicited_label_answer2". If you meant to select a different option or need further actions, please provide more details or options., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 17975 <-> row_number: 280
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 280 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [1, 3], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 3], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18026 <-> row_number: 331
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 331 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18138 <-> row_number: 443
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 443 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 3], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


If there were specific values you intended to select, it's crucial to ensure the desired value is correctly indicated in the command for the appropriate action desired.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


If there were specific values you intended to select, it's crucial to ensure the desired value is correctly indicated in the command for the appropriate action desired., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 17870 <-> row_number: 175
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [3, 1], 'elicited_label_answer3': [3, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18025 <-> row_number: 330
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 330 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [1, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 18034 <-> row_number: 339
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 339 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 1], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [3, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 18084 <-> row_number: 389
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 389 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17872 <-> row_number: 177
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 177 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: Your input is not clear on what modification is desired for the given HTML element. To generate a valid command, please specify the desired value you would like to set for the input named "elicited_label_answer4".
Failed to execute an action Your input is not clear on what modification is desired for the given HTML element. To generate a valid command, please specify the desired value you would like to set for the input named "elicited_label_answer4"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18088 <-> row_number: 393
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 393 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [3, 1], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 17726 <-> row_number: 31
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


This command assumes that the desired action is to select the radio button with the value "3". If a different action is intended, please provide the specific action or value that should be selected.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


This command assumes that the desired action is to select the radio button with the value "3". If a different action is intended, please provide the specific action or value that should be selected., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')


If you intended a different value to be set for "elicited_label_answer3", please replace '3' with the correct value.
Failed to execute an action self.actions.modify_radio('elicited_label_answer3', '3')


If you intended a different value to be set for "elicited_label_answer3", please replace '3' with the correct value., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17807 <-> row_number: 112
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 112 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `wikiHow step-goal linking pilot cleanse-url` = = = = = = = = = = = = 
First instance id: 27732
instance_id: 27736 <-> row_number: 4
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 0], 'candidate_1': [1, 1, 1], 'candidate_2': [1, 3, 1], 'candidate_3': [0, 2, 1], 'candidate_4': [0, 2, 1], 'candidate_5': [0, 0, 2], 'candidate_6': [1, 3, 2], 'candidate_7': [1, 1, 1], 'candidate_8': [1, 3, 0], 'candidate_9': [0, 3, 1], 'candidate_10': [2, 3, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0]}
instance_id: 27732 <-> row_number: 0
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 1], 'candidate_1': [1, 2, 1], 'candidate_2': [0, 2, 1], 'candidate_3': [0, 1, 1], 'candidate_4': [1, 1, 3], 'candidate_5': [1, 1, 2], 'candidate_6': [0, 0, 1], 'candidate_7': [1, 2, 1], 'candidate_8': [0, 1, 2], 'candidate_9': [3, 3, 3], 'candidate_10': [3, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 27747 <-> row_number: 15
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 2, 3], 'candidate_1': [0, 0, 0], 'candidate_2': [1, 0, 2], 'candidate_3': [2, 0, 2], 'candidate_4': [3, 3, 3], 'candidate_5': [1, 1, 2], 'candidate_6': [2, 2, 0], 'candidate_7': [1, 0, 0], 'candidate_8': [3, 3, 3], 'candidate_9': [2, 0, 2], 'candidate_10': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27804 <-> row_number: 72
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 3, 3], 'candidate_1': [1, 3, 3], 'candidate_2': [0, 3, 2], 'candidate_3': [1, 0, 0], 'candidate_4': [1, 3, 3], 'candidate_5': [0, 3, 1], 'candidate_6': [0, 0, 3], 'candidate_7': [2, 1, 3], 'candidate_8': [1, 0, 1], 'candidate_9': [0, 3, 3], 'candidate_10': [1, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27748 <-> row_number: 16
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 3], 'candidate_1': [1, 1, 3], 'candidate_2': [1, 0, 3], 'candidate_3': [0, 0, 3], 'candidate_4': [0, 1, 1], 'candidate_5': [0, 0, 0], 'candidate_6': [0, 1, 0], 'candidate_7': [0, 0, 2], 'candidate_8': [0, 1, 3], 'candidate_9': [3, 2, 3], 'candidate_10': [0, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 27810 <-> row_number: 78
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 3, 2], 'candidate_1': [1, 1, 0], 'candidate_2': [0, 3, 3], 'candidate_3': [1, 1, 2], 'candidate_4': [0, 0, 3], 'candidate_5': [3, 2, 3], 'candidate_6': [1, 1, 3], 'candidate_7': [2, 2, 2], 'candidate_8': [1, 3, 1], 'candidate_9': [0, 3, 3], 'candidate_10': [1, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 27809 <-> row_number: 77
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 77 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [1, 0, 1], 'candidate_2': [2, 1, 1], 'candidate_3': [3, 0, 3], 'candidate_4': [1, 1, 2], 'candidate_5': [1, 0, 2], 'candidate_6': [2, 1, 1], 'candidate_7': [3, 0, 3], 'candidate_8': [1, 1, 0], 'candidate_9': [3, 1, 3], 'candidate_10': [1, 0, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27737 <-> row_number: 5
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 0, 3], 'candidate_1': [3, 0, 2], 'candidate_2': [2, 2, 2], 'candidate_3': [1, 1, 2], 'candidate_4': [1, 2, 1], 'candidate_5': [3, 0, 3], 'candidate_6': [1, 0, 3], 'candidate_7': [1, 0, 1], 'candidate_8': [0, 0, 1], 'candidate_9': [1, 0, 3], 'candidate_10': [0, 1, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 27781 <-> row_number: 49
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [0, 1, 3], 'candidate_2': [0, 1, 3], 'candidate_3': [3, 1, 3], 'candidate_4': [1, 1, 1], 'candidate_5': [1, 1, 3], 'candidate_6': [0, 1, 1], 'candidate_7': [1, 1, 2], 'candidate_8': [2, 1, 3], 'candidate_9': [3, 1, 3], 'candidate_10': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 27807 <-> row_number: 75
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 75 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 0, 2], 'candidate_1': [0, 1, 1], 'candidate_2': [0, 2, 2], 'candidate_3': [2, 1, 3], 'candidate_4': [1, 1, 2], 'candidate_5': [3, 1, 3], 'candidate_6': [1, 2, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [2, 1, 2], 'candidate_9': [3, 2, 3], 'candidate_10': [0, 0, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')


If your intention was different or you need further modifications based on a wider HTML context or specific user input value, please provide those details for more accurate assistance.
Failed to execute an action self.actions.modify_radio('candidate_3', '0')


If your intention was different or you need further modifications based on a wider HTML context or specific user input value, please provide those details for more accurate assistance., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 27784 <-> row_number: 52
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 1], 'candidate_1': [1, 1, 0], 'candidate_2': [2, 0, 0], 'candidate_3': [1, 1, 0], 'candidate_4': [1, 0, 2], 'candidate_5': [1, 1, 0], 'candidate_6': [1, 0, 0], 'candidate_7': [1, 1, 3], 'candidate_8': [0, 0, 2], 'candidate_9': [1, 0, 0], 'candidate_10': [1, 0, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 27793 <-> row_number: 61
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 0, 3], 'candidate_1': [2, 0, 3], 'candidate_2': [0, 1, 2], 'candidate_3': [1, 1, 3], 'candidate_4': [2, 1, 2], 'candidate_5': [2, 0, 3], 'candidate_6': [2, 0, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [0, 0, 2], 'candidate_9': [3, 0, 3], 'candidate_10': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 27769 <-> row_number: 37
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [2, 0, 3], 'candidate_2': [3, 1, 3], 'candidate_3': [1, 1, 3], 'candidate_4': [0, 2, 3], 'candidate_5': [3, 1, 3], 'candidate_6': [2, 0, 1], 'candidate_7': [3, 1, 3], 'candidate_8': [0, 1, 2], 'candidate_9': [0, 1, 2], 'candidate_10': [2, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 27800 <-> row_number: 68
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 68 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 2, 3], 'candidate_1': [0, 1, 3], 'candidate_2': [0, 0, 3], 'candidate_3': [0, 0, 0], 'candidate_4': [0, 2, 3], 'candidate_5': [3, 3, 3], 'candidate_6': [3, 3, 3], 'candidate_7': [0, 0, 3], 'candidate_8': [2, 2, 2], 'candidate_9': [0, 2, 3], 'candidate_10': [2, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 27783 <-> row_number: 51
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 51 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 0, 1], 'candidate_1': [0, 1, 0], 'candidate_2': [0, 0, 1], 'candidate_3': [3, 1, 1], 'candidate_4': [2, 1, 2], 'candidate_5': [1, 1, 1], 'candidate_6': [3, 2, 0], 'candidate_7': [0, 1, 1], 'candidate_8': [3, 1, 1], 'candidate_9': [2, 1, 2], 'candidate_10': [2, 0, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27742 <-> row_number: 10
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 1, 3], 'candidate_1': [0, 1, 3], 'candidate_2': [0, 1, 2], 'candidate_3': [3, 0, 3], 'candidate_4': [1, 2, 2], 'candidate_5': [0, 1, 1], 'candidate_6': [0, 1, 2], 'candidate_7': [0, 0, 1], 'candidate_8': [2, 1, 3], 'candidate_9': [0, 1, 1], 'candidate_10': [0, 0, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 27751 <-> row_number: 19
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 3, 3], 'candidate_1': [1, 2, 2], 'candidate_2': [0, 3, 2], 'candidate_3': [1, 0, 2], 'candidate_4': [2, 3, 2], 'candidate_5': [1, 3, 3], 'candidate_6': [1, 3, 2], 'candidate_7': [2, 0, 3], 'candidate_8': [1, 3, 2], 'candidate_9': [1, 3, 2], 'candidate_10': [0, 0, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 27758 <-> row_number: 26
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 3, 3], 'candidate_1': [1, 0, 0], 'candidate_2': [0, 3, 3], 'candidate_3': [2, 2, 1], 'candidate_4': [1, 0, 0], 'candidate_5': [2, 2, 1], 'candidate_6': [0, 3, 1], 'candidate_7': [3, 3, 1], 'candidate_8': [2, 0, 0], 'candidate_9': [2, 0, 0], 'candidate_10': [0, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 27734 <-> row_number: 2
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 2], 'candidate_1': [3, 1, 3], 'candidate_2': [0, 2, 1], 'candidate_3': [3, 1, 3], 'candidate_4': [3, 0, 1], 'candidate_5': [1, 1, 1], 'candidate_6': [1, 0, 3], 'candidate_7': [1, 1, 0], 'candidate_8': [1, 0, 2], 'candidate_9': [3, 1, 2], 'candidate_10': [2, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27791 <-> row_number: 59
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 59 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 1, 3], 'candidate_1': [3, 0, 3], 'candidate_2': [2, 1, 2], 'candidate_3': [1, 1, 2], 'candidate_4': [2, 1, 2], 'candidate_5': [3, 0, 1], 'candidate_6': [2, 1, 2], 'candidate_7': [1, 2, 2], 'candidate_8': [1, 1, 3], 'candidate_9': [1, 1, 3], 'candidate_10': [3, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Arch - Rel Eval 3` = = = = = = = = = = = = 
First instance id: 33654
instance_id: 33672 <-> row_number: 18
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [2.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [2.0, 2.0, 1.0], 'coherent-3': [1, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 2], 'diverse-3': [2.0, 2.0, 1.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [2, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [1, 1, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.64
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33695 <-> row_number: 41
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 1.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [1.0, 2.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 2], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33654 <-> row_number: 0
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 1.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': ['', 2.0, 2.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [2, 1, 1], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 2, 2], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 2], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [2, 1, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33673 <-> row_number: 19
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, '', 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [1.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [2, 2, 1], 'complete-5': [2, 2, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.84
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 33661 <-> row_number: 7
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [2.0, 1.0, 2.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 1, 2], 'complete-3': [2, 1, 2], 'intra-3': [2, 1, 2], 'diverse-3': [2.0, 1.0, 1.0], 'bestq-3': [2, 2, 2], 'coherent-4': [1, 1, 2], 'complete-4': [1.0, 2.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 1, 1], 'bestq-4': [1, 1, 2], 'coherent-5': [1, 1, 2], 'complete-5': [1, 1, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 1, 2], 'bestq-5': [1, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.44
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33702 <-> row_number: 48
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 48 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 2.0], 'complete-1': [1.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 2], 'complete-3': [1, 1, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, 2.0, 1.0], 'bestq-3': [1, 1, 2], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 1, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 2], 'complete-5': [1, 1, 2], 'intra-5': [1.0, 2.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.72
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 33681 <-> row_number: 27
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 2, 1], 'complete-3': [2, 2, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [2, 2, 1], 'coherent-4': [2, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [2, 1, 1], 'complete-5': [2, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.68
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33674 <-> row_number: 20
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 20 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 1.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [1.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, '', 2.0], 'bestq-2': [1.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 1], 'intra-3': [2, 2, 1], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [2, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 2.0, ''], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [2, 1, 1], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, '', 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, '']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33669 <-> row_number: 15
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 2.0], 'complete-2': [1.0, 1.0, 2.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 1.0, 2.0], 'coherent-3': [2, 1, 2], 'complete-3': [2, 1, 2], 'intra-3': [2, 1, 2], 'diverse-3': [1.0, 1.0, 2.0], 'bestq-3': [2, 1, 2], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [2, 2, 2], 'coherent-5': [2, 1, 2], 'complete-5': [2, 1, 2], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33678 <-> row_number: 24
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 2.0], 'diverse-1': [1.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [2.0, 2.0, 1.0], 'intra-2': [2.0, 1.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 1.0, 1.0], 'coherent-3': [1, 2, 2], 'complete-3': [1, 2, 2], 'intra-3': [1, 2, 2], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 2, 1], 'complete-5': [1, 2, 2], 'intra-5': [1.0, 2.0, 2.0], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33685 <-> row_number: 31
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 1.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 2, 1], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 2, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.88
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33658 <-> row_number: 4
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 1.0], 'complete-1': [2.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 2, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 2, 1], 'coherent-4': [2, 1, 2], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [2, 1, 2], 'coherent-5': [2, 2, 1], 'complete-5': [2, 1, 1], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.48
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33676 <-> row_number: 22
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 1.0], 'complete-1': [2.0, 2.0, 1.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 1], 'bestq-4': [2, 2, 2], 'coherent-5': [1, 2, 1], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.32
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33700 <-> row_number: 46
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 46 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 2.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 2.0], 'coherent-3': [1, 2, 2], 'complete-3': [1, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, 2.0, 2.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 1, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [1, 1, 2], 'complete-5': [2, 1, 2], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [1, 2, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.56
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 33666 <-> row_number: 12
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [1.0, '', 1.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [2, 1, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.96
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33660 <-> row_number: 6
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 1.0], 'complete-1': [1.0, 2.0, 1.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [1, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [2, 1, 2], 'coherent-4': [1, 1, 2], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [1.0, 1.0, 2.0], 'diverse-4': [1, 1, 1], 'bestq-4': [1, 1, 2], 'coherent-5': [2, 2, 1], 'complete-5': [2, 2, 1], 'intra-5': [2.0, 2.0, 1.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.28
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33665 <-> row_number: 11
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 1.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 1, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.96
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33682 <-> row_number: 28
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [1.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 2.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 1, 1], 'bestq-4': [2, 2, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 33694 <-> row_number: 40
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 1.0, 2.0], 'bestq-1': [1.0, '', 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, '', 1.0], 'diverse-4': [1, 2, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 2.0, ''], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, '']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33684 <-> row_number: 30
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [1.0, 1.0, 1.0], 'bestq-2': [2.0, 1.0, 1.0], 'coherent-3': [2, 1, 2], 'complete-3': [1, 1, 1], 'intra-3': [1, 2, 2], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 2, 2], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [1, 1, 1], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
input Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
input Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
input Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
input Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
input Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
input Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
input Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
input Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
input Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
input Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
input Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
input Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
input Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
input Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
input Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
input Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
input Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
input Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
input Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
input Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
input Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
input Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
input Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
input Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
input Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.56
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Compression HIT` = = = = = = = = = = = = 
First instance id: 7310
instance_id: 7705 <-> row_number: 395
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_3', 'grammar_0_3', 'meaning_0_11', 'grammar_0_11', 'meaning_0_10', 'grammar_0_10', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_9', 'grammar_0_9']
 --> Looking up gold labels from row index 395 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [5, 5], 'grammar_0_6': [5, 5], 'meaning_0_3': [5, 5], 'grammar_0_3': [5, 5], 'meaning_0_11': [1, 1], 'grammar_0_11': [1, 1], 'meaning_0_10': [1, 2], 'grammar_0_10': [2, 2], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 5], 'meaning_0_7': [1, 1], 'grammar_0_7': [1, 2], 'meaning_0_0': [2, 3], 'grammar_0_0': [1, 5], 'meaning_0_4': [5, 5], 'grammar_0_4': [5, 5], 'meaning_0_1': [2, 2], 'grammar_0_1': [2, 1], 'meaning_0_8': [4, 5], 'grammar_0_8': [5, 4], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_9': [4, 5], 'grammar_0_9': [5, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 8110 <-> row_number: 800
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 800 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [4, 4], 'grammar_0_3': [4, 3], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_10': [5, 5], 'grammar_0_10': [3, 4], 'meaning_0_1': [4, 4], 'grammar_0_1': [3, 2], 'meaning_0_0': [3, 4], 'grammar_0_0': [3, 4], 'meaning_0_7': [3, 1], 'grammar_0_7': [2, 1], 'meaning_0_8': [3, 3], 'grammar_0_8': [3, 1], 'meaning_0_4': [5, 5], 'grammar_0_4': [3, 5], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 5], 'meaning_0_11': [4, 5], 'grammar_0_11': [4, 4], 'meaning_0_9': [4, 4], 'grammar_0_9': [4, 3], 'meaning_0_6': [5, 5], 'grammar_0_6': [5, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 7429 <-> row_number: 119
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_6', 'grammar_0_6', 'meaning_0_11', 'grammar_0_11', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_3', 'grammar_0_3', 'meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4']
 --> Looking up gold labels from row index 119 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [4, 4], 'grammar_0_2': [4, 3], 'meaning_0_1': [2, 5], 'grammar_0_1': [1, 3], 'meaning_0_6': [3, 4], 'grammar_0_6': [1, 2], 'meaning_0_11': [3, 2], 'grammar_0_11': [1, 1], 'meaning_0_5': [1, 1], 'grammar_0_5': [1, 1], 'meaning_0_8': [2, 3], 'grammar_0_8': [2, 2], 'meaning_0_3': [4, 3], 'grammar_0_3': [4, 1], 'meaning_0_10': [2, 2], 'grammar_0_10': [1, 1], 'meaning_0_9': [4, 3], 'grammar_0_9': [2, 2], 'meaning_0_7': [1, 1], 'grammar_0_7': [1, 1], 'meaning_0_0': [4, 4], 'grammar_0_0': [5, 5], 'meaning_0_4': [1, 2], 'grammar_0_4': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7963 <-> row_number: 653
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_11', 'grammar_0_11', 'meaning_0_7', 'grammar_0_7', 'meaning_0_8', 'grammar_0_8', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3']
 --> Looking up gold labels from row index 653 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [5, 5], 'grammar_0_2': [5, 3], 'meaning_0_10': [4, 4], 'grammar_0_10': [4, 1], 'meaning_0_5': [4, 3], 'grammar_0_5': [3, 2], 'meaning_0_1': [4, 2], 'grammar_0_1': [3, 1], 'meaning_0_0': [4, 3], 'grammar_0_0': [5, 5], 'meaning_0_11': [4, 4], 'grammar_0_11': [4, 1], 'meaning_0_7': [4, 3], 'grammar_0_7': [3, 1], 'meaning_0_8': [4, 4], 'grammar_0_8': [2, 2], 'meaning_0_9': [4, 2], 'grammar_0_9': [2, 2], 'meaning_0_6': [5, 5], 'grammar_0_6': [5, 3], 'meaning_0_4': [4, 5], 'grammar_0_4': [5, 3], 'meaning_0_3': [4, 5], 'grammar_0_3': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')


In case there was a misunderstanding or if you have more information or another input name you wanted to modify, please provide additional details.
Failed to execute an action self.actions.modify_select('meaning_0_1', '5')


In case there was a misunderstanding or if you have more information or another input name you wanted to modify, please provide additional details., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_0', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 7892 <-> row_number: 582
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_6', 'grammar_0_6', 'meaning_0_9', 'grammar_0_9', 'meaning_0_10', 'grammar_0_10', 'meaning_0_8', 'grammar_0_8', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 582 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [1, 4], 'grammar_0_1': [2, 4], 'meaning_0_3': [5, 4], 'grammar_0_3': [5, 3], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 4], 'meaning_0_7': [1, 2], 'grammar_0_7': [2, 3], 'meaning_0_6': [5, 5], 'grammar_0_6': [5, 4], 'meaning_0_9': [1, 4], 'grammar_0_9': [2, 1], 'meaning_0_10': [1, 3], 'grammar_0_10': [2, 3], 'meaning_0_8': [4, 3], 'grammar_0_8': [3, 2], 'meaning_0_0': [1, 2], 'grammar_0_0': [2, 3], 'meaning_0_4': [1, 3], 'grammar_0_4': [2, 3], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_11': [1, 4], 'grammar_0_11': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')


This command assumes the intention was to select the option with the value "blank" for the `select` element named `meaning_0_1`. If this is not what was intended, please provide the correct input name or more specific instructions related to the operation that needs to be performed.
Failed to execute an action self.actions.modify_select('meaning_0_1', 'blank')


This command assumes the intention was to select the option with the value "blank" for the `select` element named `meaning_0_1`. If this is not what was intended, please provide the correct input name or more specific instructions related to the operation that needs to be performed., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')


However, if there was indeed a mismatch in the input name provided and the one in the HTML snippet, and you were referring to another element not included in the snippet, please provide the correct input name or additional context so I could offer a more accurate command.
Failed to execute an action self.actions.modify_select('meaning_0_5', '5')


However, if there was indeed a mismatch in the input name provided and the one in the HTML snippet, and you were referring to another element not included in the snippet, please provide the correct input name or additional context so I could offer a more accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8075 <-> row_number: 765
 --> inputs: ['meaning_0_7', 'grammar_0_7', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10']
 --> Looking up gold labels from row index 765 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_7': [1, 2, 2], 'grammar_0_7': [1, 1, 1], 'meaning_0_4': [2, 5, 4], 'grammar_0_4': [2, 4, 2], 'meaning_0_2': [3, 5, 2], 'grammar_0_2': [5, 4, 2], 'meaning_0_3': [2, 4, 3], 'grammar_0_3': [2, 2, 2], 'meaning_0_1': [3, 3, 3], 'grammar_0_1': [3, 3, 4], 'meaning_0_11': [4, 5, 3], 'grammar_0_11': [2, 3, 2], 'meaning_0_8': [2, 3, 1], 'grammar_0_8': [1, 2, 1], 'meaning_0_0': [2, 4, 5], 'grammar_0_0': [5, 3, 4], 'meaning_0_9': [1, 2, 5], 'grammar_0_9': [1, 2, 1], 'meaning_0_6': [2, 3, 4], 'grammar_0_6': [1, 2, 2], 'meaning_0_5': [3, 5, 5], 'grammar_0_5': [2, 3, 3], 'meaning_0_10': [2, 4, 3], 'grammar_0_10': [1, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')


In case "grammar_0_2" refers to another operation or detail not fully provided in your text, please clarify your intent or provide additional details about the modification you aim to achieve.
Failed to execute an action self.actions.modify_select('meaning_0_2', '5')


In case "grammar_0_2" refers to another operation or detail not fully provided in your text, please clarify your intent or provide additional details about the modification you aim to achieve., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')

We are going to select this select `meaning_0_10` with value `5`
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 7732 <-> row_number: 422
 --> inputs: ['meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_2', 'grammar_0_2', 'meaning_0_6', 'grammar_0_6', 'meaning_0_1', 'grammar_0_1', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_10', 'grammar_0_10', 'meaning_0_8', 'grammar_0_8', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 422 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_5': [3, 3, 3], 'grammar_0_5': [2, 2, 2], 'meaning_0_7': [2, 3, 3], 'grammar_0_7': [4, 1, 2], 'meaning_0_0': [3, 2, 3], 'grammar_0_0': [4, 4, 2], 'meaning_0_9': [3, 3, 2], 'grammar_0_9': [4, 4, 2], 'meaning_0_2': [4, 3, 5], 'grammar_0_2': [3, 2, 5], 'meaning_0_6': [4, 4, 5], 'grammar_0_6': [3, 4, 3], 'meaning_0_1': [3, 3, 3], 'grammar_0_1': [2, 2, 2], 'meaning_0_3': [3, 3, 5], 'grammar_0_3': [3, 3, 4], 'meaning_0_4': [4, 4, 3], 'grammar_0_4': [3, 4, 4], 'meaning_0_10': [3, 3, 5], 'grammar_0_10': [4, 2, 5], 'meaning_0_8': [3, 3, 5], 'grammar_0_8': [2, 2, 2], 'meaning_0_11': [3, 3, 5], 'grammar_0_11': [3, 4, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7829 <-> row_number: 519
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_10', 'grammar_0_10', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_9', 'grammar_0_9', 'meaning_0_5', 'grammar_0_5', 'meaning_0_6', 'grammar_0_6', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_8', 'grammar_0_8', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 519 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [3, 4], 'grammar_0_4': [2, 5], 'meaning_0_10': [3, 4], 'grammar_0_10': [2, 5], 'meaning_0_3': [4, 4], 'grammar_0_3': [4, 5], 'meaning_0_2': [4, 4], 'grammar_0_2': [5, 5], 'meaning_0_9': [4, 5], 'grammar_0_9': [4, 5], 'meaning_0_5': [4, 4], 'grammar_0_5': [4, 5], 'meaning_0_6': [4, 4], 'grammar_0_6': [5, 5], 'meaning_0_1': [2, 4], 'grammar_0_1': [2, 3], 'meaning_0_0': [2, 2], 'grammar_0_0': [4, 4], 'meaning_0_7': [2, 3], 'grammar_0_7': [2, 4], 'meaning_0_8': [4, 5], 'grammar_0_8': [3, 5], 'meaning_0_11': [4, 4], 'grammar_0_11': [4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')


To generate a more precise command, I'd need the specific value you wish to set for "meaning_0_5", considering the options actually available within the select element.
Failed to execute an action self.actions.modify_select('meaning_0_5', '5')


To generate a more precise command, I'd need the specific value you wish to set for "meaning_0_5", considering the options actually available within the select element., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7956 <-> row_number: 646
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_10', 'grammar_0_10', 'meaning_0_6', 'grammar_0_6', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_11', 'grammar_0_11', 'meaning_0_1', 'grammar_0_1']
 --> Looking up gold labels from row index 646 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [5, 3, 5], 'grammar_0_2': [5, 3, 5], 'meaning_0_0': [4, 3, 3], 'grammar_0_0': [3, 2, 4], 'meaning_0_9': [5, 5, 3], 'grammar_0_9': [3, 3, 4], 'meaning_0_3': [4, 3, 3], 'grammar_0_3': [2, 2, 2], 'meaning_0_8': [5, 4, 3], 'grammar_0_8': [2, 3, 2], 'meaning_0_10': [3, 4, 4], 'grammar_0_10': [1, 2, 2], 'meaning_0_6': [5, 5, 5], 'grammar_0_6': [5, 4, 5], 'meaning_0_4': [4, 3, 3], 'grammar_0_4': [2, 3, 4], 'meaning_0_5': [4, 4, 4], 'grammar_0_5': [2, 2, 3], 'meaning_0_7': [4, 4, 3], 'grammar_0_7': [2, 2, 2], 'meaning_0_11': [4, 4, 4], 'grammar_0_11': [2, 2, 3], 'meaning_0_1': [4, 3, 3], 'grammar_0_1': [2, 2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', '5')
We are going to select this select `grammar_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8072 <-> row_number: 762
 --> inputs: ['meaning_0_8', 'grammar_0_8', 'meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_2', 'grammar_0_2', 'meaning_0_7', 'grammar_0_7', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3']
 --> Looking up gold labels from row index 762 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_8': [4, 3], 'grammar_0_8': [2, 1], 'meaning_0_1': [4, 2], 'grammar_0_1': [3, 1], 'meaning_0_4': [4, 3], 'grammar_0_4': [3, 1], 'meaning_0_6': [4, 3], 'grammar_0_6': [4, 4], 'meaning_0_5': [3, 2], 'grammar_0_5': [2, 1], 'meaning_0_10': [4, 3], 'grammar_0_10': [2, 1], 'meaning_0_0': [4, 3], 'grammar_0_0': [2, 1], 'meaning_0_2': [5, 4], 'grammar_0_2': [5, 5], 'meaning_0_7': [2, 1], 'grammar_0_7': [2, 1], 'meaning_0_11': [5, 3], 'grammar_0_11': [2, 1], 'meaning_0_9': [3, 2], 'grammar_0_9': [2, 1], 'meaning_0_3': [5, 3], 'grammar_0_3': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'your_desired_option_value')


Make sure to replace `'your_desired_option_value'` with the actual value you wish to select. For example, if you wanted to select the option with the value "5" which is already selected, you would use the command exactly as shown above. If there was a different option you wanted to select, you'd replace `'your_desired_option_value'` with the value attribute of that option.
Failed to execute an action self.actions.modify_select('meaning_0_1', 'your_desired_option_value')


Make sure to replace `'your_desired_option_value'` with the actual value you wish to select. For example, if you wanted to select the option with the value "5" which is already selected, you would use the command exactly as shown above. If there was a different option you wanted to select, you'd replace `'your_desired_option_value'` with the value attribute of that option., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')


This command selects the option with value "5", which is described as "identical" for the select element named "meaning_0_6". If you have a specific value in mind to select, just replace '5' with the corresponding option value you wish to select.
Failed to execute an action self.actions.modify_select('meaning_0_6', '5')


This command selects the option with value "5", which is described as "identical" for the select element named "meaning_0_6". If you have a specific value in mind to select, just replace '5' with the corresponding option value you wish to select., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')


This command will select the option with value "5", which corresponds to "identical" in the provided HTML snippet for the select element named "meaning_0_5". If "grammar_0_5" was meant to refer to a different element or action, more specific details would be needed to provide the accurate command.
Failed to execute an action self.actions.modify_select('meaning_0_5', '5')


This command will select the option with value "5", which corresponds to "identical" in the provided HTML snippet for the select element named "meaning_0_5". If "grammar_0_5" was meant to refer to a different element or action, more specific details would be needed to provide the accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')


This command assumes you want to select the "identical" option for the dropdown menu. If you had a different value or question in mind, please provide the corresponding value you wanted to select or correct the input name.
Failed to execute an action self.actions.modify_select('meaning_0_3', '5')


This command assumes you want to select the "identical" option for the dropdown menu. If you had a different value or question in mind, please provide the corresponding value you wanted to select or correct the input name., error: invalid syntax (<string>, line 4)
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7660 <-> row_number: 350
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_2', 'grammar_0_2', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_8', 'grammar_0_8', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9']
 --> Looking up gold labels from row index 350 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [4, 3], 'grammar_0_6': [3, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [3, 4], 'meaning_0_5': [4, 1], 'grammar_0_5': [3, 2], 'meaning_0_7': [4, 4], 'grammar_0_7': [3, 3], 'meaning_0_1': [4, 3], 'grammar_0_1': [3, 1], 'meaning_0_10': [5, 5], 'grammar_0_10': [3, 4], 'meaning_0_0': [5, 5], 'grammar_0_0': [5, 5], 'meaning_0_3': [5, 2], 'grammar_0_3': [5, 2], 'meaning_0_4': [5, 5], 'grammar_0_4': [4, 4], 'meaning_0_8': [5, 5], 'grammar_0_8': [3, 4], 'meaning_0_11': [5, 5], 'grammar_0_11': [3, 4], 'meaning_0_9': [4, 1], 'grammar_0_9': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', 'nan')


This command assumes the intention is to modify the selection for "meaning_0_7", but the specific value you wish to set is not mentioned. I used 'nan' as a placeholder, please replace 'nan' with the actual value you'd like to set, corresponding to one of the `<option>` values within your `<select>` element.
Failed to execute an action self.actions.modify_select('meaning_0_7', 'nan')


This command assumes the intention is to modify the selection for "meaning_0_7", but the specific value you wish to set is not mentioned. I used 'nan' as a placeholder, please replace 'nan' with the actual value you'd like to set, corresponding to one of the `<option>` values within your `<select>` element., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: It seems there was a misunderstanding in the request. Could you please clarify the desired operation you'd like to perform on the select element named "grammar_0_10"? The HTML provided doesn't match the input name you've mentioned; the select element is named "meaning_0_10".
Failed to execute an action It seems there was a misunderstanding in the request. Could you please clarify the desired operation you'd like to perform on the select element named "grammar_0_10"? The HTML provided doesn't match the input name you've mentioned; the select element is named "meaning_0_10"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')


This command selects the option with the value "5" for the select element named "meaning_0_8", which is the currently selected option based on the HTML provided. However, if you intended to change this selection to a different value, you need to provide the correct value to select.
Failed to execute an action self.actions.modify_select('meaning_0_8', '5')


This command selects the option with the value "5" for the select element named "meaning_0_8", which is the currently selected option based on the HTML provided. However, if you intended to change this selection to a different value, you need to provide the correct value to select., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_11', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7406 <-> row_number: 96
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_6', 'grammar_0_6', 'meaning_0_10', 'grammar_0_10']
 --> Looking up gold labels from row index 96 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [4, 3], 'grammar_0_1': [2, 2], 'meaning_0_4': [5, 3], 'grammar_0_4': [3, 2], 'meaning_0_11': [4, 3], 'grammar_0_11': [2, 2], 'meaning_0_9': [4, 3], 'grammar_0_9': [2, 2], 'meaning_0_3': [5, 5], 'grammar_0_3': [3, 4], 'meaning_0_0': [5, 5], 'grammar_0_0': [4, 4], 'meaning_0_8': [3, 4], 'grammar_0_8': [3, 2], 'meaning_0_2': [4, 5], 'grammar_0_2': [3, 5], 'meaning_0_7': [4, 1], 'grammar_0_7': [2, 2], 'meaning_0_5': [4, 3], 'grammar_0_5': [2, 2], 'meaning_0_6': [2, 2], 'grammar_0_6': [2, 2], 'meaning_0_10': [3, 3], 'grammar_0_10': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7975 <-> row_number: 665
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_9', 'grammar_0_9', 'meaning_0_4', 'grammar_0_4', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5']
 --> Looking up gold labels from row index 665 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_3': [4, 5], 'grammar_0_3': [4, 5], 'meaning_0_1': [5, 4], 'grammar_0_1': [2, 3], 'meaning_0_10': [4, 3], 'grammar_0_10': [4, 3], 'meaning_0_7': [4, 3], 'grammar_0_7': [3, 4], 'meaning_0_0': [4, 5], 'grammar_0_0': [3, 5], 'meaning_0_11': [4, 5], 'grammar_0_11': [3, 3], 'meaning_0_8': [4, 2], 'grammar_0_8': [2, 2], 'meaning_0_9': [4, 3], 'grammar_0_9': [2, 2], 'meaning_0_4': [4, 5], 'grammar_0_4': [4, 3], 'meaning_0_6': [4, 5], 'grammar_0_6': [5, 5], 'meaning_0_5': [4, 5], 'grammar_0_5': [4, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 8216 <-> row_number: 906
 --> inputs: ['meaning_0_7', 'grammar_0_7', 'meaning_0_1', 'grammar_0_1', 'meaning_0_6', 'grammar_0_6', 'meaning_0_0', 'grammar_0_0', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10']
 --> Looking up gold labels from row index 906 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_7': [1, 3], 'grammar_0_7': [2, 2], 'meaning_0_1': [2, 4], 'grammar_0_1': [2, 3], 'meaning_0_6': [2, 3], 'grammar_0_6': [2, 2], 'meaning_0_0': [3, 4], 'grammar_0_0': [5, 4], 'meaning_0_2': [5, 4], 'grammar_0_2': [4, 4], 'meaning_0_4': [3, 3], 'grammar_0_4': [4, 3], 'meaning_0_11': [4, 4], 'grammar_0_11': [4, 3], 'meaning_0_8': [5, 5], 'grammar_0_8': [4, 3], 'meaning_0_9': [2, 3], 'grammar_0_9': [2, 2], 'meaning_0_3': [4, 4], 'grammar_0_3': [5, 3], 'meaning_0_5': [2, 3], 'grammar_0_5': [2, 2], 'meaning_0_10': [4, 4], 'grammar_0_10': [4, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', 'blank')
We are going to select this select `grammar_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7926 <-> row_number: 616
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_5', 'grammar_0_5', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_11', 'grammar_0_11', 'meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_3', 'grammar_0_3', 'meaning_0_9', 'grammar_0_9', 'meaning_0_4', 'grammar_0_4']
 --> Looking up gold labels from row index 616 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [3, 5], 'grammar_0_2': [3, 2], 'meaning_0_5': [3, 5], 'grammar_0_5': [2, 2], 'meaning_0_6': [3, 5], 'grammar_0_6': [4, 2], 'meaning_0_8': [5, 5], 'grammar_0_8': [2, 2], 'meaning_0_7': [3, 5], 'grammar_0_7': [1, 2], 'meaning_0_11': [3, 5], 'grammar_0_11': [2, 2], 'meaning_0_0': [5, 3], 'grammar_0_0': [5, 4], 'meaning_0_1': [3, 5], 'grammar_0_1': [2, 2], 'meaning_0_10': [2, 5], 'grammar_0_10': [1, 2], 'meaning_0_3': [1, 5], 'grammar_0_3': [1, 5], 'meaning_0_9': [1, 5], 'grammar_0_9': [4, 2], 'meaning_0_4': [3, 5], 'grammar_0_4': [4, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', 'desired_value')


You would replace `'desired_value'` with the actual value you wish to select. If "grammar_0_2" was indeed the target for modification and it relates to a different element not shown here, then please provide the correct HTML section for that element or clarify the modification needed.
Failed to execute an action self.actions.modify_select('meaning_0_2', 'desired_value')


You would replace `'desired_value'` with the actual value you wish to select. If "grammar_0_2" was indeed the target for modification and it relates to a different element not shown here, then please provide the correct HTML section for that element or clarify the modification needed., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7784 <-> row_number: 474
 --> inputs: ['meaning_0_10', 'grammar_0_10', 'meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_6', 'grammar_0_6', 'meaning_0_9', 'grammar_0_9', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_5', 'grammar_0_5']
 --> Looking up gold labels from row index 474 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_10': [4, 4], 'grammar_0_10': [2, 2], 'meaning_0_3': [4, 5], 'grammar_0_3': [3, 4], 'meaning_0_0': [2, 4], 'grammar_0_0': [2, 3], 'meaning_0_7': [2, 2], 'grammar_0_7': [1, 2], 'meaning_0_4': [3, 4], 'grammar_0_4': [2, 2], 'meaning_0_1': [4, 4], 'grammar_0_1': [2, 3], 'meaning_0_11': [4, 4], 'grammar_0_11': [2, 2], 'meaning_0_6': [2, 3], 'grammar_0_6': [1, 2], 'meaning_0_9': [3, 3], 'grammar_0_9': [2, 2], 'meaning_0_8': [3, 3], 'grammar_0_8': [2, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_5': [3, 2], 'grammar_0_5': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'new_value_here')


Replace `"new_value_here"` with the actual value you wish to select. Without the full HTML of the select field showing all options, I cannot provide a specific value.
Failed to execute an action self.actions.modify_select('meaning_0_8', 'new_value_here')


Replace `"new_value_here"` with the actual value you wish to select. Without the full HTML of the select field showing all options, I cannot provide a specific value., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 7465 <-> row_number: 155
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_9', 'grammar_0_9', 'meaning_0_1', 'grammar_0_1', 'meaning_0_7', 'grammar_0_7', 'meaning_0_4', 'grammar_0_4', 'meaning_0_8', 'grammar_0_8', 'meaning_0_10', 'grammar_0_10', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 155 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [4, 4], 'grammar_0_6': [2, 3], 'meaning_0_3': [3, 4], 'grammar_0_3': [1, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [4, 2], 'meaning_0_9': [3, 2], 'grammar_0_9': [1, 2], 'meaning_0_1': [5, 5], 'grammar_0_1': [2, 2], 'meaning_0_7': [4, 2], 'grammar_0_7': [1, 1], 'meaning_0_4': [5, 4], 'grammar_0_4': [1, 2], 'meaning_0_8': [3, 2], 'grammar_0_8': [1, 1], 'meaning_0_10': [3, 2], 'grammar_0_10': [1, 1], 'meaning_0_5': [3, 3], 'grammar_0_5': [1, 1], 'meaning_0_0': [3, 4], 'grammar_0_0': [4, 4], 'meaning_0_11': [3, 2], 'grammar_0_11': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_6', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', '5')
We are going to select this select `grammar_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')


If "grammar_0_1" refers to a different element or action not clearly specified in the provided context, more detailed information would be needed to generate the correct command.
Failed to execute an action self.actions.modify_select('meaning_0_1', '5')


If "grammar_0_1" refers to a different element or action not clearly specified in the provided context, more detailed information would be needed to generate the correct command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7472 <-> row_number: 162
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_0', 'grammar_0_0', 'meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 162 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [2, 2, 4], 'grammar_0_3': [1, 4, 2], 'meaning_0_2': [4, 5, 3], 'grammar_0_2': [4, 5, 4], 'meaning_0_4': [3, 4, 2], 'grammar_0_4': [1, 4, 1], 'meaning_0_1': [3, 2, 3], 'grammar_0_1': [1, 2, 3], 'meaning_0_7': [3, 4, 4], 'grammar_0_7': [2, 4, 2], 'meaning_0_5': [4, 4, 3], 'grammar_0_5': [1, 4, 4], 'meaning_0_8': [2, 1, 5], 'grammar_0_8': [1, 1, 4], 'meaning_0_0': [4, 5, 1], 'grammar_0_0': [4, 5, 2], 'meaning_0_10': [2, 3, 4], 'grammar_0_10': [1, 2, 1], 'meaning_0_9': [3, 2, 3], 'grammar_0_9': [4, 4, 2], 'meaning_0_11': [3, 3, 3], 'grammar_0_11': [4, 2, 3], 'meaning_0_6': [2, 4, 4], 'grammar_0_6': [2, 5, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_0', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')

We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8290 <-> row_number: 980
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7']
 --> Looking up gold labels from row index 980 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [4, 5], 'grammar_0_3': [4, 3], 'meaning_0_2': [4, 5], 'grammar_0_2': [4, 3], 'meaning_0_8': [4, 5], 'grammar_0_8': [3, 2], 'meaning_0_4': [4, 5], 'grammar_0_4': [2, 3], 'meaning_0_9': [4, 4], 'grammar_0_9': [2, 3], 'meaning_0_6': [2, 3], 'grammar_0_6': [1, 2], 'meaning_0_1': [4, 5], 'grammar_0_1': [4, 3], 'meaning_0_10': [3, 3], 'grammar_0_10': [4, 3], 'meaning_0_11': [3, 4], 'grammar_0_11': [3, 1], 'meaning_0_5': [2, 2], 'grammar_0_5': [4, 4], 'meaning_0_0': [5, 4], 'grammar_0_0': [4, 5], 'meaning_0_7': [3, 3], 'grammar_0_7': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')


This command selects the option with the value '5' for the `<select>` element named 'meaning_0_8'.

If, however, there was a specific action intended for 'grammar_0_8' that isn't covered by the provided HTML snippet, please provide the corresponding HTML code or clarify the required action for the precise input name.
Failed to execute an action self.actions.modify_select('meaning_0_8', '5')


This command selects the option with the value '5' for the `<select>` element named 'meaning_0_8'.

If, however, there was a specific action intended for 'grammar_0_8' that isn't covered by the provided HTML snippet, please provide the corresponding HTML code or clarify the required action for the precise input name., error: unterminated string literal (detected at line 6) (<string>, line 6)
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_0', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 8272 <-> row_number: 962
 --> inputs: ['meaning_0_11', 'grammar_0_11', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_1', 'grammar_0_1', 'meaning_0_9', 'grammar_0_9', 'meaning_0_0', 'grammar_0_0', 'meaning_0_10', 'grammar_0_10', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 962 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_11': [2, 3], 'grammar_0_11': [2, 1], 'meaning_0_2': [4, 5], 'grammar_0_2': [5, 5], 'meaning_0_4': [3, 4], 'grammar_0_4': [2, 1], 'meaning_0_7': [2, 2], 'grammar_0_7': [2, 1], 'meaning_0_5': [3, 4], 'grammar_0_5': [4, 3], 'meaning_0_3': [4, 4], 'grammar_0_3': [4, 2], 'meaning_0_8': [3, 5], 'grammar_0_8': [2, 2], 'meaning_0_1': [3, 4], 'grammar_0_1': [2, 1], 'meaning_0_9': [4, 5], 'grammar_0_9': [2, 2], 'meaning_0_0': [3, 5], 'grammar_0_0': [4, 4], 'meaning_0_10': [3, 4], 'grammar_0_10': [2, 1], 'meaning_0_6': [2, 5], 'grammar_0_6': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
input Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
input Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
input Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
input Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
input Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
input Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
input Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
input Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
input Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
input Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
input Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
input Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
input Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
input Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
input Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
input Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
input Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
input Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
input Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
input Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
input Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
input Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
input Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
input Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
Executing one action: It appears there was an error in the assignment of the task. The given HTML snippet and the input name "grammar_0_6" suggest that a correction or selection related to grammar or sentence structure is expected. However, the HTML code provided does not contain an input element with the name "grammar_0_6"; rather, it contains a select element with the name "meaning_0_6", and the option with the value "5" is selected, corresponding to the word "identical."

Given this discrepancy, an accurate command based on the provided instructions cannot be generated. The input name does not match the type of input (select element) shown in the HTML. If the task is to change the selection for the "meaning_0_6" select element, please provide the desired value to select. If the task involves something else, please clarify or correct the input name or HTML provided.
Failed to execute an action It appears there was an error in the assignment of the task. The given HTML snippet and the input name "grammar_0_6" suggest that a correction or selection related to grammar or sentence structure is expected. However, the HTML code provided does not contain an input element with the name "grammar_0_6"; rather, it contains a select element with the name "meaning_0_6", and the option with the value "5" is selected, corresponding to the word "identical."

Given this discrepancy, an accurate command based on the provided instructions cannot be generated. The input name does not match the type of input (select element) shown in the HTML. If the task is to change the selection for the "meaning_0_6" select element, please provide the desired value to select. If the task involves something else, please clarify or correct the input name or HTML provided., error: invalid syntax (<string>, line 1)
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Formalize this` = = = = = = = = = = = = 
First instance id: 17675
instance_id: 17679 <-> row_number: 4
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your casual version of the email goes here...')

Add text `Your casual version of the email goes here...` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your casual version of the email goes here...']
 visible_values : ['Your casual version of the email goes here...']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.']`
----> answers: `['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.']` - type: `<class 'list'>`
----> baseline_answer: `Your casual version of the email goes here...` - type: `<class 'str'>`
 --> scores:  0.0303030303030303
----> per-field score: 0.0303030303030303
 --> Per-instance overall score: 0.0303030303030303
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303]}
instance_id: 17682 <-> row_number: 7
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?", "Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your content goes here.')


Remember, 'Your content goes here.' should be replaced with the actual formal text you wish to submit. If you provide the original email content and how you'd like it altered, I could offer a more specific example or help craft the formal email.
Failed to execute an action self.actions.modify_text('Q6MultiLineTextInput', 'Your content goes here.')


Remember, 'Your content goes here.' should be replaced with the actual formal text you wish to submit. If you provide the original email content and how you'd like it altered, I could offer a more specific example or help craft the formal email., error: unterminated string literal (detected at line 4) (<string>, line 4)
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['']
 visible_values : ['']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?", "Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You."]`
----> answers: `["Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You.", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?", "I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0]}
instance_id: 17681 <-> row_number: 6
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your casual tone rewritten email text goes here.')
Add text `Your casual tone rewritten email text goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your casual tone rewritten email text goes here.']
 visible_values : ['Your casual tone rewritten email text goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]`
----> answers: `['EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]` - type: `<class 'list'>`
----> baseline_answer: `Your casual tone rewritten email text goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0]}
instance_id: 17688 <-> row_number: 13
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life.", "Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised formal email content here.')
Add text `Your revised formal email content here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised formal email content here.']
 visible_values : ['Your revised formal email content here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life.", "Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again"]`
----> answers: `["Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again", "Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life."]` - type: `<class 'list'>`
----> baseline_answer: `Your revised formal email content here.` - type: `<class 'str'>`
 --> scores:  0.041666666666666664
----> per-field score: 0.041666666666666664
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664]}
instance_id: 17675 <-> row_number: 0
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: It appears there is no specific input value provided for modification based on the instructions provided. Could you please specify what text you would like to insert into the textarea with the name "Q6MultiLineTextInput"?
Failed to execute an action It appears there is no specific input value provided for modification based on the instructions provided. Could you please specify what text you would like to insert into the textarea with the name "Q6MultiLineTextInput"?, error: invalid syntax (<string>, line 1)
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['']
 visible_values : ['']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]`
----> answers: `["I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0]}
instance_id: 17684 <-> row_number: 9
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.', 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised text goes here')
Add text `Your revised text goes here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised text goes here']
 visible_values : ['Your revised text goes here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.', 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.']`
----> answers: `["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.', 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.']` - type: `<class 'list'>`
----> baseline_answer: `Your revised text goes here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0]}
instance_id: 17678 <-> row_number: 3
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help.", "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your new text here')
Add text `Your new text here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your new text here']
 visible_values : ['Your new text here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help.", "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading"]`
----> answers: `["There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help.", 'The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading"]` - type: `<class 'list'>`
----> baseline_answer: `Your new text here` - type: `<class 'str'>`
 --> scores:  0.04166666666666667
----> per-field score: 0.04166666666666667
 --> Per-instance overall score: 0.04166666666666667
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667]}
instance_id: 17690 <-> row_number: 15
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.', 'The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised text here')
Add text `Your revised text here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised text here']
 visible_values : ['Your revised text here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.', 'The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.']`
----> answers: `['The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.', 'We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.']` - type: `<class 'list'>`
----> baseline_answer: `Your revised text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0]}
instance_id: 17687 <-> row_number: 12
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court.", "Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your rewritten casual version of the email goes here')
Add text `Your rewritten casual version of the email goes here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your rewritten casual version of the email goes here']
 visible_values : ['Your rewritten casual version of the email goes here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court.", "Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court."]`
----> answers: `["Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court.", "Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court."]` - type: `<class 'list'>`
----> baseline_answer: `Your rewritten casual version of the email goes here` - type: `<class 'str'>`
 --> scores:  0.05128205128205128
----> per-field score: 0.05128205128205128
 --> Per-instance overall score: 0.05128205128205128
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128]}
instance_id: 17686 <-> row_number: 11
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]", 'I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', 'I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised content here')
Add text `Your revised content here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised content here']
 visible_values : ['Your revised content here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]", 'I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', 'I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.']`
----> answers: `['I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.', 'I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', "Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]"]` - type: `<class 'list'>`
----> baseline_answer: `Your revised content here` - type: `<class 'str'>`
 --> scores:  0.028985507246376812
----> per-field score: 0.028985507246376812
 --> Per-instance overall score: 0.028985507246376812
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812]}
instance_id: 17676 <-> row_number: 1
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your modified text goes here.')
Add text `Your modified text goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your modified text goes here.']
 visible_values : ['Your modified text goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]`
----> answers: `["I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]` - type: `<class 'list'>`
----> baseline_answer: `Your modified text goes here.` - type: `<class 'str'>`
 --> scores:  0.025974025974025972
----> per-field score: 0.025974025974025972
 --> Per-instance overall score: 0.025974025974025972
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972]}
instance_id: 17691 <-> row_number: 16
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)", 'To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your rewritten casual version of the email goes here.')
Add text `Your rewritten casual version of the email goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your rewritten casual version of the email goes here.']
 visible_values : ['Your rewritten casual version of the email goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)", 'To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.']`
----> answers: `['To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', "Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)", 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.']` - type: `<class 'list'>`
----> baseline_answer: `Your rewritten casual version of the email goes here.` - type: `<class 'str'>`
 --> scores:  0.12765957446808512
----> per-field score: 0.12765957446808512
 --> Per-instance overall score: 0.12765957446808512
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512]}
instance_id: 17677 <-> row_number: 2
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance', "Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your custom casual tone text here')
Add text `Your custom casual tone text here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your custom casual tone text here']
 visible_values : ['Your custom casual tone text here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance', "Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly."]`
----> answers: `["Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly.", 'More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance']` - type: `<class 'list'>`
----> baseline_answer: `Your custom casual tone text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0]}
instance_id: 17685 <-> row_number: 10
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your rewritten casual version of the email goes here.')
Add text `Your rewritten casual version of the email goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your rewritten casual version of the email goes here.']
 visible_values : ['Your rewritten casual version of the email goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']`
----> answers: `["Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']` - type: `<class 'list'>`
----> baseline_answer: `Your rewritten casual version of the email goes here.` - type: `<class 'str'>`
 --> scores:  0.08
----> per-field score: 0.08
 --> Per-instance overall score: 0.08
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08]}
instance_id: 17692 <-> row_number: 17
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day', 'In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised text here')
Add text `Your revised text here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised text here']
 visible_values : ['Your revised text here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day', 'In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.']`
----> answers: `['In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.', 'In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day']` - type: `<class 'list'>`
----> baseline_answer: `Your revised text here` - type: `<class 'str'>`
 --> scores:  0.04761904761904762
----> per-field score: 0.04761904761904762
 --> Per-instance overall score: 0.04761904761904762
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762]}
instance_id: 17680 <-> row_number: 5
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.', '"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.', '"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised, more formal email content goes here.')
Add text `Your revised, more formal email content goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised, more formal email content goes here.']
 visible_values : ['Your revised, more formal email content goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.', '"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.', '"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.']`
----> answers: `['"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.', '"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.', 'I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.']` - type: `<class 'list'>`
----> baseline_answer: `Your revised, more formal email content goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762, 0.0]}
instance_id: 17683 <-> row_number: 8
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on.", 'Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'your_casual_text_here')

Add text `your_casual_text_here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['your_casual_text_here']
 visible_values : ['your_casual_text_here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on.", 'Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.']`
----> answers: `['Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.', "I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on."]` - type: `<class 'list'>`
----> baseline_answer: `your_casual_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762, 0.0, 0.0]}
instance_id: 17694 <-> row_number: 19
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?', 'There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your revised text here')
Add text `Your revised text here` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your revised text here']
 visible_values : ['Your revised text here']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?', 'There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you."]`
----> answers: `['There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you.", 'How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?']` - type: `<class 'list'>`
----> baseline_answer: `Your revised text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762, 0.0, 0.0, 0.0]}
instance_id: 17689 <-> row_number: 14
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.', 'A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your rewritten casual tone email content goes here.')
Add text `Your rewritten casual tone email content goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your rewritten casual tone email content goes here.']
 visible_values : ['Your rewritten casual tone email content goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.', 'A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks."]`
----> answers: `['The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks.", 'A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.']` - type: `<class 'list'>`
----> baseline_answer: `Your rewritten casual tone email content goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17693 <-> row_number: 18
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)", "Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you.", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
input Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'Your desired text for rewriting the email in a more casual tone goes here.')
Add text `Your desired text for rewriting the email in a more casual tone goes here.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['Your desired text for rewriting the email in a more casual tone goes here.']
 visible_values : ['Your desired text for rewriting the email in a more casual tone goes here.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)", "Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you.", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!']`
----> answers: `["I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!', "Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you."]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text for rewriting the email in a more casual tone goes here.` - type: `<class 'str'>`
 --> scores:  0.07058823529411765
----> per-field score: 0.07058823529411765
 --> Per-instance overall score: 0.07058823529411765
 --> Per-instance per-field breakdown: {'textarea': [0.0303030303030303, 0.0, 0.0, 0.041666666666666664, 0.0, 0.0, 0.04166666666666667, 0.0, 0.05128205128205128, 0.028985507246376812, 0.025974025974025972, 0.12765957446808512, 0.0, 0.08, 0.04761904761904762, 0.0, 0.0, 0.0, 0.0, 0.07058823529411765]}
 = = = = = = = = = = = = starting new task: `JiminyCricket-HumanVal-b10` = = = = = = = = = = = = 
First instance id: 11835
instance_id: 11843 <-> row_number: 8
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.', "I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.'], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'goodSelf', 'goodSelf|badSelf', 'goodSelf|badOthers', 'badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', '{}', 'Got a monster changed into a newt.', 'the dragon is chased off with a water spell, the monster gets transformed into a newt'], 'badOthersScore': ['', '', '', 3.0, 2.0], 'badSelfRationale': ['{}', '{}', 'Character puts self in dangerous situations and risks injury.', '{}', 'the character is targeted by a powerful magic spell from the wizard'], 'badSelfScore': ['', '', 1.0, '', 1.0], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', 'The character protected themselves with magic.', 'Character uses a spell to save self from falling.', "Didn't get killed", '{}'], 'goodSelfScore': ['', 3.0, 3.0, 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary content here')
Add text `Your summary content here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given the input name "judgment" and looking at the provided HTML snippet, it seems we are dealing with a disabled checkbox that is a part of a form indicating a judgment (potentially moral judgment) related to "Good for Others". However, since the checkbox is disabled in the given HTML, it cannot be directly modified using the typical modify commands provided and also does not fit directly with any of the modify command examples provided originally (such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, `modify_range`) without altering the disabled state.

If hypothetically, the checkbox could be enabled and then modified, or if there's a task outside of this provided context (like enabling and selecting the checkbox programmatically as part of a form automation or testing process), the closest command to use (assuming the checkbox could be interacted with) would be the `modify_checkbox` command.

However, to directly answer based on the provided scenario and sticking strictly to the capabilities as described:

This specific scenario does not have a straightforward way of being handled by the provided commands due to the checkbox being disabled. If one were to assume the checkbox could be enabled or if the task was to document how one might programmatically modify this checkbox if it were not disabled, then
Failed to execute an action Given the input name "judgment" and looking at the provided HTML snippet, it seems we are dealing with a disabled checkbox that is a part of a form indicating a judgment (potentially moral judgment) related to "Good for Others". However, since the checkbox is disabled in the given HTML, it cannot be directly modified using the typical modify commands provided and also does not fit directly with any of the modify command examples provided originally (such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, `modify_range`) without altering the disabled state.

If hypothetically, the checkbox could be enabled and then modified, or if there's a task outside of this provided context (like enabling and selecting the checkbox programmatically as part of a form automation or testing process), the closest command to use (assuming the checkbox could be interacted with) would be the `modify_checkbox` command.

However, to directly answer based on the provided scenario and sticking strictly to the capabilities as described:

This specific scenario does not have a straightforward way of being handled by the provided commands due to the checkbox being disabled. If one were to assume the checkbox could be enabled or if the task was to document how one might programmatically modify this checkbox if it were not disabled, then, error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary content here']
 visible_values : ['Your summary content here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.', "I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.']`
----> answers: `["I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', 'You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary content here` - type: `<class 'str'>`
 --> scores:  0.0425531914893617
----> per-field score: 0.0425531914893617
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'goodSelf', 'badSelf|goodSelf', 'badOthers|goodSelf', 'badOthers|badSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'goodSelf', 'badSelf|goodSelf', 'badOthers|goodSelf', 'badOthers|badSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3475177304964539
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617], 'radio': [0.0], 'checkbox': [1.0]}
instance_id: 11842 <-> row_number: 7
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating.", "I'm learning about where I am. I found a secret door and got some items!", 'The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.', "I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box."], 'moralSaliency': ['salient', 'salient', 'salient', 'notSalient', 'salient'], 'judgment': ['goodOthers', 'goodSelf', 'goodSelf', '', 'goodSelf|badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', 'Dr. Wendish performing experiments on patients.'], 'badOthersScore': ['', '', '', '', 3.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', "Invading someone's privacy by looking through their things."], 'badSelfScore': ['', '', '', '', 2.0], 'goodOthersRationale': ['The character is working toward solving a crime.', '{}', '{}', '{}', '{}'], 'goodOthersScore': [2.0, '', '', '', ''], 'goodSelfRationale': ['{}', 'Character learns important information.', 'Exploring and finding cool stuff.', '{}', 'I discover crime from Dr. Wendish.'], 'goodSelfScore': ['', 1.0, 3.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text goes here.')
Add text `Your summary text goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: I'm sorry for any confusion, but based on the information provided, it seems there was an attempt to interact with a disabled checkbox element. This specific element for "judgment" with a value of "goodOthers" is marked as disabled and cannot be directly interacted with using the provided commands in a standard scenario. 

However, if the goal was to enable and change this disabled checkbox or perform an action on a different, enabled input, could you please provide more details or clarify the action intended? 

For actions on enabled inputs, a typical command structure is given, but it cannot be applied to disabled inputs without further context or modification capabilities that might not be reflected in the static HTML provided.
Failed to execute an action I'm sorry for any confusion, but based on the information provided, it seems there was an attempt to interact with a disabled checkbox element. This specific element for "judgment" with a value of "goodOthers" is marked as disabled and cannot be directly interacted with using the provided commands in a standard scenario. 

However, if the goal was to enable and change this disabled checkbox or perform an action on a different, enabled input, could you please provide more details or clarify the action intended? 

For actions on enabled inputs, a typical command structure is given, but it cannot be applied to disabled inputs without further context or modification capabilities that might not be reflected in the static HTML provided., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text goes here.']
 visible_values : ['Your summary text goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating.", "I'm learning about where I am. I found a secret door and got some items!", 'The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.', "I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box."]`
----> answers: `['The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.', "I'm learning about where I am. I found a secret door and got some items!", 'The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', "I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box.", "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary text goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'goodSelf', 'goodSelf', '', 'badOthers|badSelf|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'goodSelf', 'goodSelf', '', 'badOthers|badSelf|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0], 'radio': [0.0, 0.0], 'checkbox': [1.0, 1.0]}
instance_id: 11837 <-> row_number: 2
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'badOthers', 'goodSelf|badOthers', 'badOthers', 'goodSelf|badOthers'], 'badOthersRationale': ['{}', 'The character injures someone and trespasses.', 'The character harmed someone in a struggle using an elephant prod. They also trespass.', "The character's action resulted in a person being shocked by an elephant prod", "Character trespasses in someone's trailer."], 'badOthersScore': ['', 2.0, 2.0, 2.0, 1.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character gained a new item from the office.', '{}', 'Character fends off an attack.'], 'goodSelfScore': ['', '', 1.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text goes here.')
Add text `Your summary text goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given the HTML provided and the fact that the `<input>` with the name "judgment" is disabled, it's not possible to directly modify this input as typically done with interactive elements. For these types of scenarios, it might require altering the HTML to enable the input or a different action that is outside the context of using the specified command set (`modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, `modify_range`). 

Given the limitations, no valid command from the provided list can directly interact with a disabled input element. 

However, if you're looking for a command to potentially interact with related elements (assuming they are actionable), you might want to clarify the exact interaction you aim to achieve or provide details if it's a different input than the one specified.
Failed to execute an action Given the HTML provided and the fact that the `<input>` with the name "judgment" is disabled, it's not possible to directly modify this input as typically done with interactive elements. For these types of scenarios, it might require altering the HTML to enable the input or a different action that is outside the context of using the specified command set (`modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, `modify_range`). 

Given the limitations, no valid command from the provided list can directly interact with a disabled input element. 

However, if you're looking for a command to potentially interact with related elements (assuming they are actionable), you might want to clarify the exact interaction you aim to achieve or provide details if it's a different input than the one specified., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text goes here.']
 visible_values : ['Your summary text goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."]`
----> answers: `["The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", 'You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary text goes here.` - type: `<class 'str'>`
 --> scores:  0.03389830508474576
----> per-field score: 0.03389830508474576
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3446327683615819
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576], 'radio': [0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0]}
instance_id: 11852 <-> row_number: 17
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."], 'moralSaliency': ['notSalient', 'salient', 'notSalient', 'salient', 'salient'], 'judgment': ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', 'The character startled Monica, scaring her.', '{}', '{}', '{}'], 'badOthersScore': ['', 1.0, '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', "They're talking to me."], 'goodOthersScore': ['', '', '', '', 1.0], 'goodSelfRationale': ['{}', '{}', '{}', 'Main character discovers a potential clue.', "I'm getting down to the bottom of the mystery."], 'goodSelfScore': ['', '', '', 1.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text goes here.')
Add text `Your summary text goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


But bear in mind this specific command will not work as intended because the input field is disabled and the provided methods don't include enabling a disabled field.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


But bear in mind this specific command will not work as intended because the input field is disabled and the provided methods don't include enabling a disabled field., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text goes here.']
 visible_values : ['Your summary text goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."]`
----> answers: `['The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', "I'm waiting for Monica in a workshop. I'm learning more information.", 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary text goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'notSalient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0]}
instance_id: 11847 <-> row_number: 12
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.'], 'moralSaliency': ['notSalient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['', '', 'goodSelf', 'goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character acquires an axe.', 'Character finds useful items', 'character takes many opportunities to learn new things.'], 'goodSelfScore': ['', '', 1.0, 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


To interact with this element as is, either the disabled attribute must be removed from the HTML or the interaction needs to be handled programmatically in a way that bypasses the disabled state, which typically would require adjustments to the webpage's underlying code or scripts.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


To interact with this element as is, either the disabled attribute must be removed from the HTML or the interaction needs to be handled programmatically in a way that bypasses the disabled state, which typically would require adjustments to the webpage's underlying code or scripts., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']`
----> answers: `['The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', 'goodSelf', 'goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', '', 'goodSelf', 'goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11850 <-> row_number: 15
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.', 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.', "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", 'Character explores a circus. They confront someone, gaining information, then go scare an elephant.', "I'm trying to find information and stuff in a circus. Lots of animals are around."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['badOthers', 'badOthers', 'badOthers', 'goodSelf|badOthers', 'goodSelf'], 'badOthersRationale': ['The character possibly injured the elephant and caused the elephant to do damage to the circus.', 'The character steals someones clothes', 'You take a mouse and show it to an elephant, causing the elephant to eventually break off its chains in fear and stampede out of the tent.', 'Character scares an elephant into stampeding.', '{}'], 'badOthersScore': [1.0, 1.0, 2.0, 2.0, ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', 'Character learns new information.', 'Hunting for information.'], 'goodSelfScore': ['', '', '', 1.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


But since the element is disabled, interacting with it programmatically requires either enabling it first via JavaScript or other means, or directly working with the backend or the system that manages these inputs if you're testing or controlling beyond simple client-side interactions. 

If you have control over the HTML or the page's JavaScript, consider enabling the element before attempting to modify its state. Otherwise, clarify the objective if you're working within a testing framework or application that can simulate or force interactions beyond the typical client-side limitations.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


But since the element is disabled, interacting with it programmatically requires either enabling it first via JavaScript or other means, or directly working with the backend or the system that manages these inputs if you're testing or controlling beyond simple client-side interactions. 

If you have control over the HTML or the page's JavaScript, consider enabling the element before attempting to modify its state. Otherwise, clarify the objective if you're working within a testing framework or application that can simulate or force interactions beyond the typical client-side limitations., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.', 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.', "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", 'Character explores a circus. They confront someone, gaining information, then go scare an elephant.', "I'm trying to find information and stuff in a circus. Lots of animals are around."]`
----> answers: `['The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.', 'Character explores a circus. They confront someone, gaining information, then go scare an elephant.', "I'm trying to find information and stuff in a circus. Lots of animals are around.", "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers', 'badOthers', 'badOthers', 'badOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers', 'badOthers', 'badOthers', 'badOthers|goodSelf', 'goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 11844 <-> row_number: 9
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', 'The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it.", "I'm in a broken area. I'm waiting and listening to a magpie."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', '{}', 'The character frees a caged bird.', '{}', '{}'], 'badOthersScore': [1.0, '', 1.0, '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': [1.0, '', '', '', ''], 'goodOthersRationale': ['You released the magpie', 'The character opened a cage door and freed a magpie bird.', '{}', 'You release the magpie from its cage.', 'Talking with the character'], 'goodOthersScore': [2.0, 1.0, '', 2.0, 3.0], 'goodSelfRationale': ['{}', '{}', '{}', '{}', 'Learning about things'], 'goodSelfScore': [1.0, '', '', '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text here')
Add text `Your summary text here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')

But remember, this action cannot actually be performed on the disabled input as described in the provided HTML snippet.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')

But remember, this action cannot actually be performed on the disabled input as described in the provided HTML snippet., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text here']
 visible_values : ['Your summary text here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', 'The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it.", "I'm in a broken area. I'm waiting and listening to a magpie."]`
----> answers: `['The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', 'You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', "I'm in a broken area. I'm waiting and listening to a magpie.", "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary text here` - type: `<class 'str'>`
 --> scores:  0.019607843137254898
----> per-field score: 0.019607843137254898
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.006535947712418299
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 11836 <-> row_number: 1
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.'], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', 'goodSelf|badOthers|badSelf', 'badOthers', 'goodSelf|badOthers', 'goodSelf'], 'badOthersRationale': ['{}', 'The player takes items that belong to others.', 'The character is stealing supplies.', 'Character steals items.', '{}'], 'badOthersScore': ['', 2.0, 2.0, 2.0, ''], 'badSelfRationale': ['{}', 'The player is in snowy, freezing weather without proper attire, and gets snow dumped on them.', '{}', '{}', '{}'], 'badSelfScore': ['', 2.0, '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character gathers items that will help him on his journey.', 'The player takes some warm clothing from the hut to fight the cold.', '{}', 'Character protects himself from the cold.', 'the character gains some warm clothes'], 'goodSelfScore': [1.0, 1.0, '', 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


Remember, the specific interaction to enable a disabled checkbox or any similar action requires direct manipulation of the HTML attributes (`disabled` in this case), which is not covered by the commands mentioned.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


Remember, the specific interaction to enable a disabled checkbox or any similar action requires direct manipulation of the HTML attributes (`disabled` in this case), which is not covered by the commands mentioned., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.']`
----> answers: `['Character explores the woods. Character investigates contents of a couple of sheds.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.', 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', "The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 11840 <-> row_number: 5
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|badOthers|badSelf', 'badOthers|badSelf', 'badOthers|badSelf', 'goodSelf|badOthers', 'badSelf'], 'badOthersRationale': ['the main character facilitated the snake eating the lemming', 'atomic bomb; lemming is killed;', "The character set in motion events leading to the death of their lemming. They didn't kill the lemming, but they intended for it to die.", 'Opening the closet door led to the death of the lemming.', '{}'], 'badOthersScore': [2.0, 3.0, 2.0, 1.0, ''], 'badSelfRationale': ['the main character ends up treading water in the reservoir after climbing the ladder', 'may drown; may suffer radiation exposure', 'The character faces a rattlesnake and they fall from the windmill, landing in deep reservoir waters.', '{}', "I was careless and I'm going to drown."], 'badSelfScore': [2.0, 3.0, 2.0, '', 3.0], 'goodOthersRationale': ['the main character opened the door for the snake to eat the lemming', '{}', '{}', '{}', '{}'], 'goodOthersScore': [1.0, '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', 'Because the character freed the lemming the rattlesnake ate the lemming instead of biting the character', '{}'], 'goodSelfScore': ['', '', '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text here')
Add text `Your summary text here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given the HTML content and the instruction provided, it appears the checkbox for "judgment" named "goodOthers" is disabled, indicating that it cannot be directly modified through the actions you've asked to generate. For disabled elements, typically, you would need to enable them first before any modification can be made, but the instructions provided do not include a command for enabling a disabled input. Thus, in this context, I cannot generate a valid command that directly applies to modifying this disabled checkbox.
Failed to execute an action Given the HTML content and the instruction provided, it appears the checkbox for "judgment" named "goodOthers" is disabled, indicating that it cannot be directly modified through the actions you've asked to generate. For disabled elements, typically, you would need to enable them first before any modification can be made, but the instructions provided do not include a command for enabling a disabled input. Thus, in this context, I cannot generate a valid command that directly applies to modifying this disabled checkbox., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text here']
 visible_values : ['Your summary text here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"]`
----> answers: `['The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!", 'The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|badSelf|goodOthers', 'badOthers|badSelf', 'badOthers|badSelf', 'badOthers|goodSelf', 'badSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|badSelf|goodOthers', 'badOthers|badSelf', 'badOthers|badSelf', 'badOthers|goodSelf', 'badSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 11841 <-> row_number: 6
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"], 'moralSaliency': ['salient', 'salient', 'notSalient', 'salient', 'notSalient'], 'judgment': ['badSelf', 'badOthers', '', 'badOthers', ''], 'badOthersRationale': ['{}', 'The character takes a business card from the scene of a murder.', '{}', 'character steals something', '{}'], 'badOthersScore': ['', 2.0, '', 1.0, ''], 'badSelfRationale': ['Finding a dead body, leaving the scene and picking up a crowbar in the garage.', '{}', '{}', '{}', '{}'], 'badSelfScore': [1.0, '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodSelfScore': ['', '', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary goes here')
Add text `Your summary goes here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


But remember, this wouldn't work in this scenario without adjusting the disabled attribute in the actual web application or through additional scripting to enable the element before interacting with it.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


But remember, this wouldn't work in this scenario without adjusting the disabled attribute in the actual web application or through additional scripting to enable the element before interacting with it., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary goes here']
 visible_values : ['Your summary goes here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"]`
----> answers: `["I'm exploring  in a bar and looking for evidence. Learning", 'Character attends a costume party. While exploring the house, the character finds a body.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary goes here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'notSalient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badSelf', 'badOthers', '', 'badOthers', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badSelf', 'badOthers', '', 'badOthers', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 11855 <-> row_number: 20
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 20 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.', 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'Character explores a tower, attempting to solve its puzzles. They release something evil.', "I'm a magic person and went through cool rooms. It's a strange place", 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.'], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|goodSelf|badOthers|badSelf', 'badOthers', 'badOthers', 'goodSelf|badSelf', 'badOthers|badSelf'], 'badOthersRationale': ["Invading Krill's castle.", 'At the beginning of your journey, you are presented with two options of the path to take but instead you simply turn around and go the other way.', 'Character releases an evil force.', '{}', 'Ancient evils are released'], 'badOthersScore': [1.0, 2.0, 2.0, '', 3.0], 'badSelfRationale': ['The player is at risk of being destroyed by the evil mage.', '{}', '{}', 'Belboz threatened me', 'Ancient evils are released'], 'badSelfScore': [2.0, '', '', 2.0, 3.0], 'goodOthersRationale': ['The evil warlock is a threat to the entire world, so defeating him will help everyone.', '{}', '{}', '{}', '{}'], 'goodOthersScore': [3.0, '', '', '', ''], 'goodSelfRationale': ['Learning things to become a better mage.', '{}', '{}', 'Going through cool places', '{}'], 'goodSelfScore': [1.0, '', '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text here.')
Add text `Your summary text here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given the context that the checkbox named "judgment" with the value "goodOthers" is disabled, I cannot generate a command that would modify this checkbox directly as it is not interactive. To modify the input of a disabled HTML element, the HTML page itself would need to be edited to remove the "disabled" attribute or make the change through a script if the page supports dynamic interactions.

However, if the intention was to interact with an enabled element but was mistakenly referred to a disabled one, I would need the correct target input name and its enabled state to provide an appropriate command. For the provided disabled input, no direct interaction command can be executed.
Failed to execute an action Given the context that the checkbox named "judgment" with the value "goodOthers" is disabled, I cannot generate a command that would modify this checkbox directly as it is not interactive. To modify the input of a disabled HTML element, the HTML page itself would need to be edited to remove the "disabled" attribute or make the change through a script if the page supports dynamic interactions.

However, if the intention was to interact with an enabled element but was mistakenly referred to a disabled one, I would need the correct target input name and its enabled state to provide an appropriate command. For the provided disabled input, no direct interaction command can be executed., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text here.']
 visible_values : ['Your summary text here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.', 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'Character explores a tower, attempting to solve its puzzles. They release something evil.', "I'm a magic person and went through cool rooms. It's a strange place", 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.']`
----> answers: `['In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.', "I'm a magic person and went through cool rooms. It's a strange place", 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.', 'Character explores a tower, attempting to solve its puzzles. They release something evil.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary text here.` - type: `<class 'str'>`
 --> scores:  0.023529411764705882
----> per-field score: 0.023529411764705882
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|badSelf|goodOthers|goodSelf', 'badOthers', 'badOthers', 'badSelf|goodSelf', 'badOthers|badSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|badSelf|goodOthers|goodSelf', 'badOthers', 'badOthers', 'badSelf|goodSelf', 'badOthers|badSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.00784313725490196
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 11835 <-> row_number: 0
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["I go south to a library then make it into a guard's bunkroom which is uncomfortable. I get a key and a horn and go to the cavernous room where there is a crocodile opening wide its jaws. I squeeze some colorless drops into a slab of pork and throw the pork to the crocodile, which then relaxes and falls asleep.", 'The character reveals a secret entrance to a stairway and descends. The character acquires a key and feeds a drugged piece of meat to a crocodile as they escape.', 'Character explores passages.  Also feeds a crocodile to put it to sleep and move past the creature.', "I'm in a pirate themed area. I putting some sleeping liquid on pork and got a croc to go to sleep", 'The character opens a secret passage by pressing down an island on a map.  They exit into a stairwell which they go down, finding a key and horn in a guard room which they take.  The character finds a bottle of laudanum which they squeeze some of onto some meat, throwing it to a crocodile who eats it and is knocked unconscious by the tainted meat.'], 'moralSaliency': ['salient', 'salient', 'notSalient', 'salient', 'salient'], 'judgment': ['goodSelf|badOthers', 'goodSelf', '', 'goodSelf|badOthers', 'badOthers'], 'badOthersRationale': ['I might harm the crocodile by feeding it with the medicated pork.', '{}', '{}', 'I put the croc to sleep', 'the crocodile is put to sleep by the meat the character feeds it'], 'badOthersScore': [3.0, '', '', 1.0, 1.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['I throw the medicated pork to the crocodile to make it sleep in order to protect myself from being hurt by it.', 'The characters actions prevent them from being devoured by a crocodile.', '{}', "I put a croc to sleep and now I'm fairly safe.", '{}'], 'goodSelfScore': [3.0, 3.0, '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


However, please remember this action cannot be performed on a disabled element through standard user interaction.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


However, please remember this action cannot be performed on a disabled element through standard user interaction., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["I go south to a library then make it into a guard's bunkroom which is uncomfortable. I get a key and a horn and go to the cavernous room where there is a crocodile opening wide its jaws. I squeeze some colorless drops into a slab of pork and throw the pork to the crocodile, which then relaxes and falls asleep.", 'The character reveals a secret entrance to a stairway and descends. The character acquires a key and feeds a drugged piece of meat to a crocodile as they escape.', 'Character explores passages.  Also feeds a crocodile to put it to sleep and move past the creature.', "I'm in a pirate themed area. I putting some sleeping liquid on pork and got a croc to go to sleep", 'The character opens a secret passage by pressing down an island on a map.  They exit into a stairwell which they go down, finding a key and horn in a guard room which they take.  The character finds a bottle of laudanum which they squeeze some of onto some meat, throwing it to a crocodile who eats it and is knocked unconscious by the tainted meat.']`
----> answers: `['The character reveals a secret entrance to a stairway and descends. The character acquires a key and feeds a drugged piece of meat to a crocodile as they escape.', "I'm in a pirate themed area. I putting some sleeping liquid on pork and got a croc to go to sleep", 'The character opens a secret passage by pressing down an island on a map.  They exit into a stairwell which they go down, finding a key and horn in a guard room which they take.  The character finds a bottle of laudanum which they squeeze some of onto some meat, throwing it to a crocodile who eats it and is knocked unconscious by the tainted meat.', 'Character explores passages.  Also feeds a crocodile to put it to sleep and move past the creature.', "I go south to a library then make it into a guard's bunkroom which is uncomfortable. I get a key and a horn and go to the cavernous room where there is a crocodile opening wide its jaws. I squeeze some colorless drops into a slab of pork and throw the pork to the crocodile, which then relaxes and falls asleep."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'notSalient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|goodSelf', 'goodSelf', '', 'badOthers|goodSelf', 'badOthers']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|goodSelf', 'goodSelf', '', 'badOthers|goodSelf', 'badOthers']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 11846 <-> row_number: 11
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.', 'I am wandering around a building looking for clues and gathering items.', 'The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.', "I'm exploring a magical area. It looks very ritzy."], 'moralSaliency': ['salient', 'notSalient', 'notSalient', 'salient', 'notSalient'], 'judgment': ['goodSelf', '', '', 'goodSelf', ''], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character learns the codeword, orders a potion and picks up a number of useful items.', '{}', '{}', 'the character learns new information.', '{}'], 'goodSelfScore': [2.0, '', '', 1.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


To interact with a disabled input field, the HTML page itself would need to be modified to remove or modify the "disabled" attribute beforehand, which cannot be done through the commands provided.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


To interact with a disabled input field, the HTML page itself would need to be modified to remove or modify the "disabled" attribute beforehand, which cannot be done through the commands provided., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.', 'I am wandering around a building looking for clues and gathering items.', 'The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.', "I'm exploring a magical area. It looks very ritzy."]`
----> answers: `["I'm exploring a magical area. It looks very ritzy.", 'The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'I am wandering around a building looking for clues and gathering items.', 'The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'notSalient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', '', 'goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', '', 'goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 11853 <-> row_number: 18
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.', 'The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'Character explores, collecting useful items. Character finds treasure.', "I'm exploring underground and collecting items. I'm picking up a lot of junk", 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.'], 'moralSaliency': ['salient', 'salient', 'salient', 'notSalient', 'salient'], 'judgment': ['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf'], 'badOthersRationale': ['{}', 'The main character is stealing valuables and putting them in a basket.', '{}', '{}', '{}'], 'badOthersScore': ['', 1.0, '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The character acquires two valuable treasures.', '{}', 'Character gathers treasures.', '{}', 'the character finds some valuable treasures in their explorations'], 'goodSelfScore': [2.0, '', 1.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text goes here.')
Add text `Your summary text goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: The checkbox for the input name "judgment" with the value "goodOthers" is explicitly marked as disabled in the HTML code provided. This implies that it can't be interacted with directly through normal user actions on the webpage. If the intention was to enable or interact with this checkbox through automation, please note that any interaction with a disabled input element would not reflect typical user behavior or the intended use of the webpage.

However, under certain testing or automation scenarios where one might need to manipulate such elements regardless of their enabled state, you would typically use JavaScript or a browser's developer tools. But within the context of the given command format and considering the element is disabled, there's no direct action that can be executed to modify its state without first removing the 'disabled' attribute, which is outside the scope of the commands provided.

Therefore, based on the information and commands available, there's no appropriate command to interact with this disabled checkbox. If the goal was to enable the checkbox first before interacting with it, that would require a different approach/tools not covered by the simple command structure provided.
Failed to execute an action The checkbox for the input name "judgment" with the value "goodOthers" is explicitly marked as disabled in the HTML code provided. This implies that it can't be interacted with directly through normal user actions on the webpage. If the intention was to enable or interact with this checkbox through automation, please note that any interaction with a disabled input element would not reflect typical user behavior or the intended use of the webpage.

However, under certain testing or automation scenarios where one might need to manipulate such elements regardless of their enabled state, you would typically use JavaScript or a browser's developer tools. But within the context of the given command format and considering the element is disabled, there's no direct action that can be executed to modify its state without first removing the 'disabled' attribute, which is outside the scope of the commands provided.

Therefore, based on the information and commands available, there's no appropriate command to interact with this disabled checkbox. If the goal was to enable the checkbox first before interacting with it, that would require a different approach/tools not covered by the simple command structure provided., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text goes here.']
 visible_values : ['Your summary text goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.', 'The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'Character explores, collecting useful items. Character finds treasure.', "I'm exploring underground and collecting items. I'm picking up a lot of junk", 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.']`
----> answers: `['Character explores, collecting useful items. Character finds treasure.', 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.', "I'm exploring underground and collecting items. I'm picking up a lot of junk", 'The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary text goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 11838 <-> row_number: 3
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.', 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'notSalient'], 'judgment': ['goodSelf|badOthers', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', ''], 'badOthersRationale': ["The character disables the security and trespasses in Miss Voss's cottage.", '{}', '{}', '{}', '{}'], 'badOthersScore': [1.0, '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', 'Preventing the hell hound from doing damage', 'The main character defeats an angry animal without harming it.', 'Doggo got pets', '{}'], 'goodOthersScore': ['', 2.0, 2.0, 3.0, ''], 'goodSelfRationale': ['The character disables the security, making it easier to traverse the area without being detected.', 'Recovering a key and protecting oneself.', 'Main character escapes a hellhound attack.', "I'm very close to the end and getting untold power!", '{}'], 'goodSelfScore': [1.0, 3.0, 3.0, 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text here')
Add text `Your summary text here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Based on the HTML provided, it seems that the checkbox named "judgment" (with an id of "judgmentGoodOthers" and value "goodOthers") is disabled, which means it cannot be interacted with or modified in its current state. Thus, a command to modify this disabled checkbox would not be appropriate or effective without first enabling the checkbox.

In a typical scenario where the element is not disabled, the command you might use to interact with such a checkbox would follow the format provided by the listed valid commands. However, given the disabled state of this checkbox, no applicable command can be generated from the provided list that would directly modify its state. 

If you have control over the HTML or the execution context such that you can enable the checkbox, that would be a necessary first step before attempting to modify its checked status. Otherwise, direct modification through automated commands provided cannot be achieved in this case.
Failed to execute an action Based on the HTML provided, it seems that the checkbox named "judgment" (with an id of "judgmentGoodOthers" and value "goodOthers") is disabled, which means it cannot be interacted with or modified in its current state. Thus, a command to modify this disabled checkbox would not be appropriate or effective without first enabling the checkbox.

In a typical scenario where the element is not disabled, the command you might use to interact with such a checkbox would follow the format provided by the listed valid commands. However, given the disabled state of this checkbox, no applicable command can be generated from the provided list that would directly modify its state. 

If you have control over the HTML or the execution context such that you can enable the checkbox, that would be a necessary first step before attempting to modify its checked status. Otherwise, direct modification through automated commands provided cannot be achieved in this case., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text here']
 visible_values : ['Your summary text here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.', 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian."]`
----> answers: `['The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.', "In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian."]` - type: `<class 'list'>`
----> baseline_answer: `Your summary text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11851 <-> row_number: 16
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', 'Gave origami to someone.', 'the little girl is entertained by the origami gift from the character', '{}'], 'goodOthersScore': ['', '', 3.0, 1.0, ''], 'goodSelfRationale': ['the main character receives the magical origami bird and collects a silver coin.', '{}', 'Helped someone. Got to ride a cool paper bird', 'the character gains a silver coin by looting a corpse', 'finding the silver coin'], 'goodSelfScore': [2.0, '', 3.0, 2.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your intended summary goes here.')
Add text `Your intended summary goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given that the checkbox for "judgment" named "judgmentGoodOthers" is disabled as shown in the HTML snippet you provided, it's not possible to directly convert this command to enable a modification action using the formats provided (such as `modify_checkbox` or `modify_radio`). This is because the "disabled" attribute prevents the checkbox from being interacted with or modified directly through user action commands.

If you need to interact with this checkbox in a situation allowing manipulation of the webpage beyond standard user interactions (e.g., in web testing frameworks like Selenium or through JavaScript where you could potentially remove the "disabled" attribute), you would first need to remove the "disabled" attribute programmatically before being able to modify its checked state.

Nevertheless, given the provided command list constraints, there is no direct method available to interact with disabled input elements.
Failed to execute an action Given that the checkbox for "judgment" named "judgmentGoodOthers" is disabled as shown in the HTML snippet you provided, it's not possible to directly convert this command to enable a modification action using the formats provided (such as `modify_checkbox` or `modify_radio`). This is because the "disabled" attribute prevents the checkbox from being interacted with or modified directly through user action commands.

If you need to interact with this checkbox in a situation allowing manipulation of the webpage beyond standard user interactions (e.g., in web testing frameworks like Selenium or through JavaScript where you could potentially remove the "disabled" attribute), you would first need to remove the "disabled" attribute programmatically before being able to modify its checked state.

Nevertheless, given the provided command list constraints, there is no direct method available to interact with disabled input elements., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your intended summary goes here.']
 visible_values : ['Your intended summary goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."]`
----> answers: `["You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth.", "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', 'The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.']` - type: `<class 'list'>`
----> baseline_answer: `Your intended summary goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11848 <-> row_number: 13
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers', 'goodOthers|badSelf', 'goodSelf', 'goodOthers|badSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', 'The player has pain and is cold, then they risk serious injury jumping off a moving train.', '{}', "Main character's choices lead to being shot, getting knocked out.", '{}'], 'badSelfScore': ['', 2.0, '', 2.0, ''], 'goodOthersRationale': ['The character succeeds in providing the information to stop the attack.', 'The player stops someone from being assassinated.', '{}', 'Main character helps tip off the police to foil an assassination.', 'They got to talk with me.'], 'goodOthersScore': [3.0, 3.0, '', 2.0, 2.0], 'goodSelfRationale': ['{}', '{}', "The character performs several actions that are part of whatever mission they're on", '{}', "I'm learning more about the area"], 'goodSelfScore': ['', 2.0, 2.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary text here')
Add text `Your summary text here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


This command presumes a scenario where the checkbox is enabled or where the automation tool/script has the ability to bypass the disabled state, which would not be a standard user capability.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


This command presumes a scenario where the checkbox is enabled or where the automation tool/script has the ability to bypass the disabled state, which would not be a standard user capability., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary text here']
 visible_values : ['Your summary text here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."]`
----> answers: `['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country.", "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 11839 <-> row_number: 4
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'goodSelf', 'goodSelf|badOthers|badSelf', 'goodSelf', 'goodOthers|goodSelf|badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', 'trying to strike Davis leads to Davis being killed by Jamison.', '{}', 'Dude got murdered.'], 'badOthersScore': ['', '', 3.0, '', 3.0], 'badSelfRationale': ['{}', '{}', 'Trying to strike Davis gets you momentarily captured.', '{}', 'I had a knife to my throat!'], 'badSelfScore': ['', '', 1.0, '', 3.0], 'goodOthersRationale': ['{}', '{}', '{}', '{}', 'Someone saved me!'], 'goodOthersScore': ['', '', '', '', 3.0], 'goodSelfRationale': ['{}', 'The character rests in bed', "You try to strike Davis, which eventually frees you from Lafond and brings you aboard Jamison's ship.", 'Character is saved from someone trying to kill the character', 'I got saved!'], 'goodSelfScore': ['', 1.0, 2.0, 3.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary here')
Add text `Your summary here` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')


Since the element is disabled (`disabled=""`), no direct action command can alter its state without first enabling the input, which would require additional steps not covered by the specified commands.
Failed to execute an action self.actions.modify_checkbox('judgment', 'goodOthers')


Since the element is disabled (`disabled=""`), no direct action command can alter its state without first enabling the input, which would require additional steps not covered by the specified commands., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary here']
 visible_values : ['Your summary here']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."]`
----> answers: `['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items.", "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary here` - type: `<class 'str'>`
 --> scores:  0.029411764705882356
----> per-field score: 0.029411764705882356
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.34313725490196073
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029411764705882356], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 11854 <-> row_number: 19
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf|badOthers', 'goodOthers|goodSelf', 'goodOthers|goodSelf|badOthers'], 'badOthersRationale': ['{}', '{}', 'The character is a witness against people and helps to get them convicted of crimes and put in prison.', '{}', 'Michael and Colonel Marston for committing crimes.'], 'badOthersScore': ['', '', 2.0, '', 3.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': [2.0, 2.0, 2.0, 2.0, 3.0], 'goodSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodSelfScore': [2.0, 3.0, 3.0, 3.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your desired summary text goes here.')
Add text `Your desired summary text goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Based on the provided HTML snippet and input name, the command to modify the checkbox named "judgment" cannot be generated directly because the checkbox with name "judgment" is disabled as indicated by the `disabled=""` attribute in the HTML. 

Typically, modifying a disabled input would first require enabling it, which is not directly feasible with the provided command options. Without the capability to enable the input prior to modifying it, the appropriate command cannot be generated based on the given constraints. 

However, if the intent is to interact with elements that are not disabled, the command format provided would be valid for those cases, but it does not apply to this specific scenario with a disabled input.
Failed to execute an action Based on the provided HTML snippet and input name, the command to modify the checkbox named "judgment" cannot be generated directly because the checkbox with name "judgment" is disabled as indicated by the `disabled=""` attribute in the HTML. 

Typically, modifying a disabled input would first require enabling it, which is not directly feasible with the provided command options. Without the capability to enable the input prior to modifying it, the appropriate command cannot be generated based on the given constraints. 

However, if the intent is to interact with elements that are not disabled, the command format provided would be valid for those cases, but it does not apply to this specific scenario with a disabled input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your desired summary text goes here.']
 visible_values : ['Your desired summary text goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust."]`
----> answers: `['The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust.", 'The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.']` - type: `<class 'list'>`
----> baseline_answer: `Your desired summary text goes here.` - type: `<class 'str'>`
 --> scores:  0.0392156862745098
----> per-field score: 0.0392156862745098
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.013071895424836602
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029411764705882356, 0.0392156862745098], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 11845 <-> row_number: 10
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'notSalient'], 'judgment': ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', ''], 'badOthersRationale': ['{}', '{}', 'The player takes items that belong to others and the museum.', '{}', '{}'], 'badOthersScore': ['', '', 2.0, '', ''], 'badSelfRationale': ['{}', '{}', 'The player experiences some discomfort from time travel.', '{}', '{}'], 'badSelfScore': ['', '', 1.0, '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character is learning new information', '{}', '{}', 'the main character learns something.', '{}'], 'goodSelfScore': [1.0, '', '', 1.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
input Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_text('summary', 'Your summary goes here.')
Add text `Your summary goes here.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
input Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: self.actions.modify_radio('moralSaliency', 'notSalient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentNotSalient" value="notSalient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
input Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
Executing one action: Given the details and the structure of the HTML provided, it appears there might have been a mistake with your request. The checkbox with name "judgment" and an id of "judgmentGoodOthers" is disabled as per the HTML snippet you provided. Therefore, we can't issue a command to modify it directly because the element is not interactable in its current state (it has the `disabled` attribute set). 

To interact with a checkbox, it would need to be enabled. If your scenario permits enabling the checkbox programmatically or via manual intervention before attempting to modify its state, you might proceed with that approach. However, without changes to the element's disabled state, no command to interact with the checkbox can be executed as intended.

If you have a different input or another element you'd like to interact with, please provide the details.
Failed to execute an action Given the details and the structure of the HTML provided, it appears there might have been a mistake with your request. The checkbox with name "judgment" and an id of "judgmentGoodOthers" is disabled as per the HTML snippet you provided. Therefore, we can't issue a command to modify it directly because the element is not interactable in its current state (it has the `disabled` attribute set). 

To interact with a checkbox, it would need to be enabled. If your scenario permits enabling the checkbox programmatically or via manual intervention before attempting to modify its state, you might proceed with that approach. However, without changes to the element's disabled state, no command to interact with the checkbox can be executed as intended.

If you have a different input or another element you'd like to interact with, please provide the details., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['Your summary goes here.']
 visible_values : ['Your summary goes here.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['notSalient']
 visible_values : ['notSalient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."]`
----> answers: `['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone.", 'The character explores an underground museum. They use a machine that changes their surroundings.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.']` - type: `<class 'list'>`
----> baseline_answer: `Your summary goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `notSalient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.0425531914893617, 0.0, 0.03389830508474576, 0.0, 0.0, 0.0, 0.019607843137254898, 0.0, 0.0, 0.0, 0.023529411764705882, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.029411764705882356, 0.0392156862745098, 0.0], 'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `winogrande validation (grammar) additional_ph` = = = = = = = = = = = = 
First instance id: 20422
instance_id: 20474 <-> row_number: 52
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If you intended to select the second option or any other, you would replace `'1'` with the corresponding value (`'2'`, `'3'`, etc.), given the values were shown in the rest of the snippet.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If you intended to select the second option or any other, you would replace `'1'` with the corresponding value (`'2'`, `'3'`, etc.), given the values were shown in the rest of the snippet., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0], 'checkbox': [0.0, 0.0]}
instance_id: 20491 <-> row_number: 69
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: It appears that the specification or the value you're looking for is incomplete. Please provide more details or specify the action you want to perform with the "Answer_radios1" input.
Failed to execute an action It appears that the specification or the value you're looking for is incomplete. Please provide more details or specify the action you want to perform with the "Answer_radios1" input., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


To select the second option (assuming its value is "2"):
plaintext
self.actions.modify_radio('Answer_radios2', '2')


Please provide more information or specify the correct value if neither of these is the intended selection.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


To select the second option (assuming its value is "2"):
plaintext
self.actions.modify_radio('Answer_radios2', '2')


Please provide more information or specify the correct value if neither of these is the intended selection., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0]}
instance_id: 20422 <-> row_number: 0
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: It seems like your request got cut off before including the full HTML and what you want to do with the "Answer_radios1" input. If you need to select one of the radio options, please provide the value you intend to select, or clarify your request if you were looking for something different.
Failed to execute an action It seems like your request got cut off before including the full HTML and what you want to do with the "Answer_radios1" input. If you need to select one of the radio options, please provide the value you intend to select, or clarify your request if you were looking for something different., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If a different value or more context was intended, please provide the complete details for a more accurate command.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If a different value or more context was intended, please provide the complete details for a more accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 20432 <-> row_number: 10
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


This assumes that selecting the option with the value "1" is the intended action. If you were aiming to select a different option, you would replace '1' with the corresponding value of that option.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


This assumes that selecting the option with the value "1" is the intended action. If you were aiming to select a different option, you would replace '1' with the corresponding value of that option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If you wish to select a different option, just replace `'1'` with the value of the desired option (`'2'`, `'3'`, etc., depending on the options available in the complete HTML code). If more options are available beyond "brush", please provide the full HTML or specify which option you'd like to select for a more accurate command.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If you wish to select a different option, just replace `'1'` with the value of the desired option (`'2'`, `'3'`, etc., depending on the options available in the complete HTML code). If more options are available beyond "brush", please provide the full HTML or specify which option you'd like to select for a more accurate command., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 20501 <-> row_number: 79
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 79 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20503 <-> row_number: 81
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 81 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


Please provide the complete HTML snippet or specify the value you want to select for a more accurate command.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


Please provide the complete HTML snippet or specify the value you want to select for a more accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 20487 <-> row_number: 65
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 65 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


If there were more options provided in the full HTML, you would replace `'1'` with the corresponding value of the desired option.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


If there were more options provided in the full HTML, you would replace `'1'` with the corresponding value of the desired option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If there were additional options and you wanted to choose a different one, you would replace `'1'` with the value corresponding to your desired option.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If there were additional options and you wanted to choose a different one, you would replace `'1'` with the value corresponding to your desired option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 20433 <-> row_number: 11
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: It seems like your input is incomplete. Could you please provide me with the full HTML code or specify which value (`1` or `2`) you want to choose for the input named "Answer_radios2"? This information is necessary for me to generate a valid command for you.
Failed to execute an action It seems like your input is incomplete. Could you please provide me with the full HTML code or specify which value (`1` or `2`) you want to choose for the input named "Answer_radios2"? This information is necessary for me to generate a valid command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20423 <-> row_number: 1
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


If there were supposed to be more options or details, please provide the complete information for further assistance.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


If there were supposed to be more options or details, please provide the complete information for further assistance., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If there was another specific option you were referring to or if the input value should be different, please provide the full details or correct value, so I can generate the appropriate command.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If there was another specific option you were referring to or if the input value should be different, please provide the full details or correct value, so I can generate the appropriate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20444 <-> row_number: 22
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


This command selects the radio button with name "Answer_radios1" and value "1", which corresponds to the option "dress". If you wanted to select a different option, you would replace '1' with the desired value corresponding to that option.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


This command selects the radio button with name "Answer_radios1" and value "1", which corresponds to the option "dress". If you wanted to select a different option, you would replace '1' with the desired value corresponding to that option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


This command selects the radio button with the value "1" for the input named "Answer_radios2". If you wanted to choose the second option (assuming its value is "2" as the pattern suggests), you would use:

python
self.actions.modify_radio('Answer_radios2', '2')


If there are more options or if the value you want to select is different, you'll need to adjust the command accordingly.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


This command selects the radio button with the value "1" for the input named "Answer_radios2". If you wanted to choose the second option (assuming its value is "2" as the pattern suggests), you would use:

python
self.actions.modify_radio('Answer_radios2', '2')


If there are more options or if the value you want to select is different, you'll need to adjust the command accordingly., error: unterminated string literal (detected at line 10) (<string>, line 10)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20494 <-> row_number: 72
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')

We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


Or, for the second option (assuming its value is "2"):

self.actions.modify_radio('Answer_radios2', '2')


Make sure you have the correct value for the option you intend to select.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


Or, for the second option (assuming its value is "2"):

self.actions.modify_radio('Answer_radios2', '2')


Make sure you have the correct value for the option you intend to select., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20500 <-> row_number: 78
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If you intended to select the second option, you would replace '1' with '2', assuming '2' is the correct value associated with it:

python
self.actions.modify_radio('Answer_radios2', '2')


Please replace '1' or '2' with the appropriate value based on the option you wish to select.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If you intended to select the second option, you would replace '1' with '2', assuming '2' is the correct value associated with it:

python
self.actions.modify_radio('Answer_radios2', '2')


Please replace '1' or '2' with the appropriate value based on the option you wish to select., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20453 <-> row_number: 31
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20481 <-> row_number: 59
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 59 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


This command chooses the option with the value "1", which corresponds to "shrimp" in the provided HTML snippet. If there were more options and you wanted to select a different one, you would replace '1' with the value corresponding to your desired option.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


This command chooses the option with the value "1", which corresponds to "shrimp" in the provided HTML snippet. If there were more options and you wanted to select a different one, you would replace '1' with the value corresponding to your desired option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20460 <-> row_number: 38
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20446 <-> row_number: 24
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If the second option or another unseen option is the intended choice, you would replace `'1'` with the value corresponding to the desired option.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If the second option or another unseen option is the intended choice, you would replace `'1'` with the value corresponding to the desired option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 20513 <-> row_number: 91
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 91 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 20505 <-> row_number: 83
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 83 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20482 <-> row_number: 60
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 60 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: It seems the HTML snippet ended abruptly and doesn't provide full information about all the radio options or what specific value should be assigned to "Answer_radios1". To generate a command to modify this input correctly, I need to know which option you want to select (value "1" or "2", or if there are more options, their values as well). Could you please provide the full details or specify which option you'd like to select?
Failed to execute an action It seems the HTML snippet ended abruptly and doesn't provide full information about all the radio options or what specific value should be assigned to "Answer_radios1". To generate a command to modify this input correctly, I need to know which option you want to select (value "1" or "2", or if there are more options, their values as well). Could you please provide the full details or specify which option you'd like to select?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


Or, if you're choosing the second option (with the value "2"):

python
self.actions.modify_radio('Answer_radios2', '2')


Please replace `'1'` or `'2'` in the command with the correct value according to your specific need.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


Or, if you're choosing the second option (with the value "2"):

python
self.actions.modify_radio('Answer_radios2', '2')


Please replace `'1'` or `'2'` in the command with the correct value according to your specific need., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 20426 <-> row_number: 4
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [1.0], 'Answer_radios2': [2], 'equal2': [1.0], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
input Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios1', '1')


This command selects the radio button with the value "1" for the name "Answer_radios1", which corresponds to the "career" option based on the provided snippet.
Failed to execute an action self.actions.modify_radio('Answer_radios1', '1')


This command selects the radio button with the value "1" for the name "Answer_radios1", which corresponds to the "career" option based on the provided snippet., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
input Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
input Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_radio('Answer_radios2', '1')


If there were more options, you would replace '1' with the 'value' of the option you intend to select. Please provide the complete HTML or specify the selection you want to make for a more accurate answer.
Failed to execute an action self.actions.modify_radio('Answer_radios2', '1')


If there were more options, you would replace '1' with the 'value' of the option you intend to select. Please provide the complete HTML or specify the selection you want to make for a more accurate answer., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
input Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
Model answers: 1 
Gold answers: [1.0]
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
Model answers: 1 
Gold answers: [1.0]
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `atomic_event2event-effects 4` = = = = = = = = = = = = 
First instance id: 33704
instance_id: 33728 <-> row_number: 24
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['becomes tired', 'is helpful', '{}'], 'xeff3b': [nan, 'burns calories', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', 'Noting must happen after this event.'], 'oeff4a': ['becomes cold', 'is cooler', '{}'], 'oeff4b': ['starts to shiver', 'is physically better', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'no')
We are going to select this radio button: <input id="radio4b" name="ohaseff" onclick="unshowhelper('oeff');unrequirelist(['input4a1', 'input4a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your input here')
Add text `Your input here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired input text here')
Add text `Your desired input text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input here']
 visible_values : ['Your input here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired input text here']
 visible_values : ['Your desired input text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['becomes tired', 'is helpful', '']`
----> answers: `['becomes tired', '', 'is helpful']` - type: `<class 'list'>`
----> baseline_answer: `Your input here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'burns calories', '']`
----> answers: `['', 'burns calories']` - type: `<class 'list'>`
----> baseline_answer: `Your desired input text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0], 'text': [0.0, 0.0]}
instance_id: 33706 <-> row_number: 2
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['gets thanked', 'is thanked', '{}'], 'xeff3b': ['gets promoted', 'is told off', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['gains information', 'PersonY fails', 'gains knowledge'], 'oeff4b': ['learns something new', 'PersonY succeeds', 'is informed'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your input value here')
Add text `Your input value here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write an effect here')
Add text `write an effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write an effect here')
Add text `write an effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input value here']
 visible_values : ['Your input value here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect here']
 visible_values : ['write an effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect here']
 visible_values : ['write an effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets thanked', 'is thanked', '']`
----> answers: `['is thanked', '', 'gets thanked']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets promoted', 'is told off', '']`
----> answers: `['gets promoted', '', 'is told off']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gains information', 'PersonY fails', 'gains knowledge']`
----> answers: `['PersonY fails', 'gains information', 'gains knowledge']` - type: `<class 'list'>`
----> baseline_answer: `write an effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['learns something new', 'PersonY succeeds', 'is informed']`
----> answers: `['is informed', 'PersonY succeeds', 'learns something new']` - type: `<class 'list'>`
----> baseline_answer: `write an effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33720 <-> row_number: 16
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'no'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', '{}', '{}'], 'xeff3b': ['{}', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Event is incomplete', '{}', '{}'], 'oeff4a': ['{}', 'Person Y does something good because of X', 'trembles'], 'oeff4b': ['{}', 'Y does something bad because of X', 'yells'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'no')
We are going to select this radio button: <input id="radio4b" name="ohaseff" onclick="unshowhelper('oeff');unrequirelist(['input4a1', 'input4a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired input here')
Add text `Your desired input here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your Desired Text Here')
Add text `Your Desired Text Here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired input here']
 visible_values : ['Your desired input here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Desired Text Here']
 visible_values : ['Your Desired Text Here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33747 <-> row_number: 43
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'no'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['they talk', '{}', '{}'], 'xeff3b': ['sit down', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}'], 'oeff4a': ['makes a friend', '{}', 'they are confused'], 'oeff4b': ['shakes hands', '{}', 'they are shocked'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect on PersonX here')
Add text `Your desired effect on PersonX here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'your_effect_here')
Add text `your_effect_here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect on PersonX here']
 visible_values : ['Your desired effect on PersonX here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['your_effect_here']
 visible_values : ['your_effect_here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['they talk', '', '']`
----> answers: `['', 'they talk']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect on PersonX here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['sit down', '', '']`
----> answers: `['', 'sit down']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['makes a friend', '', 'they are confused']`
----> answers: `['', 'makes a friend', 'they are confused']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['shakes hands', '', 'they are shocked']`
----> answers: `['shakes hands', '', 'they are shocked']` - type: `<class 'list'>`
----> baseline_answer: `your_effect_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33709 <-> row_number: 5
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'no'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['{}', '{}', '{}'], 'xeff3b': ['{}', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['person y goes to x', 'smile', 'Persony answers'], 'oeff4b': ['person y answers', 'nods head', 'PersonY does not answer'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect')
Add text `Your desired effect` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'enter the effect here')
Add text `enter the effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'your desired effect here')
Add text `your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect']
 visible_values : ['Your desired effect']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['enter the effect here']
 visible_values : ['enter the effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['your desired effect here']
 visible_values : ['your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person y goes to x', 'smile', 'Persony answers']`
----> answers: `['Persony answers', 'person y goes to x', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `enter the effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person y answers', 'nods head', 'PersonY does not answer']`
----> answers: `['person y answers', 'nods head', 'PersonY does not answer']` - type: `<class 'list'>`
----> baseline_answer: `your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33725 <-> row_number: 21
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['becomes proud of changing PersonY opinion', '{}', 'Get Y to listen'], 'xeff3b': ['becomes happier', '{}', 'Are rebuffed by Y'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'it convinces him to work', '{}'], 'oeff4a': ['changes his opinion', '{}', 'Learn something new'], 'oeff4b': ['becomes impressed by PersonX', '{}', 'Lose friendship with X'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect on PersonX')
Add text `Your desired effect on PersonX` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your intended text here')
Add text `Your intended text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your new value here')
Add text `Your new value here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write an effect')
Add text `write an effect` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect on PersonX']
 visible_values : ['Your desired effect on PersonX']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your intended text here']
 visible_values : ['Your intended text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your new value here']
 visible_values : ['Your new value here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect']
 visible_values : ['write an effect']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['becomes proud of changing PersonY opinion', '', 'Get Y to listen']`
----> answers: `['', 'Get Y to listen', 'becomes proud of changing PersonY opinion']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect on PersonX` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['becomes happier', '', 'Are rebuffed by Y']`
----> answers: `['', 'becomes happier', 'Are rebuffed by Y']` - type: `<class 'list'>`
----> baseline_answer: `Your intended text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['changes his opinion', '', 'Learn something new']`
----> answers: `['', 'changes his opinion', 'Learn something new']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['becomes impressed by PersonX', '', 'Lose friendship with X']`
----> answers: `['', 'becomes impressed by PersonX', 'Lose friendship with X']` - type: `<class 'list'>`
----> baseline_answer: `write an effect` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33751 <-> row_number: 47
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['Person X is full', 'gets nutrition', 'is full'], 'xeff3b': ['Person X is no longer hungry', 'gets sleepy', 'is content'], 'xeff3c': ['{}', 'smiles', '{}'], 'xeff3d': ['{}', 'gets more knowledge about person Y', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['{}', 'gets less hangry', 'is no longer hungry'], 'oeff4b': ['{}', 'gets sleepy', 'is friendly'], 'oeff4c': ['{}', 'smiles', '{}'], 'oeff4d': ['{}', 'gets more knowledge about person X', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'no')
We are going to select this radio button: <input id="radio3b" name="xhaseff" onclick="unshowhelper('xeff');unrequirelist(['input3a1', 'input3a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff2a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3d` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Write your desired effect here')
Add text `Write your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Write your desired effect here']
 visible_values : ['Write your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff2a` since it is not visible.
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3b` since it is not visible.
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3c` since it is not visible.
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3d` since it is not visible.
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets less hangry', 'is no longer hungry']`
----> answers: `['', 'gets less hangry', 'is no longer hungry']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets sleepy', 'is friendly']`
----> answers: `['', 'is friendly', 'gets sleepy']` - type: `<class 'list'>`
----> baseline_answer: `Write your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'smiles', '']`
----> answers: `['', 'smiles']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets more knowledge about person X', '']`
----> answers: `['', 'gets more knowledge about person X']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33799 <-> row_number: 95
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['gets yelled at', 'PersonY scolds PersonX', 'he is arrested'], 'xeff3b': ['gets in trouble', 'others scold PersonX', 'he is shot'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['jumps in fear', 'PersonY is frightened', 'he is taken to the hospital'], 'oeff4b': ['begins to shake', 'PersonY is humiliated', 'he is stitched up'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect on PersonX')
Add text `Your desired effect on PersonX` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your specified text here')
Add text `Your specified text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect on PersonX']
 visible_values : ['Your desired effect on PersonX']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your specified text here']
 visible_values : ['Your specified text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets yelled at', 'PersonY scolds PersonX', 'he is arrested']`
----> answers: `['he is arrested', 'PersonY scolds PersonX', 'gets yelled at']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect on PersonX` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets in trouble', 'others scold PersonX', 'he is shot']`
----> answers: `['gets in trouble', 'he is shot', 'others scold PersonX']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['jumps in fear', 'PersonY is frightened', 'he is taken to the hospital']`
----> answers: `['he is taken to the hospital', 'PersonY is frightened', 'jumps in fear']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['begins to shake', 'PersonY is humiliated', 'he is stitched up']`
----> answers: `['begins to shake', 'he is stitched up', 'PersonY is humiliated']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0]}
instance_id: 33783 <-> row_number: 79
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 79 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['{}', '{}', 'they shake in fear'], 'xeff3b': ['{}', '{}', 'they feel guilty'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}'], 'oeff4a': ['smile', '{}', 'person y is scared'], 'oeff4b': ['laugh', '{}', 'person y passes out'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'your_effect_here')
Add text `your_effect_here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['your_effect_here']
 visible_values : ['your_effect_here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'they shake in fear']`
----> answers: `['', 'they shake in fear']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'they feel guilty']`
----> answers: `['', 'they feel guilty']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', '', 'person y is scared']`
----> answers: `['', 'person y is scared', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `your_effect_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['laugh', '', 'person y passes out']`
----> answers: `['', 'person y passes out', 'laugh']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33717 <-> row_number: 13
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['person x is thanked', 'PersonX has less money', 'feels pleased'], 'xeff3b': ['person x is appreciated', 'PersonX gets a receipt', 'experiences happiness'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['person y feels gratitude', '{}', 'says thank you'], 'oeff4b': ['person y is thankful', '{}', 'smiles'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your new effect here')
Add text `Your new effect here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write an effect here')
Add text `write an effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your new effect here']
 visible_values : ['Your new effect here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect here']
 visible_values : ['write an effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person x is thanked', 'PersonX has less money', 'feels pleased']`
----> answers: `['PersonX has less money', 'feels pleased', 'person x is thanked']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person x is appreciated', 'PersonX gets a receipt', 'experiences happiness']`
----> answers: `['PersonX gets a receipt', 'experiences happiness', 'person x is appreciated']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person y feels gratitude', '', 'says thank you']`
----> answers: `['person y feels gratitude', '', 'says thank you']` - type: `<class 'list'>`
----> baseline_answer: `write an effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['person y is thankful', '', 'smiles']`
----> answers: `['', 'person y is thankful', 'smiles']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33707 <-> row_number: 3
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['smile', 'is concerned.', '{}'], 'xeff3b': ['cry', 'thinks about the impact.', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', 'Nothing must happen after this event.'], 'oeff4a': ['smile', 'is harmed.', '{}'], 'oeff4b': ['cry', 'is warmer.', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired effect text here')
Add text `Your desired effect text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'YourTextHere')
Add text `YourTextHere` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your input value here')
Add text `Your input value here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect text here']
 visible_values : ['Your desired effect text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['YourTextHere']
 visible_values : ['YourTextHere']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input value here']
 visible_values : ['Your input value here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', 'is concerned.', '']`
----> answers: `['', 'is concerned.', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['cry', 'thinks about the impact.', '']`
----> answers: `['', 'thinks about the impact.', 'cry']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', 'is harmed.', '']`
----> answers: `['', 'is harmed.', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['cry', 'is warmer.', '']`
----> answers: `['', 'cry', 'is warmer.']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33833 <-> row_number: 129
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 129 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['no', 'no', 'yes'], 'xeff2a': ["PersonX's body heats up.", 'becomes warm', 'smile at PersonX'], 'xeff3b': ['PersonX begins to sweat.', 'smiles', 'Kiss at personX'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['{}', '{}', 'thanks PersonX'], 'oeff4b': ['{}', '{}', nan], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect on PersonX')
Add text `Your desired effect on PersonX` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your input here')
Add text `Your input here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect on PersonX']
 visible_values : ['Your desired effect on PersonX']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input here']
 visible_values : ['Your input here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `["PersonX's body heats up.", 'becomes warm', 'smile at PersonX']`
----> answers: `['smile at PersonX', 'becomes warm', "PersonX's body heats up."]` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect on PersonX` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['PersonX begins to sweat.', 'smiles', 'Kiss at personX']`
----> answers: `['PersonX begins to sweat.', 'Kiss at personX', 'smiles']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'thanks PersonX']`
----> answers: `['', 'thanks PersonX']` - type: `<class 'list'>`
----> baseline_answer: `Your input here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]}
instance_id: 33718 <-> row_number: 14
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['no', 'yes', 'no'], 'xeff2a': ['{}', 'laugh', 'becomes happy'], 'xeff3b': ['{}', 'smile', 'have fun'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['gets dirty, smiles\n[Note: avoid repeating effects already mentioned in the event, such as "getting cupcakes"]', '{}', '{}'], 'oeff4a': ['{}', 'laugh', '{}'], 'oeff4b': ['{}', 'smile', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your effect here')
Add text `Your effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your effect here']
 visible_values : ['Your effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'laugh', 'becomes happy']`
----> answers: `['', 'becomes happy', 'laugh']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'smile', 'have fun']`
----> answers: `['', 'have fun', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'laugh', '']`
----> answers: `['', 'laugh']` - type: `<class 'list'>`
----> baseline_answer: `Your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'smile', '']`
----> answers: `['', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33773 <-> row_number: 69
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'yes'], 'ohaseff': ['no', 'no', 'yes'], 'xeff2a': ['get order', '{}', 'gets thanked'], 'xeff3b': ['pay for order', '{}', 'sighs'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}'], 'oeff4a': ['{}', '{}', 'smiles'], 'oeff4b': ['{}', '{}', 'sighs'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your Desired Text Here')
Add text `Your Desired Text Here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your input value here')
Add text `Your input value here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', '[Your effect here]')
Add text `[Your effect here]` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your Desired Effect')
Add text `Your Desired Effect` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your input here')
Add text `Your input here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Desired Text Here']
 visible_values : ['Your Desired Text Here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input value here']
 visible_values : ['Your input value here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[Your effect here]']
 visible_values : ['[Your effect here]']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Desired Effect']
 visible_values : ['Your Desired Effect']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your input here']
 visible_values : ['Your input here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['get order', '', 'gets thanked']`
----> answers: `['', 'get order', 'gets thanked']` - type: `<class 'list'>`
----> baseline_answer: `Your Text Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['pay for order', '', 'sighs']`
----> answers: `['', 'sighs', 'pay for order']` - type: `<class 'list'>`
----> baseline_answer: `Your Desired Text Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'smiles']`
----> answers: `['', 'smiles']` - type: `<class 'list'>`
----> baseline_answer: `[Your effect here]` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'sighs']`
----> answers: `['', 'sighs']` - type: `<class 'list'>`
----> baseline_answer: `Your Desired Effect` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33711 <-> row_number: 7
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['get up', 'gets wet', '{}'], 'xeff3b': ['dry Person Y off', 'gets dirty', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', "He's bathing"], 'oeff4a': ['dry off with a towel', 'gets clean', '{}'], 'oeff4b': ['get out of bath', 'gets dried off', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'no')
We are going to select this radio button: <input id="radio3b" name="xhaseff" onclick="unshowhelper('xeff');unrequirelist(['input3a1', 'input3a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff2a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3d` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write an effect here')
Add text `write an effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'write an effect')
Add text `write an effect` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect here']
 visible_values : ['write an effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write an effect']
 visible_values : ['write an effect']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff2a` since it is not visible.
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3b` since it is not visible.
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3c` since it is not visible.
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `xeff3d` since it is not visible.
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['dry off with a towel', 'gets clean', '']`
----> answers: `['dry off with a towel', '', 'gets clean']` - type: `<class 'list'>`
----> baseline_answer: `write an effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['get out of bath', 'gets dried off', '']`
----> answers: `['gets dried off', '', 'get out of bath']` - type: `<class 'list'>`
----> baseline_answer: `write an effect` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33803 <-> row_number: 99
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 99 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['{}', 'becomes relieved', '{}'], 'xeff3b': ['{}', 'becomes happier', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['says bye', 'becomes sad', 'send off'], 'oeff4b': ['walks', 'becomes resentful towards PersonX', 'sent to other place'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'no')
We are going to select this radio button: <input id="radio3b" name="xhaseff" onclick="unshowhelper('xeff');unrequirelist(['input3a1', 'input3a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'no')
We are going to select this radio button: <input id="radio4b" name="ohaseff" onclick="unshowhelper('oeff');unrequirelist(['input4a1', 'input4a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff2a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `xeff3d` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: norational
input Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'becomes relieved', '']`
----> answers: `['', 'becomes relieved']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'becomes happier', '']`
----> answers: `['', 'becomes happier']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33820 <-> row_number: 116
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 116 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'no'], 'ohaseff': ['yes', 'no', 'no'], 'xeff2a': ['coughs', '{}', '{}'], 'xeff3b': ['sneezes', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', "I don't think anything happens to personx in this sentence."], 'oeff4a': ['throws up', '{}', '{}'], 'oeff4b': ['yell', '{}', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'no')
We are going to select this radio button: <input id="radio4b" name="ohaseff" onclick="unshowhelper('oeff');unrequirelist(['input4a1', 'input4a2']);allNoShow()" required="" type="radio" value="no">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['no']
 visible_values : ['no']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['coughs', '', '']`
----> answers: `['', 'coughs']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['sneezes', '', '']`
----> answers: `['', 'sneezes']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33808 <-> row_number: 104
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 104 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['smiles', 'gets recognized', 'gets praised'], 'xeff3b': ['is grateful', 'receives attention', 'gets thanked'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['blushes', '{}', 'blushes'], 'oeff4b': ['is embarrassed', '{}', 'gains confidence'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Another effect on PersonX')
Add text `Another effect on PersonX` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your intended effect here')
Add text `Your intended effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your desired effect here')
Add text `Your desired effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your desired input here')
Add text `Your desired input here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Another effect on PersonX']
 visible_values : ['Another effect on PersonX']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your intended effect here']
 visible_values : ['Your intended effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect here']
 visible_values : ['Your desired effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired input here']
 visible_values : ['Your desired input here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smiles', 'gets recognized', 'gets praised']`
----> answers: `['gets praised', 'smiles', 'gets recognized']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['is grateful', 'receives attention', 'gets thanked']`
----> answers: `['is grateful', 'receives attention', 'gets thanked']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['blushes', '', 'blushes']`
----> answers: `['', 'blushes']` - type: `<class 'list'>`
----> baseline_answer: `Your intended effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['is embarrassed', '', 'gains confidence']`
----> answers: `['', 'is embarrassed', 'gains confidence']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33753 <-> row_number: 49
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['gets caught', 'becomes an accomplice', 'get person y to safety.'], 'xeff3b': ['gets found out', nan, 'make sure that person y is not found.'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['gets rescued', '{}', 'escape with person x.'], 'oeff4b': ['gets kicked', '{}', 'thank person x.'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired effect on PersonX here')
Add text `Your desired effect on PersonX here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'Your specified effect here')
Add text `Your specified effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', '[Your Effect Here]')
Add text `[Your Effect Here]` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your Text Here')
Add text `Your Text Here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired effect on PersonX here']
 visible_values : ['Your desired effect on PersonX here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your specified effect here']
 visible_values : ['Your specified effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[Your Effect Here]']
 visible_values : ['[Your Effect Here]']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets caught', 'becomes an accomplice', 'get person y to safety.']`
----> answers: `['becomes an accomplice', 'get person y to safety.', 'gets caught']` - type: `<class 'list'>`
----> baseline_answer: `Your desired effect on PersonX here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets found out', '', 'make sure that person y is not found.']`
----> answers: `['', 'gets found out', 'make sure that person y is not found.']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets rescued', '', 'escape with person x.']`
----> answers: `['', 'gets rescued', 'escape with person x.']` - type: `<class 'list'>`
----> baseline_answer: `Your specified effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets kicked', '', 'thank person x.']`
----> answers: `['', 'gets kicked', 'thank person x.']` - type: `<class 'list'>`
----> baseline_answer: `[Your Effect Here]` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33788 <-> row_number: 84
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 84 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['be nostalgiac', 'he is greeted', 'Are greeted by Y'], 'xeff3b': ['gets acknowledged', 'he gets a hug', 'Are reminded of memory'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['gets recognized', 'he is greeted by someone', '{}'], 'oeff4b': ['recalls past', 'he gets a handshake', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
input Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
input Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
input Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff2a', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
input Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3b', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
input Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
input Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
input Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4a', 'write your effect here')
Add text `write your effect here` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
input Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4b', 'Your specified effect here')
Add text `Your specified effect here` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
input Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4c', 'Your text here')
Add text `Your text here` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
input Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
Executing one action: self.actions.modify_text('oeff4d', 'Your desired text here')
Add text `Your desired text here` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['write your effect here']
 visible_values : ['write your effect here']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your specified effect here']
 visible_values : ['Your specified effect here']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your text here']
 visible_values : ['Your text here']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['be nostalgiac', 'he is greeted', 'Are greeted by Y']`
----> answers: `['be nostalgiac', 'he is greeted', 'Are greeted by Y']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets acknowledged', 'he gets a hug', 'Are reminded of memory']`
----> answers: `['he gets a hug', 'Are reminded of memory', 'gets acknowledged']` - type: `<class 'list'>`
----> baseline_answer: `Your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets recognized', 'he is greeted by someone', '']`
----> answers: `['', 'he is greeted by someone', 'gets recognized']` - type: `<class 'list'>`
----> baseline_answer: `write your effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['recalls past', 'he gets a handshake', '']`
----> answers: `['', 'he gets a handshake', 'recalls past']` - type: `<class 'list'>`
----> baseline_answer: `Your specified effect here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `ANLI Generation Eval - Reflective_ACL_1` = = = = = = = = = = = = 
First instance id: 28310
instance_id: 28376 <-> row_number: 66
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 28412 <-> row_number: 102
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 102 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 2, 1], 'h_o2_coherence': [-1, -2, -1], 'o1_h_o2_coherence': [-1, -2, -1], 'overall_coherence': [-1, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 28378 <-> row_number: 68
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 68 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-2, -2, -2], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28394 <-> row_number: 84
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 84 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-2, 1, -1], 'h_o2_coherence': [-2, -2, 1], 'o1_h_o2_coherence': [-2, -2, -1], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, 1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28458 <-> row_number: 148
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 148 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 1, -1], 'h_o2_coherence': [1, -1, -1], 'o1_h_o2_coherence': [1, -1, -1], 'overall_coherence': [1, -1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 28405 <-> row_number: 95
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 2, 1], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 1], 'overall_coherence': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28462 <-> row_number: 152
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 152 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, 2, -1], 'h_o2_coherence': [1, -2, -1], 'o1_h_o2_coherence': [-1, -2, -1], 'overall_coherence': [-1, -2, -1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '-2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_1" autocomplete="off" value="-2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 28427 <-> row_number: 117
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 117 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28320 <-> row_number: 10
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, -2], 'h_o2_coherence': [1, 1, -2], 'o1_h_o2_coherence': [1, 1, -2], 'overall_coherence': [1, 1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '-1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_2" autocomplete="off" value="-1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-1']
 visible_values : ['-1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28469 <-> row_number: 159
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 159 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28443 <-> row_number: 133
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 133 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, -2, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28339 <-> row_number: 29
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, -2, -2], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28417 <-> row_number: 107
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 107 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, -1, -2], 'h_o2_coherence': [1, -2, -2], 'o1_h_o2_coherence': [1, -2, -2], 'overall_coherence': [1, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28396 <-> row_number: 86
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 86 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28457 <-> row_number: 147
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 147 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 1], 'o1_h_o2_coherence': [2, 2, 1], 'overall_coherence': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28476 <-> row_number: 166
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 166 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2], 'h_o2_coherence': [-2, -2], 'o1_h_o2_coherence': [-2, -2], 'overall_coherence': [-2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28316 <-> row_number: 6
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28450 <-> row_number: 140
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 140 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28342 <-> row_number: 32
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, -2, -1], 'h_o2_coherence': [1, -2, -2], 'o1_h_o2_coherence': [1, -2, -2], 'overall_coherence': [1, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28365 <-> row_number: 55
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-2, -2, -2], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
input Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
input Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
input Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
input Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `ATOMIC - Object Rationale 13` = = = = = = = = = = = = 
First instance id: 15403
instance_id: 15785 <-> row_number: 382
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 382 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Transport a large object efficiently.'], 'rationale2': ['Cross a large body of water at a fast pace.'], 'rationale3': ['Interact with the internet in a user friendly manner.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Transport a large object efficiently.']`
----> answers: `['Transport a large object efficiently.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Cross a large body of water at a fast pace.']`
----> answers: `['Cross a large body of water at a fast pace.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Interact with the internet in a user friendly manner.']`
----> answers: `['Interact with the internet in a user friendly manner.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0]}
instance_id: 15524 <-> row_number: 121
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 121 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['People communicate in different ways. When people cannot speak in person, computers give a way to communicate by the internet.'], 'rationale2': ['People serve food at dinner parties to their guests. They need a place to put the foods. Plates allow a place to put food for guests.'], 'rationale3': ['Freshly baked cookies can make a mess. To keep hands clean a person needs to protect them. Holding cookies with napkins will protect hands from getting dirty.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your reason here')


Replace `'Your reason here'` with the actual rationale you want to input.
Failed to execute an action self.actions.modify_text('rationale2', 'Your reason here')


Replace `'Your reason here'` with the actual rationale you want to input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['People communicate in different ways. When people cannot speak in person, computers give a way to communicate by the internet.']`
----> answers: `['People communicate in different ways. When people cannot speak in person, computers give a way to communicate by the internet.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['People serve food at dinner parties to their guests. They need a place to put the foods. Plates allow a place to put food for guests.']`
----> answers: `['People serve food at dinner parties to their guests. They need a place to put the foods. Plates allow a place to put food for guests.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Freshly baked cookies can make a mess. To keep hands clean a person needs to protect them. Holding cookies with napkins will protect hands from getting dirty.']`
----> answers: `['Freshly baked cookies can make a mess. To keep hands clean a person needs to protect them. Holding cookies with napkins will protect hands from getting dirty.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15769 <-> row_number: 366
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 366 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Sick time is a form of leave given to people who work to use in case they get sick. If the person had no sick time, they may have gotten in trouble for staying home.'], 'rationale2': ['Written speeches are a good way to keep ideas in order when giving a sermon.'], 'rationale3': ['Leashes are used to secure dogs from running away from you, and most dog parks require all dogs to remain on leashes.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation goes here.')
Add text `Your explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your detailed explanation goes here.')
Add text `Your detailed explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation goes here.']
 visible_values : ['Your explanation goes here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your detailed explanation goes here.']
 visible_values : ['Your detailed explanation goes here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Sick time is a form of leave given to people who work to use in case they get sick. If the person had no sick time, they may have gotten in trouble for staying home.']`
----> answers: `['Sick time is a form of leave given to people who work to use in case they get sick. If the person had no sick time, they may have gotten in trouble for staying home.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Written speeches are a good way to keep ideas in order when giving a sermon.']`
----> answers: `['Written speeches are a good way to keep ideas in order when giving a sermon.']` - type: `<class 'list'>`
----> baseline_answer: `Your detailed explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Leashes are used to secure dogs from running away from you, and most dog parks require all dogs to remain on leashes.']`
----> answers: `['Leashes are used to secure dogs from running away from you, and most dog parks require all dogs to remain on leashes.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15681 <-> row_number: 278
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 278 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A passport is required to travel to other countries on a trip. You will be asked for a passport so you must provide one.'], 'rationale2': ['Soy sauce is a traditional seasoning for Chinese food. You can make a Chinese food taste more authentic and delicious with soy sauce.'], 'rationale3': ['A cell phone can be dialed in order to connect to the phone number of a friend. You can talk to a friend over the phone to ask them things.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your rationale here.')
Add text `Your rationale here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here.']
 visible_values : ['Your rationale here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A passport is required to travel to other countries on a trip. You will be asked for a passport so you must provide one.']`
----> answers: `['A passport is required to travel to other countries on a trip. You will be asked for a passport so you must provide one.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Soy sauce is a traditional seasoning for Chinese food. You can make a Chinese food taste more authentic and delicious with soy sauce.']`
----> answers: `['Soy sauce is a traditional seasoning for Chinese food. You can make a Chinese food taste more authentic and delicious with soy sauce.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A cell phone can be dialed in order to connect to the phone number of a friend. You can talk to a friend over the phone to ask them things.']`
----> answers: `['A cell phone can be dialed in order to connect to the phone number of a friend. You can talk to a friend over the phone to ask them things.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15556 <-> row_number: 153
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 153 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Container to keep items secure.'], 'rationale2': ['Place multiple items in one location.'], 'rationale3': ['Interact with the internet and other software in a user friendly manner.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your custom rationale text here')
Add text `Your custom rationale text here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your Explanation Here')
Add text `Your Explanation Here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your custom rationale text here']
 visible_values : ['Your custom rationale text here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your Explanation Here']
 visible_values : ['Your Explanation Here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Container to keep items secure.']`
----> answers: `['Container to keep items secure.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Place multiple items in one location.']`
----> answers: `['Place multiple items in one location.']` - type: `<class 'list'>`
----> baseline_answer: `Your custom rationale text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Interact with the internet and other software in a user friendly manner.']`
----> answers: `['Interact with the internet and other software in a user friendly manner.']` - type: `<class 'list'>`
----> baseline_answer: `Your Explanation Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15526 <-> row_number: 123
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 123 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A van is big and easier to manuever in. If you can drive a van you can drive anything. It can hold more people so you can get more help driving.'], 'rationale2': ['A vehicle can cause a lot of damage if they hit a person. A van weighs a lot and is big and bulky.'], 'rationale3': ["Clothes will make sure you don't stand out in front of the crowd. it can help you concentrate better and not make you think about what others are thinking of your clothes."]}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A van is big and easier to manuever in. If you can drive a van you can drive anything. It can hold more people so you can get more help driving.']`
----> answers: `['A van is big and easier to manuever in. If you can drive a van you can drive anything. It can hold more people so you can get more help driving.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A vehicle can cause a lot of damage if they hit a person. A van weighs a lot and is big and bulky.']`
----> answers: `['A vehicle can cause a lot of damage if they hit a person. A van weighs a lot and is big and bulky.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `["Clothes will make sure you don't stand out in front of the crowd. it can help you concentrate better and not make you think about what others are thinking of your clothes."]`
----> answers: `["Clothes will make sure you don't stand out in front of the crowd. it can help you concentrate better and not make you think about what others are thinking of your clothes."]` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.05555555555555555
----> per-field score: 0.05555555555555555
 --> Per-instance overall score: 0.018518518518518517
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555]}
instance_id: 15440 <-> row_number: 37
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['So the can make posts.'], 'rationale2': ['So they can win the game.'], 'rationale3': ['They need laundry to fold.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your specific reason or explanation goes here.')
Add text `Your specific reason or explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation goes here.')
Add text `Your explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your specific reason or explanation goes here.']
 visible_values : ['Your specific reason or explanation goes here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation goes here.']
 visible_values : ['Your explanation goes here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['So the can make posts.']`
----> answers: `['So the can make posts.']` - type: `<class 'list'>`
----> baseline_answer: `Your specific reason or explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['So they can win the game.']`
----> answers: `['So they can win the game.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They need laundry to fold.']`
----> answers: `['They need laundry to fold.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0]}
instance_id: 15447 <-> row_number: 44
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Payment options are money which is used in exchange for goods.'], 'rationale2': ['Fertilizer is used in gardening to grow plants.'], 'rationale3': ['Tickets are proof that you purchased a seat.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your rationale here')
Add text `Your rationale here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here']
 visible_values : ['Your rationale here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Payment options are money which is used in exchange for goods.']`
----> answers: `['Payment options are money which is used in exchange for goods.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Fertilizer is used in gardening to grow plants.']`
----> answers: `['Fertilizer is used in gardening to grow plants.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Tickets are proof that you purchased a seat.']`
----> answers: `['Tickets are proof that you purchased a seat.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15702 <-> row_number: 299
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 299 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['The remote has a button on it. You push the button and it turns off the alarm.'], 'rationale2': ['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.'], 'rationale3': ['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your detailed explanation here.')
Add text `Your detailed explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your detailed explanation here.']
 visible_values : ['Your detailed explanation here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The remote has a button on it. You push the button and it turns off the alarm.']`
----> answers: `['The remote has a button on it. You push the button and it turns off the alarm.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.']`
----> answers: `['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']`
----> answers: `['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']` - type: `<class 'list'>`
----> baseline_answer: `Your detailed explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15571 <-> row_number: 168
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 168 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Extra cash allows for a purchase of 2 tickets instead of one so their friend can watch the movie'], 'rationale2': ['A schedule keeps an overall summary of appointment so that they are easier to remember'], 'rationale3': ['A phone allows connection to the pizza shop so that the order can be given to them in advance']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your specific rationale here')


Please replace `'Your specific rationale here'` with the actual rationale you wish to input.
Failed to execute an action self.actions.modify_text('rationale2', 'Your specific rationale here')


Please replace `'Your specific rationale here'` with the actual rationale you wish to input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your rationale here')
Add text `Your rationale here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here']
 visible_values : ['Your rationale here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Extra cash allows for a purchase of 2 tickets instead of one so their friend can watch the movie']`
----> answers: `['Extra cash allows for a purchase of 2 tickets instead of one so their friend can watch the movie']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A schedule keeps an overall summary of appointment so that they are easier to remember']`
----> answers: `['A schedule keeps an overall summary of appointment so that they are easier to remember']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A phone allows connection to the pizza shop so that the order can be given to them in advance']`
----> answers: `['A phone allows connection to the pizza shop so that the order can be given to them in advance']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15454 <-> row_number: 51
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 51 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Paperclips squeeze things together.  Placing paper between layers of a paperclip squeeze them together.'], 'rationale2': ['Newspapers have a classified section.  Classified sections list locally available jobs.'], 'rationale3': ['Buckets are containers that hold things.  Fish caught can be placed inside of buckets.  The fish can no longer get out and can be carried for later.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation goes here.')
Add text `Your explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation goes here.']
 visible_values : ['Your explanation goes here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Paperclips squeeze things together.  Placing paper between layers of a paperclip squeeze them together.']`
----> answers: `['Paperclips squeeze things together.  Placing paper between layers of a paperclip squeeze them together.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Newspapers have a classified section.  Classified sections list locally available jobs.']`
----> answers: `['Newspapers have a classified section.  Classified sections list locally available jobs.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Buckets are containers that hold things.  Fish caught can be placed inside of buckets.  The fish can no longer get out and can be carried for later.']`
----> answers: `['Buckets are containers that hold things.  Fish caught can be placed inside of buckets.  The fish can no longer get out and can be carried for later.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15448 <-> row_number: 45
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Credit cards are used for purchases electronically.'], 'rationale2': ['Bottles hold water.'], 'rationale3': ['Hairspray stiffens hair']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your rationale here')
Add text `Your rationale here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here']
 visible_values : ['Your rationale here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Credit cards are used for purchases electronically.']`
----> answers: `['Credit cards are used for purchases electronically.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Bottles hold water.']`
----> answers: `['Bottles hold water.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Hairspray stiffens hair']`
----> answers: `['Hairspray stiffens hair']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15588 <-> row_number: 185
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 185 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Because walking in uncomfortable shoes is foolish.'], 'rationale2': ['Because they forgot to set it.'], 'rationale3': ['Because those are the local laws and regulations.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your reason here')
Add text `Your reason here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your reason here.')
Add text `Your reason here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your reason here']
 visible_values : ['Your reason here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your reason here.']
 visible_values : ['Your reason here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Because walking in uncomfortable shoes is foolish.']`
----> answers: `['Because walking in uncomfortable shoes is foolish.']` - type: `<class 'list'>`
----> baseline_answer: `Your reason here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Because they forgot to set it.']`
----> answers: `['Because they forgot to set it.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Because those are the local laws and regulations.']`
----> answers: `['Because those are the local laws and regulations.']` - type: `<class 'list'>`
----> baseline_answer: `Your reason here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15743 <-> row_number: 340
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 340 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A cell phone security suite usually includes some sort of password.'], 'rationale2': ['A folder can organize the cutouts for later access and keep them safe.'], 'rationale3': ['If the program is a computer program, it needs a mouse to control it.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your rationale goes here')


Replace `'Your rationale goes here'` with the actual rationale you want to input into the textarea.
Failed to execute an action self.actions.modify_text('rationale1', 'Your rationale goes here')


Replace `'Your rationale goes here'` with the actual rationale you want to input into the textarea., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your desired text here')
Add text `Your desired text here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A cell phone security suite usually includes some sort of password.']`
----> answers: `['A cell phone security suite usually includes some sort of password.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A folder can organize the cutouts for later access and keep them safe.']`
----> answers: `['A folder can organize the cutouts for later access and keep them safe.']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['If the program is a computer program, it needs a mouse to control it.']`
----> answers: `['If the program is a computer program, it needs a mouse to control it.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15403 <-> row_number: 0
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Painting is applied to a medium by using a brush.'], 'rationale2': ['Broth is a common ingredient in soup. Many soup recipes require broth to be included.'], 'rationale3': ['When you mail something, it needs to be put in a specific container. Often times, an envelope is good enough to use.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your rationale here.')
Add text `Your rationale here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your rationale here.')
Add text `Your rationale here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here.']
 visible_values : ['Your rationale here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here.']
 visible_values : ['Your rationale here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Painting is applied to a medium by using a brush.']`
----> answers: `['Painting is applied to a medium by using a brush.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Broth is a common ingredient in soup. Many soup recipes require broth to be included.']`
----> answers: `['Broth is a common ingredient in soup. Many soup recipes require broth to be included.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['When you mail something, it needs to be put in a specific container. Often times, an envelope is good enough to use.']`
----> answers: `['When you mail something, it needs to be put in a specific container. Often times, an envelope is good enough to use.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15827 <-> row_number: 424
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 424 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Footwear refers to shoes, boots or any other protective foot covering. You need footwear to protect your feet while running.'], 'rationale2': ["A resume is a document that details a person's professional qualifications. If you are looking for a new career, you need a resume to attach to any new job application."], 'rationale3': ['A bag is a container. When you pick corn, you need a bag to carry the corn and other vegetables.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your rationale here')
Add text `Your rationale here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here.')


Replace `'Your explanation here.'` with the actual rationale or explanation you wish to input into the `textarea`.

Failed to execute an action self.actions.modify_text('rationale2', 'Your explanation here.')


Replace `'Your explanation here.'` with the actual rationale or explanation you wish to input into the `textarea`.
, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation goes here.')
Add text `Your explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here']
 visible_values : ['Your rationale here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation goes here.']
 visible_values : ['Your explanation goes here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Footwear refers to shoes, boots or any other protective foot covering. You need footwear to protect your feet while running.']`
----> answers: `['Footwear refers to shoes, boots or any other protective foot covering. You need footwear to protect your feet while running.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here` - type: `<class 'str'>`
 --> scores:  0.08695652173913045
----> per-field score: 0.08695652173913045
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `["A resume is a document that details a person's professional qualifications. If you are looking for a new career, you need a resume to attach to any new job application."]`
----> answers: `["A resume is a document that details a person's professional qualifications. If you are looking for a new career, you need a resume to attach to any new job application."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A bag is a container. When you pick corn, you need a bag to carry the corn and other vegetables.']`
----> answers: `['A bag is a container. When you pick corn, you need a bag to carry the corn and other vegetables.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.028985507246376815
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08695652173913045, 0.0, 0.0]}
instance_id: 15489 <-> row_number: 86
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 86 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Lawn mowers rely on gasoline to power them. You will need to fill the gas reservoir with gasoline before starting the lawn mower engine.'], 'rationale2': ['Sometimes people sign documents to show that they approve of something. A boss will sign their signature on finished work to show their approval.'], 'rationale3': ['A strap is an easy way to keep a bag attached to your person. It can help to prevent you from losing your bag with money in it and minimizes the risk of having the bag stolen.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Lawn mowers rely on gasoline to power them. You will need to fill the gas reservoir with gasoline before starting the lawn mower engine.']`
----> answers: `['Lawn mowers rely on gasoline to power them. You will need to fill the gas reservoir with gasoline before starting the lawn mower engine.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Sometimes people sign documents to show that they approve of something. A boss will sign their signature on finished work to show their approval.']`
----> answers: `['Sometimes people sign documents to show that they approve of something. A boss will sign their signature on finished work to show their approval.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A strap is an easy way to keep a bag attached to your person. It can help to prevent you from losing your bag with money in it and minimizes the risk of having the bag stolen.']`
----> answers: `['A strap is an easy way to keep a bag attached to your person. It can help to prevent you from losing your bag with money in it and minimizes the risk of having the bag stolen.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.05
----> per-field score: 0.05
 --> Per-instance overall score: 0.016666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08695652173913045, 0.0, 0.0, 0.0, 0.0, 0.05]}
instance_id: 15829 <-> row_number: 426
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 426 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['a chair is needed because waiting for a long time could make your feet hurt'], 'rationale2': ['a newpaper will have new job listings to look for a new job'], 'rationale3': ['sunglasses will make it more obvious they are giving a look']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your desired text here')
Add text `Your desired text here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['a chair is needed because waiting for a long time could make your feet hurt']`
----> answers: `['a chair is needed because waiting for a long time could make your feet hurt']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.1111111111111111
----> per-field score: 0.1111111111111111
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['a newpaper will have new job listings to look for a new job']`
----> answers: `['a newpaper will have new job listings to look for a new job']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['sunglasses will make it more obvious they are giving a look']`
----> answers: `['sunglasses will make it more obvious they are giving a look']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.037037037037037035
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08695652173913045, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1111111111111111, 0.0, 0.0]}
instance_id: 15668 <-> row_number: 265
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 265 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A contact is a specific individual that can be contacted to find information.  Every phone has a unique number, referred to as the phone number.'], 'rationale2': ['Tomatoes are a round fleshy red fruit.  Tomatoes are used to make marinara sauce for pasta.'], 'rationale3': ['A pump is a device used to force air into an inflatable object.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here.')
Add text `Your explanation here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your detailed explanation goes here.')
Add text `Your detailed explanation goes here.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here.']
 visible_values : ['Your explanation here.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your detailed explanation goes here.']
 visible_values : ['Your detailed explanation goes here.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A contact is a specific individual that can be contacted to find information.  Every phone has a unique number, referred to as the phone number.']`
----> answers: `['A contact is a specific individual that can be contacted to find information.  Every phone has a unique number, referred to as the phone number.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Tomatoes are a round fleshy red fruit.  Tomatoes are used to make marinara sauce for pasta.']`
----> answers: `['Tomatoes are a round fleshy red fruit.  Tomatoes are used to make marinara sauce for pasta.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A pump is a device used to force air into an inflatable object.']`
----> answers: `['A pump is a device used to force air into an inflatable object.']` - type: `<class 'list'>`
----> baseline_answer: `Your detailed explanation goes here.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08695652173913045, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1111111111111111, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 15592 <-> row_number: 189
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 189 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Their brother is cheap and will not eat out without a discount.'], 'rationale2': ['They saw the friend at a store, so the store needs to exist.'], 'rationale3': ['They are calling to make an appointment to get a new license.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
input Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale1', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
input Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale2', 'Your explanation here')
Add text `Your explanation here` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
input Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
Executing one action: self.actions.modify_text('rationale3', 'Your rationale here')
Add text `Your rationale here` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your explanation here']
 visible_values : ['Your explanation here']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Your rationale here']
 visible_values : ['Your rationale here']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Their brother is cheap and will not eat out without a discount.']`
----> answers: `['Their brother is cheap and will not eat out without a discount.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They saw the friend at a store, so the store needs to exist.']`
----> answers: `['They saw the friend at a store, so the store needs to exist.']` - type: `<class 'list'>`
----> baseline_answer: `Your explanation here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They are calling to make an appointment to get a new license.']`
----> answers: `['They are calling to make an appointment to get a new license.']` - type: `<class 'list'>`
----> baseline_answer: `Your rationale here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05555555555555555, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.08695652173913045, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1111111111111111, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Missing Adjective FITB` = = = = = = = = = = = = 
First instance id: 5903
instance_id: 5967 <-> row_number: 64
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['last', 'this', 'last', 'last', 'last'], 'Sent1FreeTextInput': ['rural', 'small', 'fishing', 'little', 'rural'], 'Sent2FreeTextInput': ['american', 'perfect', 'life supreme', 'american', 'American'], 'Sent3FreeTextInput': ['massive', 'long', 'long massive', 'low', 'strong'], 'Sent4FreeTextInput': ['implied', 'veiled', 'constant renewed', 'military', 'military'], 'Sent5FreeTextInput': ['pharmaceutical', 'large', 'oil shoe advertising', 'entertainment', 'finance'], 'Sent6FreeTextInput': ['economy', 'commuter', 'public charter', 'private', 'regional'], 'Sent7FreeTextInput': ['secondary, minor', 'premier', 'southwest', 'fourth', 'Premier'], 'Sent8FreeTextInput': ['chinese', 'long-time', 'young', 'Japanese', 'ineffective'], 'Sent9FreeTextInput': ['new, upcoming', 'competitive', 'competitive', 'proud', 'competitive']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'American')
Add text `American` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'discount')
Add text `discount` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'desired input value')
Add text `desired input value` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'desired text here')
Add text `desired text here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['American']
 visible_values : ['American']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['discount']
 visible_values : ['discount']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['desired input value']
 visible_values : ['desired input value']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['desired text here']
 visible_values : ['desired text here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'this', 'last', 'last', 'last']`
----> answers: `['this', 'last']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['rural', 'small', 'fishing', 'little', 'rural']`
----> answers: `['little', 'small', 'rural', 'fishing']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['american', 'perfect', 'life supreme', 'american', 'American']`
----> answers: `['american', 'American', 'life supreme', 'perfect']` - type: `<class 'list'>`
----> baseline_answer: `American` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['massive', 'long', 'long massive', 'low', 'strong']`
----> answers: `['massive', 'long massive', 'long', 'low', 'strong']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['implied', 'veiled', 'constant renewed', 'military', 'military']`
----> answers: `['veiled', 'military', 'implied', 'constant renewed']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['pharmaceutical', 'large', 'oil shoe advertising', 'entertainment', 'finance']`
----> answers: `['oil shoe advertising', 'finance', 'large', 'pharmaceutical', 'entertainment']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['economy', 'commuter', 'public charter', 'private', 'regional']`
----> answers: `['regional', 'public charter', 'commuter', 'economy', 'private']` - type: `<class 'list'>`
----> baseline_answer: `discount` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['secondary, minor', 'premier', 'southwest', 'fourth', 'Premier']`
----> answers: `['Premier', 'southwest', 'fourth', 'premier', 'secondary, minor']` - type: `<class 'list'>`
----> baseline_answer: `desired input value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['chinese', 'long-time', 'young', 'Japanese', 'ineffective']`
----> answers: `['chinese', 'ineffective', 'Japanese', 'long-time', 'young']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new, upcoming', 'competitive', 'competitive', 'proud', 'competitive']`
----> answers: `['new, upcoming', 'proud', 'competitive']` - type: `<class 'list'>`
----> baseline_answer: `desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5925 <-> row_number: 22
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['negative', 'new', 'new', 'negative', 'negative'], 'Sent1FreeTextInput': ['crude', 'unleaded', 'local', 'diesel', 'American'], 'Sent2FreeTextInput': ['fiscal', 'fiscal', 'last', 'past', 'calendar'], 'Sent3FreeTextInput': ['coming', 'initial', 'local', 'current', "company's"], 'Sent4FreeTextInput': ['international', 'economic', 'peace', 'international', 'international'], 'Sent5FreeTextInput': ['monetary, military', 'military', 'foreign', 'astute', 'military'], 'Sent6FreeTextInput': ['jungle', 'occupied', 'foreign', 'Iraqi', 'capital'], 'Sent7FreeTextInput': ['prime', 'prime', 'prime', 'prime', 'prime'], 'Sent8FreeTextInput': ['nonviolent', 'rebel', 'major', 'Syrian', 'the'], 'Sent9FreeTextInput': ['federal', 'federal', 'state', 'federal, state', 'federal']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'positive')
Add text `positive` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'partial')
Add text `partial` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'input_value')
Add text `input_value` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'military')
Add text `military` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'desired answer')
Add text `desired answer` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'the')
Add text `the` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['positive']
 visible_values : ['positive']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['partial']
 visible_values : ['partial']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['input_value']
 visible_values : ['input_value']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['military']
 visible_values : ['military']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['desired answer']
 visible_values : ['desired answer']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['the']
 visible_values : ['the']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['negative', 'new', 'new', 'negative', 'negative']`
----> answers: `['new', 'negative']` - type: `<class 'list'>`
----> baseline_answer: `positive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['crude', 'unleaded', 'local', 'diesel', 'American']`
----> answers: `['diesel', 'local', 'American', 'crude', 'unleaded']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fiscal', 'fiscal', 'last', 'past', 'calendar']`
----> answers: `['calendar', 'last', 'fiscal', 'past']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['coming', 'initial', 'local', 'current', "company's"]`
----> answers: `['coming', 'initial', 'local', 'current', "company's"]` - type: `<class 'list'>`
----> baseline_answer: `partial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['international', 'economic', 'peace', 'international', 'international']`
----> answers: `['economic', 'international', 'peace']` - type: `<class 'list'>`
----> baseline_answer: `input_value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['monetary, military', 'military', 'foreign', 'astute', 'military']`
----> answers: `['astute', 'military', 'monetary, military', 'foreign']` - type: `<class 'list'>`
----> baseline_answer: `military` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['jungle', 'occupied', 'foreign', 'Iraqi', 'capital']`
----> answers: `['jungle', 'capital', 'foreign', 'Iraqi', 'occupied']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['prime', 'prime', 'prime', 'prime', 'prime']`
----> answers: `['prime']` - type: `<class 'list'>`
----> baseline_answer: `desired answer` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['nonviolent', 'rebel', 'major', 'Syrian', 'the']`
----> answers: `['the', 'nonviolent', 'rebel', 'Syrian', 'major']` - type: `<class 'list'>`
----> baseline_answer: `the` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['federal', 'federal', 'state', 'federal, state', 'federal']`
----> answers: `['federal, state', 'federal', 'state']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5964 <-> row_number: 61
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['national', 'Old', 'national', 'previous', 'yearly'], 'Sent1FreeTextInput': ['expected', 'Future', 'criminal', 'upcoming', 'political'], 'Sent2FreeTextInput': ['upcoming', 'Area', 'voting', 'school', 'school'], 'Sent3FreeTextInput': ['additional', 'New', 'new', 'new', 'brand new'], 'Sent4FreeTextInput': ['economic', 'Better, new', 'national', 'wage', 'economic'], 'Sent5FreeTextInput': ['aggressive', 'Isolated', 'domestic', 'abhorrent', 'questionable social'], 'Sent6FreeTextInput': ['cricket', 'To', 'losing', 'home', 'with a'], 'Sent7FreeTextInput': ['vast', 'Greater', 'decreasing', 'increasing', 'a record'], 'Sent8FreeTextInput': ['budgetary', 'Major', 'no', 'huge', 'questionable'], 'Sent9FreeTextInput': ['interest', 'Interest', 'high', 'interest', 'fed funds']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'possible')
Add text `possible` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'your desired text here')
Add text `your desired text here` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'Your Answer Here')
Add text `Your Answer Here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'economic')
Add text `economic` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'significant')
Add text `significant` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'interest')
Add text `interest` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['possible']
 visible_values : ['possible']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your desired text here']
 visible_values : ['your desired text here']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Your Answer Here']
 visible_values : ['Your Answer Here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['economic']
 visible_values : ['economic']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['significant']
 visible_values : ['significant']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['interest']
 visible_values : ['interest']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'Old', 'national', 'previous', 'yearly']`
----> answers: `['previous', 'yearly', 'Old', 'national']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['expected', 'Future', 'criminal', 'upcoming', 'political']`
----> answers: `['political', 'Future', 'criminal', 'expected', 'upcoming']` - type: `<class 'list'>`
----> baseline_answer: `possible` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['upcoming', 'Area', 'voting', 'school', 'school']`
----> answers: `['school', 'Area', 'voting', 'upcoming']` - type: `<class 'list'>`
----> baseline_answer: `your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['additional', 'New', 'new', 'new', 'brand new']`
----> answers: `['additional', 'brand new', 'New', 'new']` - type: `<class 'list'>`
----> baseline_answer: `Your Answer Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['economic', 'Better, new', 'national', 'wage', 'economic']`
----> answers: `['economic', 'Better, new', 'national', 'wage']` - type: `<class 'list'>`
----> baseline_answer: `economic` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['aggressive', 'Isolated', 'domestic', 'abhorrent', 'questionable social']`
----> answers: `['domestic', 'aggressive', 'Isolated', 'questionable social', 'abhorrent']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['cricket', 'To', 'losing', 'home', 'with a']`
----> answers: `['losing', 'home', 'with a', 'To', 'cricket']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['vast', 'Greater', 'decreasing', 'increasing', 'a record']`
----> answers: `['a record', 'decreasing', 'Greater', 'increasing', 'vast']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['budgetary', 'Major', 'no', 'huge', 'questionable']`
----> answers: `['Major', 'questionable', 'budgetary', 'no', 'huge']` - type: `<class 'list'>`
----> baseline_answer: `significant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['interest', 'Interest', 'high', 'interest', 'fed funds']`
----> answers: `['fed funds', 'Interest', 'high', 'interest']` - type: `<class 'list'>`
----> baseline_answer: `interest` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5911 <-> row_number: 8
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['last-minute, surprise', 'inside, outside', 'fly, double, grand slam', 'straight'], 'Sent1FreeTextInput': ['moderate', 'major', 'severe', 'severe'], 'Sent2FreeTextInput': ['Georgian', 'muslim', 'group', 'Bosnian'], 'Sent3FreeTextInput': ['outgoing', 'current, past, previous', 'interim, group, company', 'vice'], 'Sent4FreeTextInput': ['first', 'first, second', 'prelimiary, quaterfinal', 'semi-final'], 'Sent5FreeTextInput': ['fugitive', 'hated, evil, cruel', 'Iraqi', 'ex'], 'Sent6FreeTextInput': ['demilitarized', 'no-fly', 'neutral', 'no-fly'], 'Sent7FreeTextInput': ['sexual', 'sexual', 'sexual', 'sexual'], 'Sent8FreeTextInput': ['extra', 'extra', 'extra', 'off'], 'Sent9FreeTextInput': ['new,modern', 'computer, electronic, drone, bio', 'missle', 'nuclear']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'game-winning')
Add text `game-winning` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'Albanian')
Add text `Albanian` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'Your Text Here')
Add text `Your Text Here` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'former')
Add text `former` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'no-fly')
Add text `no-fly` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'sexual')
Add text `sexual` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'additional')
Add text `additional` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'military')
Add text `military` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['game-winning']
 visible_values : ['game-winning']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Albanian']
 visible_values : ['Albanian']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Your Text Here']
 visible_values : ['Your Text Here']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['former']
 visible_values : ['former']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['no-fly']
 visible_values : ['no-fly']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['sexual']
 visible_values : ['sexual']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['additional']
 visible_values : ['additional']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['military']
 visible_values : ['military']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last-minute, surprise', 'inside, outside', 'fly, double, grand slam', 'straight']`
----> answers: `['straight', 'fly, double, grand slam', 'last-minute, surprise', 'inside, outside']` - type: `<class 'list'>`
----> baseline_answer: `game-winning` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['moderate', 'major', 'severe', 'severe']`
----> answers: `['severe', 'moderate', 'major']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Georgian', 'muslim', 'group', 'Bosnian']`
----> answers: `['muslim', 'Bosnian', 'Georgian', 'group']` - type: `<class 'list'>`
----> baseline_answer: `Albanian` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['outgoing', 'current, past, previous', 'interim, group, company', 'vice']`
----> answers: `['outgoing', 'current, past, previous', 'interim, group, company', 'vice']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'first, second', 'prelimiary, quaterfinal', 'semi-final']`
----> answers: `['semi-final', 'prelimiary, quaterfinal', 'first', 'first, second']` - type: `<class 'list'>`
----> baseline_answer: `Your Text Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fugitive', 'hated, evil, cruel', 'Iraqi', 'ex']`
----> answers: `['fugitive', 'hated, evil, cruel', 'Iraqi', 'ex']` - type: `<class 'list'>`
----> baseline_answer: `former` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['demilitarized', 'no-fly', 'neutral', 'no-fly']`
----> answers: `['demilitarized', 'neutral', 'no-fly']` - type: `<class 'list'>`
----> baseline_answer: `no-fly` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['sexual', 'sexual', 'sexual', 'sexual']`
----> answers: `['sexual']` - type: `<class 'list'>`
----> baseline_answer: `sexual` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['extra', 'extra', 'extra', 'off']`
----> answers: `['extra', 'off']` - type: `<class 'list'>`
----> baseline_answer: `additional` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new,modern', 'computer, electronic, drone, bio', 'missle', 'nuclear']`
----> answers: `['new,modern', 'missle', 'nuclear', 'computer, electronic, drone, bio']` - type: `<class 'list'>`
----> baseline_answer: `military` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 5920 <-> row_number: 17
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['1st', 'last', 'third', 'second', 'second'], 'Sent1FreeTextInput': ['highest', 'important', 'difficult', 'critical', 'negative'], 'Sent2FreeTextInput': ['downed', 'jet', 'French', 'Iraqi', 'large'], 'Sent3FreeTextInput': ['business', 'private', 'oil', 'private', 'lower'], 'Sent4FreeTextInput': ['sister', 'solo', 'car', 'sister', 'separate'], 'Sent5FreeTextInput': ['first', 'tour', 'tournament', 'clear', 'exciting'], 'Sent6FreeTextInput': ['other', 'opposing', 'other', 'radical', 'opposing'], 'Sent7FreeTextInput': ['sudden', 'sudden', 'major', 'dramatic', 'new'], 'Sent8FreeTextInput': ['side', 'swift', 'high', 'side', 'match'], 'Sent9FreeTextInput': ['moving', 'parked', 'civilian', 'government', 'military']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'fourth')
Add text `fourth` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'YOUR TEXT HERE')
Add text `YOUR TEXT HERE` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'private')
Add text `private` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'separate')
Add text `separate` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'sudden')
Add text `sudden` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'free')
Add text `free` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'military')
Add text `military` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['fourth']
 visible_values : ['fourth']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['YOUR TEXT HERE']
 visible_values : ['YOUR TEXT HERE']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['private']
 visible_values : ['private']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['separate']
 visible_values : ['separate']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['sudden']
 visible_values : ['sudden']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['free']
 visible_values : ['free']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['military']
 visible_values : ['military']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['1st', 'last', 'third', 'second', 'second']`
----> answers: `['last', 'third', '1st', 'second']` - type: `<class 'list'>`
----> baseline_answer: `fourth` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['highest', 'important', 'difficult', 'critical', 'negative']`
----> answers: `['highest', 'critical', 'important', 'difficult', 'negative']` - type: `<class 'list'>`
----> baseline_answer: `YOUR TEXT HERE` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['downed', 'jet', 'French', 'Iraqi', 'large']`
----> answers: `['downed', 'jet', 'large', 'French', 'Iraqi']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['business', 'private', 'oil', 'private', 'lower']`
----> answers: `['lower', 'business', 'private', 'oil']` - type: `<class 'list'>`
----> baseline_answer: `private` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['sister', 'solo', 'car', 'sister', 'separate']`
----> answers: `['car', 'solo', 'separate', 'sister']` - type: `<class 'list'>`
----> baseline_answer: `separate` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'tour', 'tournament', 'clear', 'exciting']`
----> answers: `['clear', 'first', 'tour', 'tournament', 'exciting']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['other', 'opposing', 'other', 'radical', 'opposing']`
----> answers: `['opposing', 'other', 'radical']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['sudden', 'sudden', 'major', 'dramatic', 'new']`
----> answers: `['sudden', 'dramatic', 'major', 'new']` - type: `<class 'list'>`
----> baseline_answer: `sudden` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['side', 'swift', 'high', 'side', 'match']`
----> answers: `['high', 'side', 'match', 'swift']` - type: `<class 'list'>`
----> baseline_answer: `free` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['moving', 'parked', 'civilian', 'government', 'military']`
----> answers: `['moving', 'civilian', 'government', 'military', 'parked']` - type: `<class 'list'>`
----> baseline_answer: `military` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 5935 <-> row_number: 32
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['international', 'international', 'international', 'largest', 'international'], 'Sent1FreeTextInput': ['last', 'last', 'last', 'new', 'previous'], 'Sent2FreeTextInput': ['international', 'southern', 'country', 'southern', 'Mexican'], 'Sent3FreeTextInput': ['daily', 'AP, financial', 'local', 'action', 'current'], 'Sent4FreeTextInput': ['fashion', 'fashion', 'female', 'top', 'fashion'], 'Sent5FreeTextInput': ['best', 'best', 'best', 'best', 'best'], 'Sent6FreeTextInput': ['stony', 'blank', 'blank', 'blank', 'blank'], 'Sent7FreeTextInput': ['massive', 'military', 'economic', 'new', 'government'], 'Sent8FreeTextInput': ['international', 'southern', 'southern', 'northern', 'southern'], 'Sent9FreeTextInput': ['gross', 'consumer', 'consumer', 'powerful', 'consumer']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'Barajas')
Add text `Barajas` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'value')
Add text `value` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'desired text value')
Add text `desired text value` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'eastward')
Add text `eastward` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'eastern')
Add text `eastern` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Barajas']
 visible_values : ['Barajas']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['value']
 visible_values : ['value']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['desired text value']
 visible_values : ['desired text value']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['eastward']
 visible_values : ['eastward']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['eastern']
 visible_values : ['eastern']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['international', 'international', 'international', 'largest', 'international']`
----> answers: `['international', 'largest']` - type: `<class 'list'>`
----> baseline_answer: `Barajas` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'last', 'last', 'new', 'previous']`
----> answers: `['previous', 'last', 'new']` - type: `<class 'list'>`
----> baseline_answer: `value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['international', 'southern', 'country', 'southern', 'Mexican']`
----> answers: `['southern', 'international', 'country', 'Mexican']` - type: `<class 'list'>`
----> baseline_answer: `desired text value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['daily', 'AP, financial', 'local', 'action', 'current']`
----> answers: `['local', 'current', 'daily', 'action', 'AP, financial']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fashion', 'fashion', 'female', 'top', 'fashion']`
----> answers: `['top', 'fashion', 'female']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['best', 'best', 'best', 'best', 'best']`
----> answers: `['best']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['stony', 'blank', 'blank', 'blank', 'blank']`
----> answers: `['blank', 'stony']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['massive', 'military', 'economic', 'new', 'government']`
----> answers: `['economic', 'massive', 'new', 'government', 'military']` - type: `<class 'list'>`
----> baseline_answer: `eastward` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['international', 'southern', 'southern', 'northern', 'southern']`
----> answers: `['southern', 'northern', 'international']` - type: `<class 'list'>`
----> baseline_answer: `eastern` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['gross', 'consumer', 'consumer', 'powerful', 'consumer']`
----> answers: `['gross', 'consumer', 'powerful']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5981 <-> row_number: 78
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['political, police, popular', 'anti-abortion', 'full-fledged', 'charity', 'legal'], 'Sent1FreeTextInput': ["Trump's, republican, this", 'authoritarian', 'dictatorship', 'one', 'republican'], 'Sent2FreeTextInput': ['state, soverign', 'Federal', 'National', 'Conglomerate', 'national'], 'Sent3FreeTextInput': ['art', 'important', 'exclusive', 'esteemed', 'high'], 'Sent4FreeTextInput': ['first, second', 'fifth', 'first', 'second', 'third'], 'Sent5FreeTextInput': ['grain, wheat, oats', 'flour', 'oil', 'wheat', 'rice'], 'Sent6FreeTextInput': ['last, this', 'last', 'last', 'three', 'last'], 'Sent7FreeTextInput': ['military, economic', 'military', 'military', 'aid', 'miliary'], 'Sent8FreeTextInput': ['fast', 'increased', 'quick', 'smooth', 'easy'], 'Sent9FreeTextInput': ['direct, constant', 'close', 'constant', 'vigilant', 'constant']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'central')
Add text `central` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'CSB')
Add text `CSB` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'military')
Add text `military` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['central']
 visible_values : ['central']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['CSB']
 visible_values : ['CSB']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['military']
 visible_values : ['military']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['political, police, popular', 'anti-abortion', 'full-fledged', 'charity', 'legal']`
----> answers: `['full-fledged', 'anti-abortion', 'political, police, popular', 'charity', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `["Trump's, republican, this", 'authoritarian', 'dictatorship', 'one', 'republican']`
----> answers: `['one', 'republican', 'dictatorship', "Trump's, republican, this", 'authoritarian']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['state, soverign', 'Federal', 'National', 'Conglomerate', 'national']`
----> answers: `['Conglomerate', 'National', 'national', 'state, soverign', 'Federal']` - type: `<class 'list'>`
----> baseline_answer: `central` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['art', 'important', 'exclusive', 'esteemed', 'high']`
----> answers: `['esteemed', 'exclusive', 'important', 'high', 'art']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first, second', 'fifth', 'first', 'second', 'third']`
----> answers: `['first', 'fifth', 'first, second', 'second', 'third']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['grain, wheat, oats', 'flour', 'oil', 'wheat', 'rice']`
----> answers: `['grain, wheat, oats', 'rice', 'flour', 'wheat', 'oil']` - type: `<class 'list'>`
----> baseline_answer: `CSB` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last, this', 'last', 'last', 'three', 'last']`
----> answers: `['last, this', 'last', 'three']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['military, economic', 'military', 'military', 'aid', 'miliary']`
----> answers: `['military, economic', 'military', 'aid', 'miliary']` - type: `<class 'list'>`
----> baseline_answer: `military` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fast', 'increased', 'quick', 'smooth', 'easy']`
----> answers: `['smooth', 'increased', 'easy', 'fast', 'quick']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['direct, constant', 'close', 'constant', 'vigilant', 'constant']`
----> answers: `['constant', 'direct, constant', 'vigilant', 'close']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 5937 <-> row_number: 34
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 34 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['harsh', 'valid, popular, debunked', 'constructive', 'best, newest', 'harsh'], 'Sent1FreeTextInput': ['original', 'own, original', 'original', 'own, original', 'written'], 'Sent2FreeTextInput': ['biographical', 'environmental', 'award-winning', 'popular', 'epic'], 'Sent3FreeTextInput': ['consecutive', 'consecutive', 'consecutive', 'consecutive', 'consecutive'], 'Sent4FreeTextInput': ['chief', 'chief', 'chief', 'top', 'current'], 'Sent5FreeTextInput': ['democratic', 'democratic, local, state', 'democratic', 'democratic , free', 'civilian'], 'Sent6FreeTextInput': ['militant', 'terrorist, ISIS', 'this', 'terrorist', 'terror'], 'Sent7FreeTextInput': ['winning', 'winning', 'whole', 'lead, first', 'first'], 'Sent8FreeTextInput': ['second', 'second', 'second', 'second', 'second'], 'Sent9FreeTextInput': ['long', 'subway, taxi, cab', 'long', 'long, boring', 'long']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'Your Answer Here')
Add text `Your Answer Here` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your text here')
Add text `your text here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'consecutive')
Add text `consecutive` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'civilian')
Add text `civilian` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'Al-Qaeda')
Add text `Al-Qaeda` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'your-answer-here')
Add text `your-answer-here` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'second')
Add text `second` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'long')
Add text `long` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Your Answer Here']
 visible_values : ['Your Answer Here']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your text here']
 visible_values : ['your text here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['consecutive']
 visible_values : ['consecutive']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['civilian']
 visible_values : ['civilian']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Al-Qaeda']
 visible_values : ['Al-Qaeda']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your-answer-here']
 visible_values : ['your-answer-here']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['second']
 visible_values : ['second']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['long']
 visible_values : ['long']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['harsh', 'valid, popular, debunked', 'constructive', 'best, newest', 'harsh']`
----> answers: `['constructive', 'valid, popular, debunked', 'best, newest', 'harsh']` - type: `<class 'list'>`
----> baseline_answer: `Your Answer Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['original', 'own, original', 'original', 'own, original', 'written']`
----> answers: `['written', 'own, original', 'original']` - type: `<class 'list'>`
----> baseline_answer: `your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['biographical', 'environmental', 'award-winning', 'popular', 'epic']`
----> answers: `['award-winning', 'environmental', 'biographical', 'epic', 'popular']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['consecutive', 'consecutive', 'consecutive', 'consecutive', 'consecutive']`
----> answers: `['consecutive']` - type: `<class 'list'>`
----> baseline_answer: `consecutive` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['chief', 'chief', 'chief', 'top', 'current']`
----> answers: `['top', 'chief', 'current']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['democratic', 'democratic, local, state', 'democratic', 'democratic , free', 'civilian']`
----> answers: `['democratic , free', 'democratic, local, state', 'civilian', 'democratic']` - type: `<class 'list'>`
----> baseline_answer: `civilian` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['militant', 'terrorist, ISIS', 'this', 'terrorist', 'terror']`
----> answers: `['this', 'terrorist, ISIS', 'terror', 'terrorist', 'militant']` - type: `<class 'list'>`
----> baseline_answer: `Al-Qaeda` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['winning', 'winning', 'whole', 'lead, first', 'first']`
----> answers: `['whole', 'first', 'lead, first', 'winning']` - type: `<class 'list'>`
----> baseline_answer: `your-answer-here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'second', 'second', 'second', 'second']`
----> answers: `['second']` - type: `<class 'list'>`
----> baseline_answer: `second` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['long', 'subway, taxi, cab', 'long', 'long, boring', 'long']`
----> answers: `['long', 'long, boring', 'subway, taxi, cab']` - type: `<class 'list'>`
----> baseline_answer: `long` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 5914 <-> row_number: 11
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['swift', 'careful', 'supervised', 'multinational', 'necessary'], 'Sent1FreeTextInput': ['strong, mexican', 'Mexican', 'Mexican', 'Mexican', 'Mexican'], 'Sent2FreeTextInput': ['mild, severe', 'chronic', 'stomach', 'physical', 'internal'], 'Sent3FreeTextInput': ['big, vast', 'large', 'huge', 'huge', 'massive'], 'Sent4FreeTextInput': ['prime', 'prime', 'prime', 'late', 'prime'], 'Sent5FreeTextInput': ['ethic, advanced, was', 'electrical', 'mechanical', 'mechanical', 'chemical'], 'Sent6FreeTextInput': ['hate', 'violent', 'punishable', 'international', 'organized'], 'Sent7FreeTextInput': ['environmental', 'final', 'second', 'first', 'final'], 'Sent8FreeTextInput': ['small, wise', 'young', 'corageous', 'dead', 'innocent'], 'Sent9FreeTextInput': ['state, federal', 'government', 'financial', 'public', 'government']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'emergency')
Add text `emergency` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'Argentine')
Add text `Argentine` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'abdominal')
Add text `abdominal` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'electrical')
Add text `electrical` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'organized')
Add text `organized` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'final')
Add text `final` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'young')
Add text `young` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'financial')
Add text `financial` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['emergency']
 visible_values : ['emergency']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Argentine']
 visible_values : ['Argentine']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['abdominal']
 visible_values : ['abdominal']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['electrical']
 visible_values : ['electrical']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['organized']
 visible_values : ['organized']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['final']
 visible_values : ['final']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['young']
 visible_values : ['young']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['financial']
 visible_values : ['financial']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['swift', 'careful', 'supervised', 'multinational', 'necessary']`
----> answers: `['multinational', 'necessary', 'careful', 'supervised', 'swift']` - type: `<class 'list'>`
----> baseline_answer: `emergency` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['strong, mexican', 'Mexican', 'Mexican', 'Mexican', 'Mexican']`
----> answers: `['Mexican', 'strong, mexican']` - type: `<class 'list'>`
----> baseline_answer: `Argentine` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mild, severe', 'chronic', 'stomach', 'physical', 'internal']`
----> answers: `['internal', 'stomach', 'chronic', 'physical', 'mild, severe']` - type: `<class 'list'>`
----> baseline_answer: `abdominal` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['big, vast', 'large', 'huge', 'huge', 'massive']`
----> answers: `['big, vast', 'huge', 'large', 'massive']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['prime', 'prime', 'prime', 'late', 'prime']`
----> answers: `['late', 'prime']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['ethic, advanced, was', 'electrical', 'mechanical', 'mechanical', 'chemical']`
----> answers: `['chemical', 'mechanical', 'ethic, advanced, was', 'electrical']` - type: `<class 'list'>`
----> baseline_answer: `electrical` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['hate', 'violent', 'punishable', 'international', 'organized']`
----> answers: `['organized', 'punishable', 'violent', 'hate', 'international']` - type: `<class 'list'>`
----> baseline_answer: `organized` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['environmental', 'final', 'second', 'first', 'final']`
----> answers: `['final', 'first', 'second', 'environmental']` - type: `<class 'list'>`
----> baseline_answer: `final` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['small, wise', 'young', 'corageous', 'dead', 'innocent']`
----> answers: `['corageous', 'dead', 'young', 'innocent', 'small, wise']` - type: `<class 'list'>`
----> baseline_answer: `young` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['state, federal', 'government', 'financial', 'public', 'government']`
----> answers: `['government', 'state, federal', 'public', 'financial']` - type: `<class 'list'>`
----> baseline_answer: `financial` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 6002 <-> row_number: 99
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 99 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['irrelevant', 'private', 'classified', 'privileged, confidential', 'private'], 'Sent1FreeTextInput': ['primary', 'primary', 'female', 'murder, new', 'colluding'], 'Sent2FreeTextInput': ['intelligent', 'original', 'FBI', 'intelligent', 'Intelligent'], 'Sent3FreeTextInput': ['long, recent', 'decades-long', 'exciting', 'unpredictable', 'volatile'], 'Sent4FreeTextInput': ['nuclear, religious', 'historical', 'terrorist', 'Palestinian, religious', 'possible enemy'], 'Sent5FreeTextInput': ['foreign', 'second', 'foreign', 'massive, nuclear', 'unwanted'], 'Sent6FreeTextInput': ['brutal, crushing', 'devastating', 'humiliating', 'disheartening', 'heart-breaking'], 'Sent7FreeTextInput': ['positive', 'real', 'real', 'real, significant', 'positive'], 'Sent8FreeTextInput': ['celebratory', 'last', 'new', 'big, final', 'last'], 'Sent9FreeTextInput': ['city', 'Islamic', 'governmental', 'rogue', 'police']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'confidential')
Add text `confidential` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'intelligent')
Add text `intelligent` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'your text here')
Add text `your text here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'first-round')
Add text `first-round` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'meaningful')
Add text `meaningful` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'final')
Add text `final` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'Your Answer Here')
Add text `Your Answer Here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['confidential']
 visible_values : ['confidential']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['intelligent']
 visible_values : ['intelligent']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your text here']
 visible_values : ['your text here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first-round']
 visible_values : ['first-round']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['meaningful']
 visible_values : ['meaningful']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['final']
 visible_values : ['final']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Your Answer Here']
 visible_values : ['Your Answer Here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['irrelevant', 'private', 'classified', 'privileged, confidential', 'private']`
----> answers: `['private', 'privileged, confidential', 'irrelevant', 'classified']` - type: `<class 'list'>`
----> baseline_answer: `confidential` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['primary', 'primary', 'female', 'murder, new', 'colluding']`
----> answers: `['murder, new', 'colluding', 'female', 'primary']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['intelligent', 'original', 'FBI', 'intelligent', 'Intelligent']`
----> answers: `['Intelligent', 'intelligent', 'FBI', 'original']` - type: `<class 'list'>`
----> baseline_answer: `intelligent` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['long, recent', 'decades-long', 'exciting', 'unpredictable', 'volatile']`
----> answers: `['long, recent', 'unpredictable', 'volatile', 'decades-long', 'exciting']` - type: `<class 'list'>`
----> baseline_answer: `your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['nuclear, religious', 'historical', 'terrorist', 'Palestinian, religious', 'possible enemy']`
----> answers: `['possible enemy', 'Palestinian, religious', 'nuclear, religious', 'terrorist', 'historical']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['foreign', 'second', 'foreign', 'massive, nuclear', 'unwanted']`
----> answers: `['unwanted', 'massive, nuclear', 'second', 'foreign']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['brutal, crushing', 'devastating', 'humiliating', 'disheartening', 'heart-breaking']`
----> answers: `['humiliating', 'disheartening', 'heart-breaking', 'brutal, crushing', 'devastating']` - type: `<class 'list'>`
----> baseline_answer: `first-round` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['positive', 'real', 'real', 'real, significant', 'positive']`
----> answers: `['real', 'real, significant', 'positive']` - type: `<class 'list'>`
----> baseline_answer: `meaningful` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['celebratory', 'last', 'new', 'big, final', 'last']`
----> answers: `['big, final', 'last', 'celebratory', 'new']` - type: `<class 'list'>`
----> baseline_answer: `final` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['city', 'Islamic', 'governmental', 'rogue', 'police']`
----> answers: `['governmental', 'rogue', 'police', 'city', 'Islamic']` - type: `<class 'list'>`
----> baseline_answer: `Your Answer Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2333333333333333
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0]}
instance_id: 5959 <-> row_number: 56
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['new, renowned', 'large', 'full, cooncert', 'classical', 'chamber, large'], 'Sent1FreeTextInput': ['nearby', 'nearby', 'nearby, local', 'nearby', 'local'], 'Sent2FreeTextInput': ['pending', 'recent', 'example, previous', 'open', 'criminal, pending'], 'Sent3FreeTextInput': ['mining, nuclear, scientific', 'nuclear', 'nuclear', 'nuclear', 'nuclear'], 'Sent4FreeTextInput': ['brief', 'heated', 'heated, friendly', 'thought, he, heated', 'cordial'], 'Sent5FreeTextInput': ['crude', 'foreign', 'crude', 'crude', 'foreign'], 'Sent6FreeTextInput': ['same', 'same', 'same', 'same', 'same'], 'Sent7FreeTextInput': ['Upcoming, Adult', 'Last', 'adult', 'TV', 'mature'], 'Sent8FreeTextInput': ['past', 'current', 'following, current', 'stated', 'last'], 'Sent9FreeTextInput': ['this', 'last', 'this, last', 'this', 'last, this']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'Your Answer Here')
Add text `Your Answer Here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'your text here')
Add text `your text here` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'brief')
Add text `brief` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'Public')
Add text `Public` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Your Answer Here']
 visible_values : ['Your Answer Here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your text here']
 visible_values : ['your text here']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['brief']
 visible_values : ['brief']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Public']
 visible_values : ['Public']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new, renowned', 'large', 'full, cooncert', 'classical', 'chamber, large']`
----> answers: `['full, cooncert', 'new, renowned', 'classical', 'large', 'chamber, large']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['nearby', 'nearby', 'nearby, local', 'nearby', 'local']`
----> answers: `['nearby', 'local', 'nearby, local']` - type: `<class 'list'>`
----> baseline_answer: `Your Answer Here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['pending', 'recent', 'example, previous', 'open', 'criminal, pending']`
----> answers: `['criminal, pending', 'example, previous', 'pending', 'recent', 'open']` - type: `<class 'list'>`
----> baseline_answer: `your text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mining, nuclear, scientific', 'nuclear', 'nuclear', 'nuclear', 'nuclear']`
----> answers: `['mining, nuclear, scientific', 'nuclear']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['brief', 'heated', 'heated, friendly', 'thought, he, heated', 'cordial']`
----> answers: `['heated', 'cordial', 'brief', 'heated, friendly', 'thought, he, heated']` - type: `<class 'list'>`
----> baseline_answer: `brief` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['crude', 'foreign', 'crude', 'crude', 'foreign']`
----> answers: `['crude', 'foreign']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['same', 'same', 'same', 'same', 'same']`
----> answers: `['same']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Upcoming, Adult', 'Last', 'adult', 'TV', 'mature']`
----> answers: `['mature', 'adult', 'Last', 'TV', 'Upcoming, Adult']` - type: `<class 'list'>`
----> baseline_answer: `Public` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['past', 'current', 'following, current', 'stated', 'last']`
----> answers: `['last', 'following, current', 'current', 'past', 'stated']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['this', 'last', 'this, last', 'this', 'last, this']`
----> answers: `['this', 'last, this', 'last', 'this, last']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 5966 <-> row_number: 63
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 63 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['one', 'record', 'unearned', 'first', 'earned'], 'Sent1FreeTextInput': ['recent', 'fatal', 'violent', 'fatal', 'brutal'], 'Sent2FreeTextInput': ['stock', 'stock, bull, bear', 'old', 'stock', 'stock'], 'Sent3FreeTextInput': ['slow', 'slow', 'slow', 'slow', 'slow'], 'Sent4FreeTextInput': ['first', 'low, curve', 'first', 'triple, double, quadruple', 'triple'], 'Sent5FreeTextInput': ['road', 'first', 'first', 'final, first', 'first'], 'Sent6FreeTextInput': ['regional', 'lead, head, superior', 'standard', 'High, Supreme', 'federal'], 'Sent7FreeTextInput': ['no', 'war, relief', 'massive', 'no', 'military'], 'Sent8FreeTextInput': ['Maxim', 'senior, head, lead', 'main', 'new', 'senior'], 'Sent9FreeTextInput': ['first', 'first', 'first', 'bag, old, young, business, volunteer', 'first']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'only')
Add text `only` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'alleged')
Add text `alleged` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'stock')
Add text `stock` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'slow')
Add text `slow` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'quadruple')
Add text `quadruple` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'regional')
Add text `regional` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'military')
Add text `military` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'managing')
Add text `managing` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'spokesperson')
Add text `spokesperson` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['only']
 visible_values : ['only']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['alleged']
 visible_values : ['alleged']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['stock']
 visible_values : ['stock']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['slow']
 visible_values : ['slow']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['quadruple']
 visible_values : ['quadruple']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['regional']
 visible_values : ['regional']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['military']
 visible_values : ['military']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['managing']
 visible_values : ['managing']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['spokesperson']
 visible_values : ['spokesperson']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['one', 'record', 'unearned', 'first', 'earned']`
----> answers: `['one', 'first', 'earned', 'record', 'unearned']` - type: `<class 'list'>`
----> baseline_answer: `only` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['recent', 'fatal', 'violent', 'fatal', 'brutal']`
----> answers: `['violent', 'fatal', 'recent', 'brutal']` - type: `<class 'list'>`
----> baseline_answer: `alleged` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['stock', 'stock, bull, bear', 'old', 'stock', 'stock']`
----> answers: `['stock', 'stock, bull, bear', 'old']` - type: `<class 'list'>`
----> baseline_answer: `stock` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['slow', 'slow', 'slow', 'slow', 'slow']`
----> answers: `['slow']` - type: `<class 'list'>`
----> baseline_answer: `slow` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'low, curve', 'first', 'triple, double, quadruple', 'triple']`
----> answers: `['triple', 'low, curve', 'first', 'triple, double, quadruple']` - type: `<class 'list'>`
----> baseline_answer: `quadruple` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['road', 'first', 'first', 'final, first', 'first']`
----> answers: `['road', 'first', 'final, first']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['regional', 'lead, head, superior', 'standard', 'High, Supreme', 'federal']`
----> answers: `['lead, head, superior', 'regional', 'standard', 'High, Supreme', 'federal']` - type: `<class 'list'>`
----> baseline_answer: `regional` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['no', 'war, relief', 'massive', 'no', 'military']`
----> answers: `['military', 'massive', 'war, relief', 'no']` - type: `<class 'list'>`
----> baseline_answer: `military` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Maxim', 'senior, head, lead', 'main', 'new', 'senior']`
----> answers: `['new', 'senior, head, lead', 'main', 'Maxim', 'senior']` - type: `<class 'list'>`
----> baseline_answer: `managing` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'first', 'first', 'bag, old, young, business, volunteer', 'first']`
----> answers: `['bag, old, young, business, volunteer', 'first']` - type: `<class 'list'>`
----> baseline_answer: `spokesperson` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.45
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 5955 <-> row_number: 52
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['extra', 'old', 'extra', 'uncomfortable', 'large'], 'Sent1FreeTextInput': ['amazing', 'unbelievable', 'complete', 'striking', 'stunning'], 'Sent2FreeTextInput': ['last', 'last', 'last', 'last', 'last'], 'Sent3FreeTextInput': ['share', 'high', 'total', 'net', 'estimated'], 'Sent4FreeTextInput': ['new', 'care', 'insurance', 'insurance', 'cable'], 'Sent5FreeTextInput': ['empty', 'unguarded', 'open', 'abandoned', 'empty'], 'Sent6FreeTextInput': ['hostile', 'tense', 'disapproving', 'positive', 'hostile'], 'Sent7FreeTextInput': ['large', 'increasing', 'rebel', 'steady', 'hostile'], 'Sent8FreeTextInput': ['prime', 'national', 'prime', 'prime', 'prime'], 'Sent9FreeTextInput': ['major', 'other', 'amazing', 'outstanding', 'good']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'additional')
Add text `additional` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'total')
Add text `total` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'benefits')
Add text `benefits` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'empty')
Add text `empty` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'rebel')
Add text `rebel` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['additional']
 visible_values : ['additional']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['total']
 visible_values : ['total']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['benefits']
 visible_values : ['benefits']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['empty']
 visible_values : ['empty']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['rebel']
 visible_values : ['rebel']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['extra', 'old', 'extra', 'uncomfortable', 'large']`
----> answers: `['uncomfortable', 'extra', 'old', 'large']` - type: `<class 'list'>`
----> baseline_answer: `additional` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['amazing', 'unbelievable', 'complete', 'striking', 'stunning']`
----> answers: `['unbelievable', 'complete', 'amazing', 'striking', 'stunning']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'last', 'last', 'last', 'last']`
----> answers: `['last']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['share', 'high', 'total', 'net', 'estimated']`
----> answers: `['net', 'share', 'high', 'estimated', 'total']` - type: `<class 'list'>`
----> baseline_answer: `total` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new', 'care', 'insurance', 'insurance', 'cable']`
----> answers: `['insurance', 'cable', 'care', 'new']` - type: `<class 'list'>`
----> baseline_answer: `benefits` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['empty', 'unguarded', 'open', 'abandoned', 'empty']`
----> answers: `['empty', 'abandoned', 'unguarded', 'open']` - type: `<class 'list'>`
----> baseline_answer: `empty` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['hostile', 'tense', 'disapproving', 'positive', 'hostile']`
----> answers: `['tense', 'hostile', 'positive', 'disapproving']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['large', 'increasing', 'rebel', 'steady', 'hostile']`
----> answers: `['hostile', 'steady', 'rebel', 'large', 'increasing']` - type: `<class 'list'>`
----> baseline_answer: `rebel` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['prime', 'national', 'prime', 'prime', 'prime']`
----> answers: `['prime', 'national']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['major', 'other', 'amazing', 'outstanding', 'good']`
----> answers: `['outstanding', 'amazing', 'major', 'good', 'other']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 5921 <-> row_number: 18
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['recognized', 'effective', 'acting', 'involved', 'organized'], 'Sent1FreeTextInput': ['largest', 'only, central, disputed', 'largest', 'smallest', 'main'], 'Sent2FreeTextInput': ['Iraqi', 'national', 'Iraqi', 'communist', 'Hussein'], 'Sent3FreeTextInput': ['political', 'ongoing', 'unpopular', 'environmental', 'illegal'], 'Sent4FreeTextInput': ['long', 'long', 'long', 'long', 'long'], 'Sent5FreeTextInput': ['big', 'big', 'good', 'world', 'welcome'], 'Sent6FreeTextInput': ['wide', 'large, enormous', 'wide', 'wide', 'wide'], 'Sent7FreeTextInput': ['open', 'open', 'open', 'open', 'open'], 'Sent8FreeTextInput': ['top', 'national, peace', 'political', 'diplomatic', 'key'], 'Sent9FreeTextInput': ['agricultural', 'irrigation, agricultural', 'military', 'manufacturing', 'conservation']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'effective')
Add text `effective` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'largest')
Add text `largest` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'Iraqi')
Add text `Iraqi` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'unacceptable')
Add text `unacceptable` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'your desired text here')
Add text `your desired text here` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'wide')
Add text `wide` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'open')
Add text `open` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'special')
Add text `special` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['effective']
 visible_values : ['effective']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['largest']
 visible_values : ['largest']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Iraqi']
 visible_values : ['Iraqi']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['unacceptable']
 visible_values : ['unacceptable']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your desired text here']
 visible_values : ['your desired text here']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['wide']
 visible_values : ['wide']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['open']
 visible_values : ['open']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['special']
 visible_values : ['special']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['recognized', 'effective', 'acting', 'involved', 'organized']`
----> answers: `['effective', 'acting', 'organized', 'involved', 'recognized']` - type: `<class 'list'>`
----> baseline_answer: `effective` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['largest', 'only, central, disputed', 'largest', 'smallest', 'main']`
----> answers: `['main', 'smallest', 'largest', 'only, central, disputed']` - type: `<class 'list'>`
----> baseline_answer: `largest` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Iraqi', 'national', 'Iraqi', 'communist', 'Hussein']`
----> answers: `['communist', 'Hussein', 'national', 'Iraqi']` - type: `<class 'list'>`
----> baseline_answer: `Iraqi` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['political', 'ongoing', 'unpopular', 'environmental', 'illegal']`
----> answers: `['political', 'unpopular', 'ongoing', 'environmental', 'illegal']` - type: `<class 'list'>`
----> baseline_answer: `unacceptable` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['long', 'long', 'long', 'long', 'long']`
----> answers: `['long']` - type: `<class 'list'>`
----> baseline_answer: `your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['big', 'big', 'good', 'world', 'welcome']`
----> answers: `['world', 'welcome', 'big', 'good']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['wide', 'large, enormous', 'wide', 'wide', 'wide']`
----> answers: `['wide', 'large, enormous']` - type: `<class 'list'>`
----> baseline_answer: `wide` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['open', 'open', 'open', 'open', 'open']`
----> answers: `['open']` - type: `<class 'list'>`
----> baseline_answer: `open` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['top', 'national, peace', 'political', 'diplomatic', 'key']`
----> answers: `['political', 'national, peace', 'key', 'top', 'diplomatic']` - type: `<class 'list'>`
----> baseline_answer: `special` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['agricultural', 'irrigation, agricultural', 'military', 'manufacturing', 'conservation']`
----> answers: `['manufacturing', 'conservation', 'agricultural', 'irrigation, agricultural', 'military']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 5991 <-> row_number: 88
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['bad', 'tough', 'normal', 'slow, rapid', 'troubling'], 'Sent1FreeTextInput': ['poor', 'young', 'gay', 'young, troubled', 'city'], 'Sent2FreeTextInput': ['the', 'overhead', 'foreign', 'Chinese', 'unsecured'], 'Sent3FreeTextInput': ['large', 'uncertain', 'political', 'political', 'financial'], 'Sent4FreeTextInput': ['first', 'fifth', 'fifth', 'fifth', 'first'], 'Sent5FreeTextInput': ['final', 'necessary', 'final', 'new', 'popular'], 'Sent6FreeTextInput': ['instable', 'financial', 'share', 'financial', 'general'], 'Sent7FreeTextInput': ['new', 'new', 'new', 'fresh', 'strong'], 'Sent8FreeTextInput': ['next', 'last', 'the', 'last', 'last'], 'Sent9FreeTextInput': ['religious', 'Muslim', 'Muslim', 'Islamic', 'Muslim']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'smooth')
Add text `smooth` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'registered')
Add text `registered` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'political')
Add text `political` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'appropriate answer text')
Add text `appropriate answer text` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'main')
Add text `main` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'new')
Add text `new` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'Islamic')
Add text `Islamic` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['smooth']
 visible_values : ['smooth']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['registered']
 visible_values : ['registered']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['political']
 visible_values : ['political']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['appropriate answer text']
 visible_values : ['appropriate answer text']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['main']
 visible_values : ['main']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['new']
 visible_values : ['new']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Islamic']
 visible_values : ['Islamic']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['bad', 'tough', 'normal', 'slow, rapid', 'troubling']`
----> answers: `['tough', 'bad', 'slow, rapid', 'normal', 'troubling']` - type: `<class 'list'>`
----> baseline_answer: `smooth` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['poor', 'young', 'gay', 'young, troubled', 'city']`
----> answers: `['young, troubled', 'poor', 'city', 'young', 'gay']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['the', 'overhead', 'foreign', 'Chinese', 'unsecured']`
----> answers: `['Chinese', 'the', 'overhead', 'foreign', 'unsecured']` - type: `<class 'list'>`
----> baseline_answer: `registered` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['large', 'uncertain', 'political', 'political', 'financial']`
----> answers: `['financial', 'political', 'uncertain', 'large']` - type: `<class 'list'>`
----> baseline_answer: `political` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'fifth', 'fifth', 'fifth', 'first']`
----> answers: `['fifth', 'first']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'necessary', 'final', 'new', 'popular']`
----> answers: `['popular', 'final', 'necessary', 'new']` - type: `<class 'list'>`
----> baseline_answer: `appropriate answer text` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['instable', 'financial', 'share', 'financial', 'general']`
----> answers: `['financial', 'instable', 'share', 'general']` - type: `<class 'list'>`
----> baseline_answer: `main` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new', 'new', 'new', 'fresh', 'strong']`
----> answers: `['strong', 'fresh', 'new']` - type: `<class 'list'>`
----> baseline_answer: `new` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['next', 'last', 'the', 'last', 'last']`
----> answers: `['last', 'next', 'the']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['religious', 'Muslim', 'Muslim', 'Islamic', 'Muslim']`
----> answers: `['Muslim', 'religious', 'Islamic']` - type: `<class 'list'>`
----> baseline_answer: `Islamic` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 5975 <-> row_number: 72
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['other', 'upper', 'other', 'other', 'other'], 'Sent1FreeTextInput': ['research', 'ruling', 'senior', 'young', 'Republican'], 'Sent2FreeTextInput': ['aid', 'financial', 'aid', 'new', 'Defense'], 'Sent3FreeTextInput': ['grim', 'grateful', 'grim', 'great', 'mostly'], 'Sent4FreeTextInput': ['severe', 'difficult', 'pressing', 'important', 'Important'], 'Sent5FreeTextInput': ['current', 'extremist', 'labor', 'main', 'Labor'], 'Sent6FreeTextInput': ['public', 'peace', 'public', 'main', 'Public'], 'Sent7FreeTextInput': ['qualifying', 'wrestling', 'wrestling', 'final', '2014'], 'Sent8FreeTextInput': ['email', 'online', 'email', 'primary', 'Public'], 'Sent9FreeTextInput': ['last', 'last', 'last', 'last', 'This']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'other')
Add text `other` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
input Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
input Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
input Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
input Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'your_answer_here')
Add text `your_answer_here` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
input Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'email')
Add text `email` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
input Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'your answer here')
Add text `your answer here` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['other']
 visible_values : ['other']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_text_here']
 visible_values : ['your_text_here']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your_answer_here']
 visible_values : ['your_answer_here']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['email']
 visible_values : ['email']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['your answer here']
 visible_values : ['your answer here']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['other', 'upper', 'other', 'other', 'other']`
----> answers: `['other', 'upper']` - type: `<class 'list'>`
----> baseline_answer: `other` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['research', 'ruling', 'senior', 'young', 'Republican']`
----> answers: `['research', 'young', 'ruling', 'Republican', 'senior']` - type: `<class 'list'>`
----> baseline_answer: `your_text_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['aid', 'financial', 'aid', 'new', 'Defense']`
----> answers: `['financial', 'aid', 'Defense', 'new']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['grim', 'grateful', 'grim', 'great', 'mostly']`
----> answers: `['mostly', 'grateful', 'great', 'grim']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['severe', 'difficult', 'pressing', 'important', 'Important']`
----> answers: `['Important', 'important', 'difficult', 'severe', 'pressing']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['current', 'extremist', 'labor', 'main', 'Labor']`
----> answers: `['labor', 'extremist', 'main', 'current', 'Labor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['public', 'peace', 'public', 'main', 'Public']`
----> answers: `['main', 'peace', 'public', 'Public']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['qualifying', 'wrestling', 'wrestling', 'final', '2014']`
----> answers: `['qualifying', 'final', '2014', 'wrestling']` - type: `<class 'list'>`
----> baseline_answer: `your_answer_here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['email', 'online', 'email', 'primary', 'Public']`
----> answers: `['online', 'email', 'primary', 'Public']` - type: `<class 'list'>`
----> baseline_answer: `email` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'last', 'last', 'last', 'This']`
----> answers: `['This', 'last']` - type: `<class 'list'>`
----> baseline_answer: `your answer here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.5, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5913 <-> row_number: 10
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['mass', 'mass', 'mass', 'mass', 'mass'], 'Sent1FreeTextInput': ['increased', 'increased', 'huge', 'high', 'increasing'], 'Sent2FreeTextInput': ['rate', 'price', 'usual', 'price', 'temporary'], 'Sent3FreeTextInput': ['popular', 'popular', 'popular', 'popular', 'popular'], 'Sent4FreeTextInput': ['long, difficult', 'long', 'long', 'long', 'difficult'], 'Sent5FreeTextInput': ['first', 'final', 'primary', 'first', 'final'], 'Sent6FreeTextInput': ['rising, high', 'high', 'large', 'high', 'rising'], 'Sent7FreeTextInput': ['military, victory', 'veterans', 'local', 'holiday', 'military'], 'Sent8FreeTextInput': ["own, company's", 'retirement', 'speculative', 'own', 'personal'], 'Sent9FreeTextInput': ['east', 'east', 'front', 'east', 'east']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
input Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'mass')
Add text `mass` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
input Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'your_text_here')
Add text `your_text_here` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
input Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
input Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'popular')
Add text `popular` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
