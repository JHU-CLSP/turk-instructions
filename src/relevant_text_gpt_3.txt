Solver: gpt4-text
 = = = = = = = = = = = = starting new task: `ROT Details [m=50] rocstories - 0 - 99` = = = = = = = = = = = = 
First instance id: 32971
instance_id: 32980 <-> row_number: 9
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4], 'rot-categorization': ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'social-norms|description', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms'], 'rot-moral-foundations': ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition'], 'rot-judgment': ["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0], 'fwd-agree': [2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'You can strive to excel and surpass others in competition.')
Add text `You can strive to excel and surpass others in competition.` to this text input: <input type="text" class="text" name="rot-rewrite" value="You don't have to let other people beat you in a competition." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['You can strive to excel and surpass others in competition.']
 visible_values : ['You can strive to excel and surpass others in competition.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition']`
----> answers: `['having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition']` - type: `<class 'list'>`
----> baseline_answer: `You can strive to excel and surpass others in competition.` - type: `<class 'str'>`
 --> scores:  0.4000000000000001
----> per-field score: 0.4000000000000001
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"]`
----> answers: `["isn't required", "You don't have to", "it's isn't required", 'okay', "You shouldn't", "don't have to", "it's not expected", 'expected', "Don't have to", "don't", "you don't have to"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.18461538461538465
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0], 'text': [0.4000000000000001, 0.0]}
instance_id: 32971 <-> row_number: 0
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3], 'rot-categorization': ['social-norms|advice', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'social-norms|description', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms|advice', 'advice', 'morality-ethics|description', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'social-norms', 'social-norms|description', 'description', 'morality-ethics|social-norms', 'social-norms|description', 'description', 'advice|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'social-norms|description', 'description', 'description', 'social-norms|description', 'social-norms', 'advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.'], 'rot-judgment': ['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should'], 'agency-fwd': ['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0], 'fwd-agree': [4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: It seems like the HTML input for modification and its value were not completely provided. Without the specific value to select for the radio input "char-involved-general", I can't generate an accurate command.

If you provide the full details or specify which character (e.g., narrator) to select, I can generate the correct command for you.
Failed to execute an action It seems like the HTML input for modification and its value were not completely provided. Without the specific value to select for the radio input "char-involved-general", I can't generate an accurate command.

If you provide the full details or specify which character (e.g., narrator) to select, I can generate the correct command for you., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'Expect to go to jail if you break the law.')
Add text `Expect to go to jail if you break the law.` to this text input: <input type="text" class="text" name="rot-rewrite" value="Expect to go to jail if you break the law." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


If you intended a different value for "action-fwd-good" that wasn't provided in your message, please replace '-2' with the correct value in the command above.
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


If you intended a different value for "action-fwd-good" that wasn't provided in your message, please replace '-2' with the correct value in the command above., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Expect to go to jail if you break the law.']
 visible_values : ['Expect to go to jail if you break the law.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.']`
----> answers: `['going to jail when you break the law', 'Going to jail if you break the law', 'going to jail if you break the law', 'going to jail when breaking the law.', 'Going to jail when you break the law', 'expecting to go to jail when you break the law', 'breaking the law.', 'if you are breaking the law.', 'Expecting to go to jail when you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'breaking the law', 'going to jail if breaking the law.']` - type: `<class 'list'>`
----> baseline_answer: `Expect to go to jail if you break the law.` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should']`
----> answers: `['expect to', "it's expected", 'is expected', 'Expect to', 'It is expected', 'should', 'Its expected', 'expecting', 'Expected', 'You should', 'expect to go to jail', "It's expected", 'Expect to go to jail', 'expected', 'you should', 'Expect', 'expect']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.23076923076923078
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0]}
instance_id: 32978 <-> row_number: 7
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3], 'rot-categorization': ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'morality-ethics', 'description', 'social-norms|description', 'advice', 'description', 'description', 'social-norms|advice', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['loyalty-betrayal|authority-subversion', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|loyalty-betrayal|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'authority-subversion', 'fairness-cheating|authority-subversion', 'care-harm|authority-subversion', '', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating|authority-subversion', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'loyalty-betrayal|authority-subversion', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', 'authority-subversion', 'fairness-cheating|loyalty-betrayal|authority-subversion', '', 'care-harm|authority-subversion', '', 'loyalty-betrayal|authority-subversion', 'loyalty-betrayal|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.'], 'rot-judgment': ["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.')
Add text `It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's hurtful for  a parent to enroll a child in classes without permission." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text value')
Add text `Your desired text value` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.']
 visible_values : ['It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text value']
 visible_values : ['Your desired text value']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.']`
----> answers: `['a parent  enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'Enrolling children in classes without permission.', 'parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'enrolling your child in classes without permission.', 'enrolling your child in classes without permission', 'being a parent and enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission']` - type: `<class 'list'>`
----> baseline_answer: `It is inconsiderate for a parent to enroll a child in classes without obtaining permission first.` - type: `<class 'str'>`
 --> scores:  0.72
----> per-field score: 0.72
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"]`
----> answers: `["It's hurtful", "it's hurtful", "It's hurtful.", "It's wrong", 'hurtful']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.28615384615384615
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0]}
instance_id: 32976 <-> row_number: 5
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3], 'rot-categorization': ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|authority-subversion', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'care-harm|authority-subversion', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|authority-subversion', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'loyalty-betrayal|authority-subversion', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation'], 'char-involved-general': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'rot-rewrite': ['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.'], 'rot-judgment': ["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal'], 'fwd-pressure': [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0], 'char-involved-fwd': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'fwd-hypothetical': ['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', ''], 'n-characters': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is not suitable for a parent to assist a teenage boy in showering.')
Add text `It is not suitable for a parent to assist a teenage boy in showering.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's inappropriate for a parent to help a teenage boy shower." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is not suitable for a parent to assist a teenage boy in showering.']
 visible_values : ['It is not suitable for a parent to assist a teenage boy in showering.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.']`
----> answers: `['helping your teenage boy shower.', 'helping your teenage son shower.', 'for a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'being a parent and helping a teenage boy shower.', 'a parent  helping a teenage boy shower.', "helping one's teenage boy shower.", 'a parent to helping a teenage boy shower.', 'helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping teenage boys shower', "helping a teenage boy shower when you're a parent.", 'Parents helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower as a parent', 'helping your teenage son take a shower', 'A parent helping a teenage boy shower.']` - type: `<class 'list'>`
----> baseline_answer: `It is not suitable for a parent to assist a teenage boy in showering.` - type: `<class 'str'>`
 --> scores:  0.6363636363636364
----> per-field score: 0.6363636363636364
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"]`
----> answers: `["it's inappropriate", "It's inappropriate for", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate.", 'inappropriate']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', '']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.5104895104895105
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0]}
instance_id: 32979 <-> row_number: 8
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2], 'rot-categorization': ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|description', 'social-norms|description', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'description', 'morality-ethics|advice', 'social-norms', 'social-norms'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol'], 'rot-judgment': ["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'fwd-agree': [2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')


This is assuming you wanted to select the 'narrator' as the involved character based on the provided option. If you intended to choose another character (which seems to have been included in the cut-off part), you would replace `'char-0'` with the appropriate value corresponding to that character (`'char-1'`, '`char-2'`, etc., as per your specific needs).
Failed to execute an action self.actions.modify_radio('char-involved-general', 'char-0')


This is assuming you wanted to select the 'narrator' as the involved character based on the provided option. If you intended to choose another character (which seems to have been included in the cut-off part), you would replace `'char-0'` with the appropriate value corresponding to that character (`'char-1'`, '`char-2'`, etc., as per your specific needs)., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', "It's okay to carry your pet in public as a status symbol")
Add text `It's okay to carry your pet in public as a status symbol` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's okay to carry your pet in public as a status symbol" id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's okay to carry your pet in public as a status symbol"]
 visible_values : ["It's okay to carry your pet in public as a status symbol"]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol']`
----> answers: `['carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public']` - type: `<class 'list'>`
----> baseline_answer: `It's okay to carry your pet in public as a status symbol` - type: `<class 'str'>`
 --> scores:  0.8181818181818181
----> per-field score: 0.8181818181818181
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"]`
----> answers: `["It's okay", 'Its okay', 'okay', "it's okay", 'ok', "it's ok"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.2167832167832168
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0]}
instance_id: 32975 <-> row_number: 4
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'morality-ethics|advice', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'morality-ethics|advice', 'social-norms|advice', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms'], 'rot-moral-foundations': ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'loyalty-betrayal|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|authority-subversion', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you'], 'rot-judgment': ["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s disrespectful to feel embarrassment towards individuals who care for you.')
Add text `It's disrespectful to feel embarrassment towards individuals who care for you.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's rude to be ashamed of people that love you." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


This command selects the radio button for "Very bad" with a value of "-2" for the input named "action-fwd-good".
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


This command selects the radio button for "Very bad" with a value of "-2" for the input named "action-fwd-good"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's disrespectful to feel embarrassment towards individuals who care for you."]
 visible_values : ["It's disrespectful to feel embarrassment towards individuals who care for you."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you']`
----> answers: `['being ashamed of people that love you', 'being ashamed of people that love you.']` - type: `<class 'list'>`
----> baseline_answer: `It's disrespectful to feel embarrassment towards individuals who care for you.` - type: `<class 'str'>`
 --> scores:  0.10526315789473685
----> per-field score: 0.10526315789473685
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"]`
----> answers: `['rude', "It's rude to", 'it is rude', "It's wrong", "It's rude", "it's rude"]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.23886639676113358
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0]}
instance_id: 32977 <-> row_number: 6
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'rot-categorization': ['social-norms|description', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'description', 'advice', 'description', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'description', 'advice', 'advice', 'morality-ethics|advice', 'morality-ethics|advice', 'advice', 'morality-ethics'], 'rot-moral-foundations': ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money'], 'rot-judgment': ["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0], 'fwd-agree': [2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is beneficial to engage in games of chance that offer monetary rewards.')
Add text `It is beneficial to engage in games of chance that offer monetary rewards.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to play games of chance where you can win money." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your new judgment text here')
Add text `Your new judgment text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')


If your intention was different, please provide more context or specify the desired modification for a more accurate response.
Failed to execute an action self.actions.modify_radio('action-fwd-good', '-2')


If your intention was different, please provide more context or specify the desired modification for a more accurate response., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is beneficial to engage in games of chance that offer monetary rewards.']
 visible_values : ['It is beneficial to engage in games of chance that offer monetary rewards.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your new judgment text here']
 visible_values : ['Your new judgment text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money']`
----> answers: `['playing games of chance where you can win money.', 'playing games of chance where you can win money']` - type: `<class 'list'>`
----> baseline_answer: `It is beneficial to engage in games of chance that offer monetary rewards.` - type: `<class 'str'>`
 --> scores:  0.27272727272727276
----> per-field score: 0.27272727272727276
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"]`
----> answers: `["it's good", "It's good", 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your new judgment text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.3286713286713287
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0]}
instance_id: 32973 <-> row_number: 2
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|description', 'morality-ethics|social-norms', 'morality-ethics|advice', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'advice', '', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics'], 'rot-moral-foundations': ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous'], 'rot-judgment': ["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s wrong to be gluttonous.')
Add text `It's wrong to be gluttonous.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's wrong to be gluttonous." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's wrong to be gluttonous."]
 visible_values : ["It's wrong to be gluttonous."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous']`
----> answers: `['Being gluttonous.', 'being gluttonous', 'being gluttonous.']` - type: `<class 'list'>`
----> baseline_answer: `It's wrong to be gluttonous.` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"]`
----> answers: `["It's wrong to", "it's wrong", "It's wrong", 'wrong', "It's wrong."]` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.34615384615384615
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0]}
instance_id: 32972 <-> row_number: 1
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2], 'rot-categorization': ['advice', 'morality-ethics|description', 'description', 'advice', 'advice', 'advice', 'advice|description', 'social-norms|advice', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'social-norms|advice', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'social-norms', 'advice', 'description', 'advice', 'social-norms|description', 'advice', 'advice', 'description', 'description', 'advice', 'morality-ethics|advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.'], 'rot-judgment': ["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical'], 'n-characters': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')

We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It\'s beneficial to surround yourself with individuals who can contribute to your personal development.')
Add text `It's beneficial to surround yourself with individuals who can contribute to your personal development.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to have people you can use to improve yourself." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's beneficial to surround yourself with individuals who can contribute to your personal development."]
 visible_values : ["It's beneficial to surround yourself with individuals who can contribute to your personal development."]
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.']`
----> answers: `['having people you can use to improve yourself.', 'Improving yourself by having people.', 'using people to improve yourself', 'having people you can use to improve yourself']` - type: `<class 'list'>`
----> baseline_answer: `It's beneficial to surround yourself with individuals who can contribute to your personal development.` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"]`
----> answers: `["it's good", "It's good", "It's good.", 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.24615384615384617
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0, 0.2, 0.0]}
instance_id: 32974 <-> row_number: 3
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4], 'rot-categorization': ['morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'social-norms|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'morality-ethics|advice', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'care-harm|authority-subversion', '', 'care-harm', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm'], 'char-involved-general': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'rot-rewrite': ['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild'], 'rot-judgment': ["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 'char-involved-fwd': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'fwd-hypothetical': ['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
input Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('rot-agree', '0')
We are going to select this radio button: <input type="radio" name="rot-agree" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
input Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
input Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
input Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')


Could you please specify the value you wish to select or provide more details?

Failed to execute an action self.actions.modify_radio('char-involved-general', 'char-0')


Could you please specify the value you wish to select or provide more details?
, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
input Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-rewrite', 'It is beneficial to refrain from disturbing wildlife.')
Add text `It is beneficial to refrain from disturbing wildlife.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to avoid disturbing animals in the wild." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
input Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_text('rot-judgment', 'Your desired text here')
Add text `Your desired text here` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
input Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
input Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
input Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-agree', '0')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
input Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-legal', 'illegal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="illegal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
input Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
input Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
input Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is beneficial to refrain from disturbing wildlife.']
 visible_values : ['It is beneficial to refrain from disturbing wildlife.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Your desired text here']
 visible_values : ['Your desired text here']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['illegal']
 visible_values : ['illegal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild']`
----> answers: `['avoiding disturbing animals in the wild.', 'disturbing animals in the wild', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild']` - type: `<class 'list'>`
----> baseline_answer: `It is beneficial to refrain from disturbing wildlife.` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"]`
----> answers: `["it's good", "It's good", 'you should avoid it', 'good']` - type: `<class 'list'>`
----> baseline_answer: `Your desired text here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `illegal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.3195266272189349
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.4000000000000001, 0.0, 1.0, 0.0, 0.72, 0.0, 0.6363636363636364, 0.0, 0.8181818181818181, 0.0, 0.10526315789473685, 0.0, 0.27272727272727276, 0.0, 0.5, 0.0, 0.2, 0.0, 0.15384615384615385, 0.0]}
 = = = = = = = = = = = = starting new task: `Associate countries and languages with Ethnologue` = = = = = = = = = = = = 
First instance id: 29921
instance_id: 29935 <-> row_number: 14
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy'], 'primary_country': ['india', 'india', 'india'], 'region': ['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.'], 'countries': ['bangladesh|other', 'bangladesh|other', 'bangladesh|other|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided details, it seems you are looking to modify an input with the name "url," but the provided HTML snippet does not include an input element with the name "url." The snippet primarily describes a step in a task requiring research on the Ethnologue website, and includes a form element for CSRF (Cross-Site Request Forgery) protection but does not detail an input field directly related to the task described.

Could you please provide more information or clarify the task you're trying to accomplish? Without an input field named "url" in the provided HTML, it's challenging to generate a meaningful command based on the available commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).
Failed to execute an action Based on the provided details, it seems you are looking to modify an input with the name "url," but the provided HTML snippet does not include an input element with the name "url." The snippet primarily describes a step in a task requiring research on the Ethnologue website, and includes a form element for CSRF (Cross-Site Request Forgery) protection but does not detail an input field directly related to the task described.

Could you please provide more information or clarify the task you're trying to accomplish? Without an input field named "url" in the provided HTML, it's challenging to generate a meaningful command based on the available commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range)., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('primary_country', 'India')


If "primary_country" is a dropdown select, and the option value for "India" is inferred as "IN", the command might look like:
python
self.actions.modify_select('primary_country', 'IN')


Please provide more details or the specific input element code for "primary_country" for a more
Failed to execute an action self.actions.modify_text('primary_country', 'India')


If "primary_country" is a dropdown select, and the option value for "India" is inferred as "IN", the command might look like:
python
self.actions.modify_select('primary_country', 'IN')


Please provide more details or the specific input element code for "primary_country" for a more, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but there doesn't seem to be an HTML form input directly related to the name "region" or interactive elements such as checkboxes, radios, text inputs, or selects in the provided HTML snippet. The snippet includes a hyperlink and some explanatory text regarding a task but does not contain form elements that require modifying based on the name "region." Could you please provide more context or clarify the request?
Failed to execute an action I'm sorry, but there doesn't seem to be an HTML form input directly related to the name "region" or interactive elements such as checkboxes, radios, text inputs, or selects in the provided HTML snippet. The snippet includes a hyperlink and some explanatory text regarding a task but does not contain form elements that require modifying based on the name "region." Could you please provide more context or clarify the request?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy', 'http://www.ethnologue.com/show_language.asp?code=bpy']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=bpy']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.', 'Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.']`
----> answers: `['Assam, Cachar, Hailakandi, Karimganj districts; Tripura, North. Also in Bangladesh, Myanmar.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh|other', 'bangladesh|other', 'bangladesh|india|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh|other', 'bangladesh|other', 'bangladesh|india|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0], 'select': [0.0], 'textarea': [0.0], 'checkbox': [0.0]}
instance_id: 29961 <-> row_number: 40
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', nan, 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.'], 'countries': ['philippines', 'other', 'philippines|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was a mix-up in your request. You've provided details about looking up "central_bicolano" on the Ethnologue website but requested an action related to an HTML form input named "primary_country" without providing specific HTML code or values related to "primary_country" input. Could you please clarify or provide the specific details or actions you want to be taken regarding "primary_country"?
Failed to execute an action It appears there was a mix-up in your request. You've provided details about looking up "central_bicolano" on the Ethnologue website but requested an action related to an HTML form input named "primary_country" without providing specific HTML code or values related to "primary_country" input. Could you please clarify or provide the specific details or actions you want to be taken regarding "primary_country"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there was no specific request or command generation detail provided based on the HTML input named "region" that you shared. Could you please clarify what modification or action you'd like to perform with the 'region' input? This would help me generate the accurate command for you.
Failed to execute an action I'm sorry for any confusion, but it seems there was no specific request or command generation detail provided based on the HTML input named "region" that you shared. Could you please clarify what modification or action you'd like to perform with the 'region' input? This would help me generate the accurate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', '', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']`
----> answers: `['', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', 'Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'other', 'other|philippines']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['philippines', 'other', 'other|philippines']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.13636363636363638
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455], 'select': [0.0, 0.0], 'textarea': [0.0, 0.0], 'checkbox': [0.0, 0.0]}
instance_id: 29936 <-> row_number: 15
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell'], 'primary_country': ['greece', 'greece', 'greece'], 'region': ['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.'], 'countries': ['albania|bulgaria|tunisia|france|macedonia|turkey|canada|georgia|uae|germany|italy|uk|armenia|greece|ukraine|southafrica|unitedstates|australia|jordan|poland|kazakhstan|cyprus|czechrepublic|romania|sweden|hungary|egypt|russianfederation|other', 'albania|france|turkey|italy|ukraine|cyprus|romania|egypt', 'albania|bulgaria|tunisia|france|macedonia|turkey|canada|georgia|macedoniatheformeryugoslavrepublicof|uae|germany|italy|armenia|ukraine|southafrica|unitedstates|australia|jordan|poland|austria|kazakhstan|cyprus|czechrepublic|sweden|hungary|egypt|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet, it appears that you may want to manipulate or interact with elements related to a form submission process, especially targeting a "url" input. However, the HTML segment you've shared does not contain an input field named "url" explicitly. The instructions and content related to the form mainly involve steps to look up information on an external website. 

If your intention is to automate or generate a command related to navigating or fetching data from an external URL mentioned within the HTML content, this would usually require scripting beyond what simple form input modifications can achieve. For instance, in a Python script using libraries like requests or selenium for web scraping or automating browser navigation, one would programmatically navigate to the mentioned URL or parse the provided URL from the HTML content.

For completeness and based on what's visible here, if you're looking to interact with form elements or automate submission where such an "url" field exists, an appropriate command would be formatted according to the specific type of input you're dealing with (text, checkbox, radio, select, etc.) which isn't visible in the shared HTML. If you find an input named "url" that you wish to modify and you know its type, the command would follow one of the patterns you've described, such
Failed to execute an action Given the provided HTML snippet, it appears that you may want to manipulate or interact with elements related to a form submission process, especially targeting a "url" input. However, the HTML segment you've shared does not contain an input field named "url" explicitly. The instructions and content related to the form mainly involve steps to look up information on an external website. 

If your intention is to automate or generate a command related to navigating or fetching data from an external URL mentioned within the HTML content, this would usually require scripting beyond what simple form input modifications can achieve. For instance, in a Python script using libraries like requests or selenium for web scraping or automating browser navigation, one would programmatically navigate to the mentioned URL or parse the provided URL from the HTML content.

For completeness and based on what's visible here, if you're looking to interact with form elements or automate submission where such an "url" field exists, an appropriate command would be formatted according to the specific type of input you're dealing with (text, checkbox, radio, select, etc.) which isn't visible in the shared HTML. If you find an input named "url" that you wish to modify and you know its type, the command would follow one of the patterns you've described, such, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you have provided HTML content and an input name but not a specific task or question related to modifying the content. Could you please provide more details about what you would like to accomplish? For example, are you looking to generate a specific command for modifying an input within the provided HTML based on a given name? If so, it would be helpful to know the type of input (e.g., text, checkbox, select) and the value you want to set.
Failed to execute an action It appears you have provided HTML content and an input name but not a specific task or question related to modifying the content. Could you please provide more details about what you would like to accomplish? For example, are you looking to generate a specific command for modifying an input within the provided HTML based on a given name? If so, it would be helpful to know the type of input (e.g., text, checkbox, select) and the value you want to set., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: The provided HTML snippet and context do not contain an input with the name "region" or any select input field to demonstrate how to modify a region value. Please provide the relevant HTML code that includes the "region" input field (preferably a select tag or a similar input type that would require a value to be set for "region") so that I can generate the appropriate command for you.
Failed to execute an action The provided HTML snippet and context do not contain an input with the name "region" or any select input field to demonstrate how to modify a region value. Please provide the relevant HTML code that includes the "region" input field (preferably a select tag or a similar input type that would require a value to be set for "region") so that I can generate the appropriate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell', 'http://www.ethnologue.com/show_language.asp?code=ell']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['greece', 'greece', 'greece']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.', 'Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['Widespread, especially in Greek Macedonia. Also in Albania, Armenia, Australia, Austria, Bahamas, Bulgaria, Canada, Congo, Cyprus, Czech Republic, Democratic Republic of the Congo, Djibouti, Egypt, France, Georgia, Germany, Hungary, Italy, Jordan, Kazakhstan, Libya, Macedonia, Malawi, Mozambique, Paraguay, Poland, Romania, Russian Federation (Europe), Sierra Leone, South Africa, Sweden, Tunisia, Turkey (Europe), Ukraine, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|armenia|australia|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|greece|hungary|italy|jordan|kazakhstan|macedonia|other|poland|romania|russianfederation|southafrica|sweden|tunisia|turkey|uae|uk|ukraine|unitedstates', 'albania|cyprus|egypt|france|italy|romania|turkey|ukraine', 'albania|armenia|australia|austria|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|hungary|italy|jordan|kazakhstan|macedonia|macedoniatheformeryugoslavrepublicof|other|poland|russianfederation|southafrica|sweden|tunisia|turkey|uae|ukraine|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['albania|armenia|australia|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|greece|hungary|italy|jordan|kazakhstan|macedonia|other|poland|romania|russianfederation|southafrica|sweden|tunisia|turkey|uae|uk|ukraine|unitedstates', 'albania|cyprus|egypt|france|italy|romania|turkey|ukraine', 'albania|armenia|australia|austria|bulgaria|canada|cyprus|czechrepublic|egypt|france|georgia|germany|hungary|italy|jordan|kazakhstan|macedonia|macedoniatheformeryugoslavrepublicof|other|poland|russianfederation|southafrica|sweden|tunisia|turkey|uae|ukraine|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0], 'select': [0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0]}
instance_id: 29947 <-> row_number: 26
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe'], 'primary_country': ['sweden', 'sweden', 'sweden'], 'region': ['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.'], 'countries': ['finland|norway|canada|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|sweden|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet and your request to modify the input named "url", it appears there isn't an `<input>` element with the name "url" visible in the provided HTML. The snippet includes a form with a hidden CSRF token and a step description for looking up a language on the Ethnologue website, but no visible `<input>` tag named "url" is provided for modification.

If you meant to work with a different input element or if there's more context or details needed, please provide additional information or clarify the request.
Failed to execute an action Based on the provided HTML snippet and your request to modify the input named "url", it appears there isn't an `<input>` element with the name "url" visible in the provided HTML. The snippet includes a form with a hidden CSRF token and a step description for looking up a language on the Ethnologue website, but no visible `<input>` tag named "url" is provided for modification.

If you meant to work with a different input element or if there's more context or details needed, please provide additional information or clarify the request., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might have missed including the part of the HTML code that contains the input element named "primary_country". Could you provide the specific part of the HTML that includes the input element you're asking about? This will help me give you the correct command.
Failed to execute an action It seems like you might have missed including the part of the HTML code that contains the input element named "primary_country". Could you provide the specific part of the HTML that includes the input element you're asking about? This will help me give you the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet and the input name "region", there seems to be no direct input field named "region" visible within the snippet provided. Therefore, I'm unable to generate a specific command without more context or more information about the "region" input field (such as its type, value, or if it's a part of a select, radio, checkbox, text, or range input).

If the input field named "region" is available elsewhere on the page not shown in the provided HTML, please provide details about the input type and the value you wish to set, so I can generate the appropriate command for you.
Failed to execute an action Based on the given HTML snippet and the input name "region", there seems to be no direct input field named "region" visible within the snippet provided. Therefore, I'm unable to generate a specific command without more context or more information about the "region" input field (such as its type, value, or if it's a part of a select, radio, checkbox, text, or range input).

If the input field named "region" is available elsewhere on the page not shown in the provided HTML, please provide details about the input type and the value you wish to set, so I can generate the appropriate command for you., error: unmatched ')' (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=swe']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['sweden', 'sweden', 'sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']`
----> answers: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0]}
instance_id: 29924 <-> row_number: 3
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn'], 'primary_country': ['china', 'china'], 'region': ['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.'], 'countries': ['singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|brunei|indonesia|thailand', 'singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|other|brunei|indonesia|thailand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the information provided and your instructions, it seems there's no form of interactive input (like text input, checkbox, radio button, or select dropdown) named "url" to modify directly within the HTML snippet you have shared. The HTML provides instructions for a manual task rather than an interactive element that my prior responses could modify. 

Could you please clarify or provide additional HTML context if you're looking for a modification of a different form input?
Failed to execute an action Based on the information provided and your instructions, it seems there's no form of interactive input (like text input, checkbox, radio button, or select dropdown) named "url" to modify directly within the HTML snippet you have shared. The HTML provides instructions for a manual task rather than an interactive element that my prior responses could modify. 

Could you please clarify or provide additional HTML context if you're looking for a modification of a different form input?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_select('primary_country', 'China')


This scenario assumes a dropdown menu for selecting a country with the option "China". Without seeing the specific form element in the HTML, generating a precise command requires making assumptions about the nature of the input related to "primary_country". Please provide the relevant HTML portion or clarify the nature of the input for accurate assistance.
Failed to execute an action self.actions.modify_select('primary_country', 'China')


This scenario assumes a dropdown menu for selecting a country with the option "China". Without seeing the specific form element in the HTML, generating a precise command requires making assumptions about the nature of the input related to "primary_country". Please provide the relevant HTML portion or clarify the nature of the input for accurate assistance., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but it seems like there was a misunderstanding in your request. Based on the provided HTML snippet, there's no input with the name "region", and thus I'm unable to generate a specific command for modifying such input. The snippet only includes hidden tokens and instructions for looking up information on the Ethnologue website. Could you provide more details or clarify the input you'd like to modify?
Failed to execute an action I'm sorry, but it seems like there was a misunderstanding in your request. Based on the provided HTML snippet, there's no input with the name "region", and thus I'm unable to generate a specific command for modifying such input. The snippet only includes hidden tokens and instructions for looking up information on the Ethnologue website. Could you provide more details or clarify the input you'd like to modify?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=cmn']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china', 'china']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']`
----> answers: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29954 <-> row_number: 33
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin'], 'primary_country': ['india', 'india', 'india'], 'region': ['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.'], 'countries': ['singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|india|newzealand', 'singapore|canada|uae|germany|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|india|newzealand', 'singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|newzealand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'desired_value_here')

Please replace 'desired_value_here' with the actual URL or input value you wish to set, and ensure this input field exists in the full HTML of your form.
Failed to execute an action self.actions.modify_text('url', 'desired_value_here')

Please replace 'desired_value_here' with the actual URL or input value you wish to set, and ensure this input field exists in the full HTML of your form., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears that you've provided some HTML content and an input name but haven't given a clear instruction on what you need done with the provided HTML or the specific command you're expecting based on the input name "primary_country". Can you please clarify the action or modification you're intending to make?
Failed to execute an action It appears that you've provided some HTML content and an input name but haven't given a clear instruction on what you need done with the provided HTML or the specific command you're expecting based on the input name "primary_country". Can you please clarify the action or modification you're intending to make?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like there is no HTML input element named "region" provided in the snippet you shared. Therefore, I can't generate a command to modify an input named "region" without seeing the relevant HTML code that includes it. If you could provide the HTML code that includes the input field named "region", I'd be happy to help.
Failed to execute an action It seems like there is no HTML input element named "region" provided in the snippet you shared. Therefore, I can't generate a command to modify an input named "region" without seeing the relevant HTML code that includes it. If you could provide the HTML code that includes the input field named "region", I'd be happy to help., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hin']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']`
----> answers: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29928 <-> row_number: 7
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway'], 'region': ['not available', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/')


Please provide the correct context or additional details if you had something else in mind or if there's a specific URL you're looking to input.
Failed to execute an action self.actions.modify_text('url', 'https://www.ethnologue.com/')


Please provide the correct context or additional details if you had something else in mind or if there's a specific URL you're looking to input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided context, it appears there is no given HTML code specifying a form input element named "primary_country" directly within the snippet you've shared. The actual modification of an input element named "primary_country" cannot be generated without seeing how it's defined in the HTML structure. If "primary_country" is a select dropdown, a text input, radio button, or any other form of input, the specific method to use from the list (modify_select, modify_text, modify_radio, etc.) could vary.

Please provide the HTML code containing the "primary_country" input element for a more precise command.
Failed to execute an action Based on the provided context, it appears there is no given HTML code specifying a form input element named "primary_country" directly within the snippet you've shared. The actual modification of an input element named "primary_country" cannot be generated without seeing how it's defined in the HTML structure. If "primary_country" is a select dropdown, a text input, radio button, or any other form of input, the specific method to use from the list (modify_select, modify_text, modify_radio, etc.) could vary.

Please provide the HTML code containing the "primary_country" input element for a more precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet and the input name "region," there seems to be no associated input field explicitly named "region" within the provided HTML code. Therefore, I'm unable to generate a specific command to modify an input named "region" as it doesn't appear in the given HTML snippet. Could you please provide more context or check the input name?
Failed to execute an action Based on the given HTML snippet and the input name "region," there seems to be no associated input field explicitly named "region" within the provided HTML code. Therefore, I'm unable to generate a specific command to modify an input named "region" as it doesn't appear in the given HTML snippet. Could you please provide more context or check the input name?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['not available', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Denmark, Finland, Norway and Sweden', 'not available']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['norway', 'denmark|finland|norway|sweden']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29929 <-> row_number: 8
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp'], 'primary_country': ['serbia', 'serbia', 'serbia'], 'region': ['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.'], 'countries': ['albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|russia|zambia|bosnia|other|liberia', 'albania|bulgaria|macedonia|canada|macedoniatheformeryugoslavrepublicof|uae|uk|greece|ukraine|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|other', 'albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet and the input name "url", it appears there is no visible input field directly named "url" for modification based on the snippet provided. The HTML shares informational context about looking up a term on a website and includes a form with a CSRF (Cross-Site Request Forgery) token hidden input, but no explicit input field for a URL (apart from the anchored link provided for guidance). 

If I misunderstood your request or if there's more specific information or another part of the form you're referring to that includes an input named "url", please provide additional details.
Failed to execute an action Given the provided HTML snippet and the input name "url", it appears there is no visible input field directly named "url" for modification based on the snippet provided. The HTML shares informational context about looking up a term on a website and includes a form with a CSRF (Cross-Site Request Forgery) token hidden input, but no explicit input field for a URL (apart from the anchored link provided for guidance). 

If I misunderstood your request or if there's more specific information or another part of the form you're referring to that includes an input named "url", please provide additional details., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you're asking for a command related to an HTML form that includes a field named "primary_country". However, the provided HTML snippet doesn't include an input field with that name. Could you please provide more details or check if there's additional HTML code that includes the "primary_country" input? This would help in generating the correct command.
Failed to execute an action It appears you're asking for a command related to an HTML form that includes a field named "primary_country". However, the provided HTML snippet doesn't include an input field with that name. Could you please provide more details or check if there's additional HTML code that includes the "primary_country" input? This would help in generating the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any misunderstanding, but without seeing an input element related to "region" in the provided HTML snippet, I can't accurately provide a command to modify it. Please provide additional information or correct the HTML snippet to include the input element named "region."
Failed to execute an action I'm sorry for any misunderstanding, but without seeing an input element related to "region" in the provided HTML snippet, I can't accurately provide a command to modify it. Please provide additional information or correct the HTML snippet to include the input element named "region.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=srp']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['serbia', 'serbia', 'serbia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.']`
----> answers: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29938 <-> row_number: 17
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben'], 'primary_country': ['bangladesh', 'bangladesh', 'bangladesh'], 'region': ['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.'], 'countries': ['singapore|canada|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|india|saudiarabia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm afraid you haven't provided a specific request or modification that needs to be applied to the 'url' input based on the HTML code you have provided. Could you please provide more details on what exact changes or actions are expected for the 'url' input?
Failed to execute an action I'm afraid you haven't provided a specific request or modification that needs to be applied to the 'url' input based on the HTML code you have provided. Could you please provide more details on what exact changes or actions are expected for the 'url' input?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there might be a misunderstanding or a missing part of the request. The provided HTML does not include any form elements related to an input named "primary_country", nor does it include other form controls like select dropdowns or radio buttons that could be associated with such an input. Without specific form elements related to "primary_country" or a clear task to perform related to it, generating a command to modify it directly from the provided HTML code isn't possible.

Could you please provide more details or clarify the task? Specifically, if you're looking to generate a command based on a particular web form interaction, details about what type of input "primary_country" is supposed to be (e.g., text field, checkbox, radio button, dropdown selection) and the desired value to set it to would be necessary.
Failed to execute an action It appears there might be a misunderstanding or a missing part of the request. The provided HTML does not include any form elements related to an input named "primary_country", nor does it include other form controls like select dropdowns or radio buttons that could be associated with such an input. Without specific form elements related to "primary_country" or a clear task to perform related to it, generating a command to modify it directly from the provided HTML code isn't possible.

Could you please provide more details or clarify the task? Specifically, if you're looking to generate a command based on a particular web form interaction, details about what type of input "primary_country" is supposed to be (e.g., text field, checkbox, radio button, dropdown selection) and the desired value to set it to would be necessary., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there's been a misunderstanding or incomplete information. From the provided HTML snippet, I cannot see any input named "region" available for modification. The snippet shared lacks form elements like radio buttons, checkboxes, selects, text inputs, etc., directly related to an input named "region."

For the most accurate assistance, please provide the relevant portion of the HTML containing the "region" input or clarify what kind of input "region" is (e.g., text, radio, checkbox, select, range) along with the value you'd like to set for it.
Failed to execute an action It appears there's been a misunderstanding or incomplete information. From the provided HTML snippet, I cannot see any input named "region" available for modification. The snippet shared lacks form elements like radio buttons, checkboxes, selects, text inputs, etc., directly related to an input named "region."

For the most accurate assistance, please provide the relevant portion of the HTML containing the "region" input or clarify what kind of input "region" is (e.g., text, radio, checkbox, select, range) along with the value you'd like to set for it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ben']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29931 <-> row_number: 10
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo', 'http://www.ethnologue.com/show_language.asp?code=epo'], 'primary_country': ['poland', 'poland', 'poland'], 'region': ['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.'], 'countries': ['china|other', 'china|other', 'china|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, there is no visible input field named "url" to modify directly with the commands listed (e.g., `modify_text`, `modify_checkbox`, etc.). The provided HTML largely consists of instructions for looking up "Esperanto" on the Ethnologue website, but does not include a form input for a URL that we can modify with one of the provided methods. 

Could there be an additional part of the HTML code where the "url" input is defined? Or is your request related to handling the lookup process mentioned in the HTML snippet? Please provide further details for the correct assistance.
Failed to execute an action Based on the provided HTML snippet, there is no visible input field named "url" to modify directly with the commands listed (e.g., `modify_text`, `modify_checkbox`, etc.). The provided HTML largely consists of instructions for looking up "Esperanto" on the Ethnologue website, but does not include a form input for a URL that we can modify with one of the provided methods. 

Could there be an additional part of the HTML code where the "url" input is defined? Or is your request related to handling the lookup process mentioned in the HTML snippet? Please provide further details for the correct assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there's been a misunderstanding in the instruction format. You've provided an HTML snippet that describes a form element, mentioning an input name "primary_country", but the actual HTML snippet does not include an input element with the name "primary_country". Without a specific input element to reference, such as a text input, checkbox, radio button, or select dropdown related to "primary_country", generating a command from the given commands list is not possible.

If your intent is to find information or perform an action related to "esperanto" on the Ethnologue website as suggested in the HTML snippet, please clarify how you'd like to proceed, particularly if there's a specific form control related to "primary_country" you'd like to interact with. For the commands I can generate, please provide the specific element type (text, checkbox, radio, select, range) and the value you wish to set for "primary_country".
Failed to execute an action I'm sorry for any confusion, but it seems there's been a misunderstanding in the instruction format. You've provided an HTML snippet that describes a form element, mentioning an input name "primary_country", but the actual HTML snippet does not include an input element with the name "primary_country". Without a specific input element to reference, such as a text input, checkbox, radio button, or select dropdown related to "primary_country", generating a command from the given commands list is not possible.

If your intent is to find information or perform an action related to "esperanto" on the Ethnologue website as suggested in the HTML snippet, please clarify how you'd like to proceed, particularly if there's a specific form control related to "primary_country" you'd like to interact with. For the commands I can generate, please provide the specific element type (text, checkbox, radio, select, range) and the value you wish to set for "primary_country"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you want to generate a command to modify an input within a form, but the provided HTML snippet does not contain an input with the name "region" to modify. Could you please provide the relevant portion of the HTML code that includes the 'region' input field?
Failed to execute an action It seems like you want to generate a command to modify an input within a form, but the provided HTML snippet does not contain an input with the name "region" to modify. Could you please provide the relevant portion of the HTML code that includes the 'region' input field?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo', 'http://www.ethnologue.com/show_language.asp?code=epo']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=epo', 'www.ethnologue.com/show_language.asp?code=epo']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['poland', 'poland', 'poland']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.', 'About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.']`
----> answers: `['About 115 countries, most widely in central and eastern Europe; east Asia: China and other countries; areas of South America; southwest Asia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china|other', 'china|other', 'china|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['china|other', 'china|other', 'china|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29933 <-> row_number: 12
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat'], 'primary_country': ['other', 'other', 'other'], 'region': ['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.'], 'countries': ['canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, it appears there's no direct input field named "url" that is visible for user interaction, such as text input, checkbox, radio button, or select dropdown. The visible elements are mostly static text and a hyperlink. The input fields named are "csrfmiddlewaretoken" which is a hidden input typically used for security purposes (CSRF protection) and doesn't relate to a user-modifiable field like "url".

In absence of a visible, user-modifiable input element with the name "url", I'm unable to generate a command from the specified list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify the input named "url". 

If your intention was to modify or interact with a different part of the form or if there's additional context about how "url" should be interacted with in the form, please provide further details.
Failed to execute an action Based on the provided HTML snippet, it appears there's no direct input field named "url" that is visible for user interaction, such as text input, checkbox, radio button, or select dropdown. The visible elements are mostly static text and a hyperlink. The input fields named are "csrfmiddlewaretoken" which is a hidden input typically used for security purposes (CSRF protection) and doesn't relate to a user-modifiable field like "url".

In absence of a visible, user-modifiable input element with the name "url", I'm unable to generate a command from the specified list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify the input named "url". 

If your intention was to modify or interact with a different part of the form or if there's additional context about how "url" should be interacted with in the form, please provide further details., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there's a misunderstanding in the request. The provided HTML snippet does not include any form elements related to a "primary_country" input that need modification through the listed commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. The snippet mainly informs about looking up information on a website, without a direct task or input named "primary_country" to modify. 

If there are further details or a different part of the HTML code that includes the input named "primary_country", please provide that information for a more accurate response.
Failed to execute an action It appears there's a misunderstanding in the request. The provided HTML snippet does not include any form elements related to a "primary_country" input that need modification through the listed commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. The snippet mainly informs about looking up information on a website, without a direct task or input named "primary_country" to modify. 

If there are further details or a different part of the HTML code that includes the input named "primary_country", please provide that information for a more accurate response., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you're preparing for a step involving looking up information, but there's no specific HTML input element related to the 'region' input name that you've mentioned for me to generate a command. Could you clarify or provide the HTML snippet that includes the input element for 'region'? This will help me generate the appropriate command.
Failed to execute an action It seems like you're preparing for a step involving looking up information, but there's no specific HTML input element related to the 'region' input name that you've mentioned for me to generate a command. Could you clarify or provide the HTML snippet that includes the input element for 'region'? This will help me generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hat']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']`
----> answers: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29939 <-> row_number: 18
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav'], 'primary_country': ['latvia', 'latvia', 'latvia'], 'region': ['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.'], 'countries': ['canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|latvia|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'http://example.com')


Please ensure the actual command accurately reflects the context
Failed to execute an action self.actions.modify_text('url', 'http://example.com')


Please ensure the actual command accurately reflects the context, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was a miscommunication. To effectively assist you in generating the correct command, I would need specific instructions on what action you'd like to take with regard to the input named "primary_country" in the provided HTML structure. Unfortunately, this structure does not include an input with the name "primary_country", nor does it provide actionable details related to modifying a form input element.

Could you please provide more context or specify a direct action (e.g., the value you want to set for a "primary_country" input, if it were present) along with any missing HTML details that include the "primary_country" input element? This would enable me to generate the accurate command you're seeking.
Failed to execute an action It appears there was a miscommunication. To effectively assist you in generating the correct command, I would need specific instructions on what action you'd like to take with regard to the input named "primary_country" in the provided HTML structure. Unfortunately, this structure does not include an input with the name "primary_country", nor does it provide actionable details related to modifying a form input element.

Could you please provide more context or specify a direct action (e.g., the value you want to set for a "primary_country" input, if it were present) along with any missing HTML details that include the "primary_country" input element? This would enable me to generate the accurate command you're seeking., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there may have been a misunderstanding. The provided HTML snippet does not include any form elements specifically named `region`, nor does it contain input elements like checkbox, radio button, text input, etc., that would directly relate to generating commands for modification based on the example commands provided.

The snippet mainly includes instructions for a specific task related to searching for "Latvian" on the Ethnologue website, but does not provide the actual form inputs related to the `region` or similar that would necessitate using commands such as `modify_text`, `modify_checkbox`, etc.

If you're looking to interact programmatically with a web form that includes a `region` input, please ensure the HTML snippet provided includes the form input element named `region` or provide more details about the specific form interaction you're looking to achieve.
Failed to execute an action It appears there may have been a misunderstanding. The provided HTML snippet does not include any form elements specifically named `region`, nor does it contain input elements like checkbox, radio button, text input, etc., that would directly relate to generating commands for modification based on the example commands provided.

The snippet mainly includes instructions for a specific task related to searching for "Latvian" on the Ethnologue website, but does not provide the actual form inputs related to the `region` or similar that would necessitate using commands such as `modify_text`, `modify_checkbox`, etc.

If you're looking to interact programmatically with a web form that includes a `region` input, please ensure the HTML snippet provided includes the form input element named `region` or provide more details about the specific form interaction you're looking to achieve., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=lav']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['latvia', 'latvia', 'latvia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']`
----> answers: `['Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29944 <-> row_number: 23
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus'], 'primary_country': ['spain', 'spain', 'spain'], 'region': ['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.'], 'countries': ['france|philippines|unitedstates|australia|costarica|spain|mexico', 'france|philippines|unitedstates|australia|costarica|mexico|other', 'france|aruba|philippines|unitedstates|australia|costarica|spain|mexico|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you've shared a piece of HTML code which includes a form and a reference to looking up "basque" on the Ethnologue website, but you haven't specified a modification command or provided additional context or details I can use to perform a specific action or give you a detailed response.

If you need to modify the "url" input in the form based on commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`, please provide the specific modification you wish to perform.

For instance, if there was a text input for a URL you wanted to change, you'd provide the desired value for that "url" input. However, based on the provided HTML snippet, there's no visible input named "url", so I might need more details to assist you correctly.

Could you please clarify your request?
Failed to execute an action It appears you've shared a piece of HTML code which includes a form and a reference to looking up "basque" on the Ethnologue website, but you haven't specified a modification command or provided additional context or details I can use to perform a specific action or give you a detailed response.

If you need to modify the "url" input in the form based on commands such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`, please provide the specific modification you wish to perform.

For instance, if there was a text input for a URL you wanted to change, you'd provide the desired value for that "url" input. However, based on the provided HTML snippet, there's no visible input named "url", so I might need more details to assist you correctly.

Could you please clarify your request?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any misunderstanding, but without visible form elements relevant specifically to the input name "primary_country" provided in the HTML snippet you shared, I can't generate a precise command like those involving `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`.

The HTML snippet you've provided doesn't include specific input elements related to "primary_country" that could be modified using the commands described. Please check if there's additional or missing information to work with, or if you could provide further details surrounding the "primary_country" input. This would include what kind of input it is (e.g., text, checkbox, radio button, select dropdown, range) and its intended modification value. With that information, I'd be better positioned to generate the appropriate command for you.
Failed to execute an action I'm sorry for any misunderstanding, but without visible form elements relevant specifically to the input name "primary_country" provided in the HTML snippet you shared, I can't generate a precise command like those involving `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`.

The HTML snippet you've provided doesn't include specific input elements related to "primary_country" that could be modified using the commands described. Please check if there's additional or missing information to work with, or if you could provide further details surrounding the "primary_country" input. This would include what kind of input it is (e.g., text, checkbox, radio button, select dropdown, range) and its intended modification value. With that information, I'd be better positioned to generate the appropriate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text`, `self.actions.modify_checkbox`, etc. 

If you are looking to interact with a form input named "region" as part of web automation or manipulation, please make sure the HTML snippet includes such an element or provide the specific action and value intended for "region", assuming it's part of the wider form not shown in the snippet.
Failed to execute an action self.actions.modify_text`, `self.actions.modify_checkbox`, etc. 

If you are looking to interact with a form input named "region" as part of web automation or manipulation, please make sure the HTML snippet includes such an element or provide the specific action and value intended for "region", assuming it's part of the wider form not shown in the snippet., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=eus']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['spain', 'spain', 'spain']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']`
----> answers: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29925 <-> row_number: 4
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry'], 'primary_country': ['netherlands', 'netherlands', 'other'], 'region': ['North, Friesland.', 'North, Friesland', 'North, Friesland.'], 'countries': ['other', 'other', 'other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: The provided HTML code snippet and instructions do not have an actionable item for modifying an input field directly related to the "url" input name. It seems there's a misunderstanding or missing context for this task. If you wish to fill or modify a form programmatically, usually, you would interact with visible input fields such as text boxes, radio buttons, checkboxes, etc.

Given the details, it looks like you might want to interact with a link or conduct a web search, which doesn't directly correlate with modifying a form input through scripting commands like those provided initially (`modify_text`, `modify_checkbox`, etc.).

If you could provide more specific details regarding what you want to achieve with the "url" input or correct the context of the request, I might be able to offer a more fitting suggestion or command.
Failed to execute an action The provided HTML code snippet and instructions do not have an actionable item for modifying an input field directly related to the "url" input name. It seems there's a misunderstanding or missing context for this task. If you wish to fill or modify a form programmatically, usually, you would interact with visible input fields such as text boxes, radio buttons, checkboxes, etc.

Given the details, it looks like you might want to interact with a link or conduct a web search, which doesn't directly correlate with modifying a form input through scripting commands like those provided initially (`modify_text`, `modify_checkbox`, etc.).

If you could provide more specific details regarding what you want to achieve with the "url" input or correct the context of the request, I might be able to offer a more fitting suggestion or command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but without additional context such as a selection list or specific input types related to "primary_country", it's not possible to generate a specific command from the list of valid commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) based on the given HTML snippet. 

The snippet provided does not contain any form elements directly related to "primary_country" for modifying its value through those commands. For accurate command generation, please provide HTML code that includes the input with the name "primary_country" and its type (e.g., select, input text, radio).
Failed to execute an action I'm sorry, but without additional context such as a selection list or specific input types related to "primary_country", it's not possible to generate a specific command from the list of valid commands (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) based on the given HTML snippet. 

The snippet provided does not contain any form elements directly related to "primary_country" for modifying its value through those commands. For accurate command generation, please provide HTML code that includes the input with the name "primary_country" and its type (e.g., select, input text, radio)., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems that there might have been an oversight. The provided HTML snippet does not contain the input field named "region" that you wish to modify, nor does it contain inputs such as text, checkbox, radio, select, or range that would allow for an operation such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. Could you provide more details or ensure that the relevant part of the HTML is included? This will help in generating the appropriate command.
Failed to execute an action It seems that there might have been an oversight. The provided HTML snippet does not contain the input field named "region" that you wish to modify, nor does it contain inputs such as text, checkbox, radio, select, or range that would allow for an operation such as `modify_text`, `modify_checkbox`, `modify_radio`, `modify_select`, or `modify_range`. Could you provide more details or ensure that the relevant part of the HTML is included? This will help in generating the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=fry']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['netherlands', 'netherlands', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Friesland.', 'North, Friesland', 'North, Friesland.']`
----> answers: `['North, Friesland.', 'North, Friesland']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['other', 'other', 'other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29966 <-> row_number: 45
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye'], 'primary_country': ['armenia', 'armenia', 'armenia'], 'region': ['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.'], 'countries': ['bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|unitedstates|jordan|kazakhstan|uzbekistan|cyprus|romania|hungary|egypt|lebanon|russianfederation|other|estonia|india', 'bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|unitedstates|jordan|kazakhstan|uzbekistan|cyprus|hungary|egypt|lebanon|russianfederation|estonia|india', 'bulgaria|iran|france|turkey|canada|georgia|israel|greece|ukraine|japan|unitedstates|kazakhstan|uzbekistan|cyprus|romania|hungary|egypt|lebanon|russianfederation|estonia|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, where you're given the task to look up "Armenian" on the Ethnologue website, but there's no directly modifiable form fields related to "url" in the snippet you've shared. If your intention is to set or modify a value in a form related to a URL, unfortunately, there's no such input field explicitly named "url" in the snippet provided.

However, if you were looking to automate a different kind of interaction, like submitting the form after doing some actions (like looking up information), you might use JavaScript in a browser context or simulate this action if you're working with a headless browser in a scraping or automation task. Your task might not directly modify an input named "url", as that doesn't appear in the snippet. 

If you're working in an environment that supports JavaScript execution or web automation (like using Selenium or a similar library in a programming language), you might simulate the navigation and search actions required by your task. Without a specific "url" input to modify and based on the context you've provided, I can't generate a direct command for altering a "url" field, as it doesn't exist in the HTML snippet.
Failed to execute an action Based on the provided HTML snippet, where you're given the task to look up "Armenian" on the Ethnologue website, but there's no directly modifiable form fields related to "url" in the snippet you've shared. If your intention is to set or modify a value in a form related to a URL, unfortunately, there's no such input field explicitly named "url" in the snippet provided.

However, if you were looking to automate a different kind of interaction, like submitting the form after doing some actions (like looking up information), you might use JavaScript in a browser context or simulate this action if you're working with a headless browser in a scraping or automation task. Your task might not directly modify an input named "url", as that doesn't appear in the snippet. 

If you're working in an environment that supports JavaScript execution or web automation (like using Selenium or a similar library in a programming language), you might simulate the navigation and search actions required by your task. Without a specific "url" input to modify and based on the context you've provided, I can't generate a direct command for altering a "url" field, as it doesn't exist in the HTML snippet., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Given the provided HTML snippet and input name "primary_country," it seems there's insufficient information to specifically determine how to modify an input for "primary_country" since there is no visible form input related to "primary_country" in the shared HTML code. 

If "primary_country" is supposed to be a part of the form but not visible in the provided HTML snippet, and if it requires a string or specific value (e.g., a country code or name), you would generally use a command similar to `self.modify_text` assuming that "primary_country" is a text input. If it was meant to be selected from options, a `self.modify_select` command might be appropriate. 

However, since the exact input type and options for "primary_country" are not specified in your request, I would need more details to generate a precise command.
Failed to execute an action Given the provided HTML snippet and input name "primary_country," it seems there's insufficient information to specifically determine how to modify an input for "primary_country" since there is no visible form input related to "primary_country" in the shared HTML code. 

If "primary_country" is supposed to be a part of the form but not visible in the provided HTML snippet, and if it requires a string or specific value (e.g., a country code or name), you would generally use a command similar to `self.modify_text` assuming that "primary_country" is a text input. If it was meant to be selected from options, a `self.modify_select` command might be appropriate. 

However, since the exact input type and options for "primary_country" are not specified in your request, I would need more details to generate a precise command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but based on the provided HTML snippet, there is no visible input element with the name "region" to modify. The HTML provided seems incomplete in terms of fulfilling the request for generating a specific command from the initial list. Could you please provide more details or correct the input name?
Failed to execute an action I'm sorry, but based on the provided HTML snippet, there is no visible input element with the name "region" to modify. The HTML provided seems incomplete in terms of fulfilling the request for generating a specific command from the initial list. Could you please provide more details or correct the input name?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye', 'http://www.ethnologue.com/show_language.asp?code=hye']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hye']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['armenia', 'armenia', 'armenia']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.']`
----> answers: `['Widespread. Also in Azerbaijan, Bulgaria, Canada, Cyprus, Egypt, Estonia, France, Georgia, Greece, Honduras, Hungary, India, Iran, Iraq, Israel, Jordan, Kazakhstan, Kyrgyzstan, Lebanon, Palestinian West Bank and Gaza, Romania, Russian Federation (Europe), Syria, Tajikistan, Turkey (Europe), Turkmenistan, Ukraine, United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|other|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|japan|kazakhstan|lebanon|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|other|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|jordan|kazakhstan|lebanon|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'bulgaria|canada|cyprus|egypt|estonia|france|georgia|greece|hungary|india|iran|israel|japan|kazakhstan|lebanon|romania|russianfederation|turkey|ukraine|unitedstates|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29949 <-> row_number: 28
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan'], 'primary_country': ['denmark', 'denmark', 'denmark'], 'region': ['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.'], 'countries': ['norway|canada|uae|germany|unitedstates|sweden', 'norway|canada|uae|germany|sweden', 'norway|canada|uae|germany|unitedstates|sweden|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry, but it appears there's been a misunderstanding. The provided HTML code does not contain a form input with the name "url" nor any specific command-related context that allows me to generate a modification command based on the guidelines you've provided.

If you need assistance generating a specific command from the list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify an HTML input or another type of content manipulation using a given input name, please provide the relevant details or correct the input name according to the actual inputs in the provided HTML code.
Failed to execute an action I'm sorry, but it appears there's been a misunderstanding. The provided HTML code does not contain a form input with the name "url" nor any specific command-related context that allows me to generate a modification command based on the guidelines you've provided.

If you need assistance generating a specific command from the list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) to modify an HTML input or another type of content manipulation using a given input name, please provide the relevant details or correct the input name according to the actual inputs in the provided HTML code., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you haven't provided any code related to the input name `primary_country` within the HTML snippet you shared. Without the specific code for the input element `primary_country`, it's not possible to generate an appropriate command from the given commands list. Please provide the HTML code snippet that includes the `primary_country` input element for accurate assistance.
Failed to execute an action It seems like you haven't provided any code related to the input name `primary_country` within the HTML snippet you shared. Without the specific code for the input element `primary_country`, it's not possible to generate an appropriate command from the given commands list. Please provide the HTML code snippet that includes the `primary_country` input element for accurate assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the given HTML snippet, there doesn't seem to be an input element with the name "region" visible in the provided code. Please ensure the full HTML code related to the input element named "region" is provided for accurate command generation, or specify the type of input you intend to modify if it pertains to elements not shown in the snippet.
Failed to execute an action Based on the given HTML snippet, there doesn't seem to be an input element with the name "region" visible in the provided code. Please ensure the full HTML code related to the input element named "region" is provided for accurate command generation, or specify the type of input you intend to modify if it pertains to elements not shown in the snippet., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=dan']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['denmark', 'denmark', 'denmark']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']`
----> answers: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29930 <-> row_number: 9
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori'], 'primary_country': ['india', 'india', 'india'], 'region': ['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.'], 'countries': ['bangladesh', 'bangladesh', 'bangladesh|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'input_value')


Without an input named "url", I can't generate a specific command. If you need assistance with a different input or a different task, please provide more details.
Failed to execute an action self.actions.modify_text('url', 'input_value')


Without an input named "url", I can't generate a specific command. If you need assistance with a different input or a different task, please provide more details., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_select('primary_country', 'desired_value')


Replace 'desired_value' with the value that corresponds to the desired option within the "primary_country" dropdown. However, please ensure the input field's actual HTML markup is provided for a precise command tailored to your needs.
Failed to execute an action self.actions.modify_select('primary_country', 'desired_value')


Replace 'desired_value' with the value that corresponds to the desired option within the "primary_country" dropdown. However, please ensure the input field's actual HTML markup is provided for a precise command tailored to your needs., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: I'm sorry for any confusion, but it seems there hasn't been a clear request regarding how to modify the "region" input within the provided HTML code sample. The HTML snippet doesn't include an input with the name "region." Could you please provide more specific details on what you need, such as the type of input for "region" and the desired modification?
Failed to execute an action I'm sorry for any confusion, but it seems there hasn't been a clear request regarding how to modify the "region" input within the provided HTML code sample. The HTML snippet doesn't include an input with the name "region." Could you please provide more specific details on what you need, such as the type of input for "region" and the desired modification?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ori']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']`
----> answers: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['bangladesh', 'bangladesh', 'bangladesh|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29945 <-> row_number: 24
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway', 'norway'], 'region': ['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_text('url', 'https://www.example.com')
   
   Here, 'https://www.example.com' would be replaced with the actual URL you wish to input.

2. If the goal were to programmatically click a link (assuming it was possible within the given context, which usually isn't directly achievable through server-side input modification commands but rather involves client-side or browser automation):
   -
Failed to execute an action self.actions.modify_text('url', 'https://www.example.com')
   
   Here, 'https://www.example.com' would be replaced with the actual URL you wish to input.

2. If the goal were to programmatically click a link (assuming it was possible within the given context, which usually isn't directly achievable through server-side input modification commands but rather involves client-side or browser automation):
   -, error: unexpected indent (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might have missed providing all necessary details from the HTML content that contains the `input` element for the `primary_country`. Could you please provide the specific section of the HTML that includes the `input` element with the name `primary_country`? This way, I can generate the correct command to modify it.
Failed to execute an action It seems like you might have missed providing all necessary details from the HTML content that contains the `input` element for the `primary_country`. Could you please provide the specific section of the HTML that includes the `input` element with the name `primary_country`? This way, I can generate the correct command to modify it., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems you've provided a setup for a task involving looking up information on the Ehtnologue website but didn't specify what needs to be modified on the provided HTML form based on the task's outcome. Could you please clarify the input modification required based on the task's result?
Failed to execute an action It seems you've provided a setup for a task involving looking up information on the Ehtnologue website but didn't specify what needs to be modified on the provided HTML form based on the task's outcome. Could you please clarify the input modification required based on the task's result?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Denmark, Finland, Norway and Sweden', 'Not available']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29965 <-> row_number: 44
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new'], 'primary_country': ['nepal', 'nepal', 'albania'], 'region': ['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.'], 'countries': ['nepal|india', 'other|india', 'nepal|other|india']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Your request indicates you might be looking for a script to fill or interact with a form on a web page, and while you mentioned an input name "url," the provided HTML extract does not include a visible input field with the name "url" to directly interact with. It seems like you're possibly looking to fetch or work with information related to "newar / nepal bhasa" from an external resource, but the specific action or modification you intend to apply to the "url" input is unclear from the provided context.

If your intention is to programmatically navigate or interact with a webpage, Python libraries like `requests` for HTTP requests or `selenium` for browser automation could be relevant, but these actions would typically be scripted in a Python environment rather than using the form-based command structure you've proposed.

Please provide further details or clarify your request if you're looking for a specific form of interaction with the "url" input or the webpage content related to "newar / nepal bhasa."
Failed to execute an action Your request indicates you might be looking for a script to fill or interact with a form on a web page, and while you mentioned an input name "url," the provided HTML extract does not include a visible input field with the name "url" to directly interact with. It seems like you're possibly looking to fetch or work with information related to "newar / nepal bhasa" from an external resource, but the specific action or modification you intend to apply to the "url" input is unclear from the provided context.

If your intention is to programmatically navigate or interact with a webpage, Python libraries like `requests` for HTTP requests or `selenium` for browser automation could be relevant, but these actions would typically be scripted in a Python environment rather than using the form-based command structure you've proposed.

Please provide further details or clarify your request if you're looking for a specific form of interaction with the "url" input or the webpage content related to "newar / nepal bhasa.", error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears there was no direct instructions or given input value for modifying an element named "primary_country" in the HTML code provided. If a specific action is needed, such as filling out or selecting a value for an input field named "primary_country," please provide additional context or specify the desired action and value.
Failed to execute an action It appears there was no direct instructions or given input value for modifying an element named "primary_country" in the HTML code provided. If a specific action is needed, such as filling out or selecting a value for an input field named "primary_country," please provide additional context or specify the desired action and value., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It appears you may want a command to adjust a form input named "region". However, without seeing any specific input elements for "region" in the HTML snippet you've provided, such as `<input>`, `<select>`, `<textarea>`, etc., associated with the name "region", I am unable to generate a precise command.

Could you please provide more details about the type of input (text, checkbox, radio button, dropdown select, etc.) and the desired value or selection for "region"? This information will enable me to generate the appropriate command to modify the input.
Failed to execute an action It appears you may want a command to adjust a form input named "region". However, without seeing any specific input elements for "region" in the HTML snippet you've provided, such as `<input>`, `<select>`, `<textarea>`, etc., associated with the name "region", I am unable to generate a precise command.

Could you please provide more details about the type of input (text, checkbox, radio button, dropdown select, etc.) and the desired value or selection for "region"? This information will enable me to generate the appropriate command to modify the input., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new', 'http://www.ethnologue.com/show_language.asp?code=new']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=new']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['nepal', 'nepal', 'albania']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.', 'Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.']`
----> answers: `['Widespread. Kathmandu Valley and thoughout Nepal. Fewer far west. Also in India.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india|nepal', 'india|other', 'india|nepal|other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['india|nepal', 'india|other', 'india|nepal|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29968 <-> row_number: 47
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv'], 'primary_country': ['russianfederation', 'russianfederation', 'russianfederation'], 'region': ['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan'], 'countries': ['kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|russia|russianfederation|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
input Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
Executing one action: Based on the provided HTML snippet, there doesn't seem to be an input element with the name "url" to modify. The snippet shows the structure for a form submission with a CSRF (Cross-Site Request Forgery) token for security purposes, along with a hyperlink guiding the user on how to perform a specific step, but it does not include an editable text, select, checkbox, or radio type input by the name of "url".

If you intended to modify a different type of input or have more details about the specific input you want to address, please provide further information or clarify your request.
Failed to execute an action Based on the provided HTML snippet, there doesn't seem to be an input element with the name "url" to modify. The snippet shows the structure for a form submission with a CSRF (Cross-Site Request Forgery) token for security purposes, along with a hyperlink guiding the user on how to perform a specific step, but it does not include an editable text, select, checkbox, or radio type input by the name of "url".

If you intended to modify a different type of input or have more details about the specific input you want to address, please provide further information or clarify your request., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
input Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It seems like you might be looking for a command to modify a form input, but the provided HTML snippet doesn't showcase a form input element related to "primary_country" or any select, checkbox, text, radio, or range input that matches with the given input name. Please provide the specific HTML code segment that includes the "primary_country" input field or clarify the type of modification you're looking to perform.
Failed to execute an action It seems like you might be looking for a command to modify a form input, but the provided HTML snippet doesn't showcase a form input element related to "primary_country" or any select, checkbox, text, radio, or range input that matches with the given input name. Please provide the specific HTML code segment that includes the "primary_country" input field or clarify the type of modification you're looking to perform., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
input Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
Executing one action: It looks like you might need assistance with an HTML element or form interaction related to a field named "region," but the snippet you've provided does not contain a form field (input, select, radio, checkbox, etc.) related to "region". Could you please provide more details or additional HTML code that includes the "region" input you're referring to? This way, I can give a more accurate and helpful response.
Failed to execute an action It looks like you might need assistance with an HTML element or form interaction related to a field named "region," but the snippet you've provided does not contain a form field (input, select, radio, checkbox, etc.) related to "region". Could you please provide more details or additional HTML code that includes the "region" input you're referring to? This way, I can give a more accurate and helpful response., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
input Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
Executing one action: self.actions.modify_checkbox('countries', 'albania')
Looking for checkboxes with `name`: `countries` the values: `['albania']`
About to check this checkbox: <input type="checkbox" name="countries" value="albania">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=chv']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['russianfederation', 'russianfederation', 'russianfederation']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']`
----> answers: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
Model answers: albania 
Gold answers: ['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.5454545454545455, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Radiology Report Sentence Classification` = = = = = = = = = = = = 
First instance id: 32981
instance_id: 33160 <-> row_number: 179
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 179 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0]}
instance_id: 33070 <-> row_number: 89
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 89 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 33367 <-> row_number: 386
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 386 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33324 <-> row_number: 343
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 343 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33194 <-> row_number: 213
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 213 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33204 <-> row_number: 223
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 223 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33053 <-> row_number: 72
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'NotConfident', 'SomewhatConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33284 <-> row_number: 303
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 303 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33248 <-> row_number: 267
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 267 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33157 <-> row_number: 176
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 176 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33155 <-> row_number: 174
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 174 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33113 <-> row_number: 132
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 132 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33072 <-> row_number: 91
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 91 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33171 <-> row_number: 190
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 190 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33058 <-> row_number: 77
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 77 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33307 <-> row_number: 326
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 326 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33094 <-> row_number: 113
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 113 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33167 <-> row_number: 186
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 186 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33368 <-> row_number: 387
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 387 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33260 <-> row_number: 279
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 279 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
input Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
input Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Reddit In-group Analysis Comment annotation 3` = = = = = = = = = = = = 
First instance id: 33913
instance_id: 34053 <-> row_number: 140
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 140 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet and the input name "option0," it appears you want to interact with an element, possibly a radio button or a selection input, but the relevant HTML code for the input element named "option0" is not provided in your snippet. 

For optimal assistance, could you please provide the complete HTML code that includes the element named "option0"?
Failed to execute an action Given the provided HTML snippet and the input name "option0," it appears you want to interact with an element, possibly a radio button or a selection input, but the relevant HTML code for the input element named "option0" is not provided in your snippet. 

For optimal assistance, could you please provide the complete HTML code that includes the element named "option0"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not include any form controls such as `<input>`, `<select>`, or `<textarea>` related to the `option1` input name. Consequently, without additional context on the HTML structure and the specific input control you're referring to, it's not possible to create a command to modify an input named `option1`. 

Please provide more detailed HTML code that includes the form control associated with `option1` so I can assist you accurately.
Failed to execute an action It seems like the provided HTML snippet does not include any form controls such as `<input>`, `<select>`, or `<textarea>` related to the `option1` input name. Consequently, without additional context on the HTML structure and the specific input control you're referring to, it's not possible to create a command to modify an input named `option1`. 

Please provide more detailed HTML code that includes the form control associated with `option1` so I can assist you accurately., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Since the provided HTML does not contain any form input elements directly related to the name "option2", it's not possible to generate a valid command from the provided list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) without understanding the specific input type and options associated with "option2". 

Please provide more context or the specific input element related to "option2" to assist you accurately.
Failed to execute an action Since the provided HTML does not contain any form input elements directly related to the name "option2", it's not possible to generate a valid command from the provided list (modify_text, modify_checkbox, modify_radio, modify_select, modify_range) without understanding the specific input type and options associated with "option2". 

Please provide more context or the specific input element related to "option2" to assist you accurately., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but based on the HTML snippet you've provided, there's no form input element related to "option3" for me to generate a command. Could you please provide more details regarding the specific modification you want to make, including any relevant form elements?
Failed to execute an action I'm sorry, but based on the HTML snippet you've provided, there's no form input element related to "option3" for me to generate a command. Could you please provide more details regarding the specific modification you want to make, including any relevant form elements?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To provide a proper command, we would need to see the actual HTML input specifics for "option4" (e.g., whether it is a radio button, checkbox, select dropdown, etc., and its value options). However, if "option4" is not clearly defined or shown in the provided HTML excerpt, I cannot generate an accurate command to modify the input. Could you please provide more details or the relevant HTML code that includes the input element for "option4"?
Failed to execute an action To provide a proper command, we would need to see the actual HTML input specifics for "option4" (e.g., whether it is a radio button, checkbox, select dropdown, etc., and its value options). However, if "option4" is not clearly defined or shown in the provided HTML excerpt, I cannot generate an accurate command to modify the input. Could you please provide more details or the relevant HTML code that includes the input element for "option4"?, error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34044 <-> row_number: 131
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 131 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: The provided input and HTML snippet do not give clear information on the specific action or the type of input element (e.g., text, checkbox, radio, select, range) that needs to be modified. Additionally, the HTML excerpt does not contain an input element with the name "option0" for me to generate a valid command based on the valid commands list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more details about the type of input named "option0" (such as whether it's a text field, checkbox, radio button, dropdown, or range slider) and its possible values. With that information, I can then generate the appropriate modification command.
Failed to execute an action The provided input and HTML snippet do not give clear information on the specific action or the type of input element (e.g., text, checkbox, radio, select, range) that needs to be modified. Additionally, the HTML excerpt does not contain an input element with the name "option0" for me to generate a valid command based on the valid commands list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more details about the type of input named "option0" (such as whether it's a text field, checkbox, radio button, dropdown, or range slider) and its possible values. With that information, I can then generate the appropriate modification command., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_checkbox('option1', 'input_value')

Or, if "option1" is related to a radio button:
python
self.actions.modify_radio('option1', 'input_value')

Or, if "option1" is a select drop-down:
python
self.actions.modify_select('option1', 'input_value')

Or finally, if it's a text input or similar:
python
self.actions.modify_text('option1', 'input_value')


Please replace 'input_value' with the actual value that corresponds to the option you want to modify for "option1". Also, adjust the command type based on the actual input type for "option1" in your HTML code.
Failed to execute an action self.actions.modify_checkbox('option1', 'input_value')

Or, if "option1" is related to a radio button:
python
self.actions.modify_radio('option1', 'input_value')

Or, if "option1" is a select drop-down:
python
self.actions.modify_select('option1', 'input_value')

Or finally, if it's a text input or similar:
python
self.actions.modify_text('option1', 'input_value')


Please replace 'input_value' with the actual value that corresponds to the option you want to modify for "option1". Also, adjust the command type based on the actual input type for "option1" in your HTML code., error: unterminated string literal (detected at line 11) (<string>, line 11)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain input elements related to the "option2" input name you've mentioned. Can you provide more details or the relevant portion of the HTML code that includes the input element for "option2"? This information is necessary for generating a valid command to modify the input.
Failed to execute an action It appears that the provided HTML snippet does not contain input elements related to the "option2" input name you've mentioned. Can you provide more details or the relevant portion of the HTML code that includes the input element for "option2"? This information is necessary for generating a valid command to modify the input., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the relevant HTML for modifying the input named "option3" isn't provided in the content you shared. The snippet given focuses on form instructions but does not include the actual `<input>` elements necessary to generate a specific command.

Could you please provide the part of the HTML that includes the `<input>` or `<select>` element named "option3" so I can assist you more accurately?
Failed to execute an action It seems like the relevant HTML for modifying the input named "option3" isn't provided in the content you shared. The snippet given focuses on form instructions but does not include the actual `<input>` elements necessary to generate a specific command.

Could you please provide the part of the HTML that includes the `<input>` or `<select>` element named "option3" so I can assist you more accurately?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command for modifying an input named "option4" based on the given HTML snippet, it's essential to know the type of input element (e.g., text, checkbox, radio, select, or range) associated with "option4". However, the provided HTML snippet does not contain an input element with the name "option4". The snippet provided seems to be an introduction or instruction section without any form inputs.

Could you please provide more details about the input element "option4", such as its type or additional parts of the HTML code that includes the actual input element? This information will help me generate the correct command.
Failed to execute an action To generate a command for modifying an input named "option4" based on the given HTML snippet, it's essential to know the type of input element (e.g., text, checkbox, radio, select, or range) associated with "option4". However, the provided HTML snippet does not contain an input element with the name "option4". The snippet provided seems to be an introduction or instruction section without any form inputs.

Could you please provide more details about the input element "option4", such as its type or additional parts of the HTML code that includes the actual input element? This information will help me generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34063 <-> row_number: 150
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 150 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Hard to tell', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you've provided information about an HTML form that includes instructions for selecting options, but you have not provided the HTML code containing the input field named "option0." To correctly generate a command to modify the input, more details about the input element (e.g., type of input, possible values) are needed.

Could you provide the relevant HTML code snippet that includes the input named "option0"?
Failed to execute an action It appears you've provided information about an HTML form that includes instructions for selecting options, but you have not provided the HTML code containing the input field named "option0." To correctly generate a command to modify the input, more details about the input element (e.g., type of input, possible values) are needed.

Could you provide the relevant HTML code snippet that includes the input named "option0"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no clear HTML input or selection related to the input name "option1" based on the provided HTML snippet. The snippet primarily consists of introductory or instructional text without a form input element (like a checkbox, radio button, select dropdown, etc.) explicitly for "option1". 

To generate a command, more information on the form elements specifically related to "option1" is necessary, such as an input tag with name="option1" or any element that corresponds to this input name within the form. Please provide details on the input type and possible values for "option1".
Failed to execute an action It appears there is no clear HTML input or selection related to the input name "option1" based on the provided HTML snippet. The snippet primarily consists of introductory or instructional text without a form input element (like a checkbox, radio button, select dropdown, etc.) explicitly for "option1". 

To generate a command, more information on the form elements specifically related to "option1" is necessary, such as an input tag with name="option1" or any element that corresponds to this input name within the form. Please provide details on the input type and possible values for "option1"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet is incomplete and doesn't contain a form input corresponding to the given input name "option2". Without seeing the form inputs to know how they're constructed (whether it’s a set of radio buttons, dropdown, etc.), it's difficult to provide an accurate command to modify the input. 

For generating a valid command, I need to see the input tags or elements that relate to "option2" within the form. Could you please provide the full HTML details surrounding the "option2" input, including its type (radio buttons, checkboxes, select dropdown, etc.)?
Failed to execute an action It appears that the provided HTML snippet is incomplete and doesn't contain a form input corresponding to the given input name "option2". Without seeing the form inputs to know how they're constructed (whether it’s a set of radio buttons, dropdown, etc.), it's difficult to provide an accurate command to modify the input. 

For generating a valid command, I need to see the input tags or elements that relate to "option2" within the form. Could you please provide the full HTML details surrounding the "option2" input, including its type (radio buttons, checkboxes, select dropdown, etc.)?, error: invalid character '’' (U+2019) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It looks like the HTML snippet you provided was cut off and does not show the options for input named "option3". Could you provide more context or the rest of the HTML code related to the input "option3"? This would help me generate the right command for modifying the web page.
Failed to execute an action It looks like the HTML snippet you provided was cut off and does not show the options for input named "option3". Could you provide more context or the rest of the HTML code related to the input "option3"? This would help me generate the right command for modifying the web page., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you've provided a snippet of HTML, but didn't specify the input type (e.g., checkbox, radio button, select menu) associated with "option4". Additionally, the given HTML snippet doesn't contain any form inputs related to "option4". Could you please provide more details or the relevant part of the HTML containing the input named "option4"? This would enable me to generate the accurate command you need.
Failed to execute an action It appears you've provided a snippet of HTML, but didn't specify the input type (e.g., checkbox, radio button, select menu) associated with "option4". Additionally, the given HTML snippet doesn't contain any form inputs related to "option4". Could you please provide more details or the relevant part of the HTML containing the input named "option4"? This would enable me to generate the accurate command you need., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34039 <-> row_number: 126
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 126 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Hard to tell', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that you're asking for a command without providing details about the type of input (for example, checkbox, radio, text, select, range) or the options/values within the form related to the input name "option0". The snippet of HTML you provided does not include the input element itself, just part of the instructions for a form.

For a more accurate response, please provide the HTML tag for the input named "option0" and clarify what action you'd like to perform (e.g., select an option, fill in a text, etc.).
Failed to execute an action It appears that you're asking for a command without providing details about the type of input (for example, checkbox, radio, text, select, range) or the options/values within the form related to the input name "option0". The snippet of HTML you provided does not include the input element itself, just part of the instructions for a form.

For a more accurate response, please provide the HTML tag for the input named "option0" and clarify what action you'd like to perform (e.g., select an option, fill in a text, etc.)., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not contain an input with the name "option1" for me to generate a specific command. Can you provide more details or check the input name?
Failed to execute an action It seems like the provided HTML snippet does not contain an input with the name "option1" for me to generate a specific command. Can you provide more details or check the input name?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information in the provided HTML snippet to accurately determine the type of input and generate a valid command based on the initial instructions. Since the HTML doesn't contain any inputs (checkbox, radio, select, range, or text input) related to "option2," I cannot generate a specific command.

Could you please provide more details about the input type you wish to modify or ensure the HTML contains the input field for "option2"?
Failed to execute an action It appears there's missing information in the provided HTML snippet to accurately determine the type of input and generate a valid command based on the initial instructions. Since the HTML doesn't contain any inputs (checkbox, radio, select, range, or text input) related to "option2," I cannot generate a specific command.

Could you please provide more details about the input type you wish to modify or ensure the HTML contains the input field for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems you've provided only part of the HTML content and the instructions or the question without specifying what type and options for the input named "option3". Based on the provided snippet, it's not clear what specific type of input (checkbox, radio, select, etc.) "option3" refers to or what options are available for it. 

Could you please provide more context or details on the input named "option3"? With more information, I can generate the appropriate command to modify the input based on its type.
Failed to execute an action It seems you've provided only part of the HTML content and the instructions or the question without specifying what type and options for the input named "option3". Based on the provided snippet, it's not clear what specific type of input (checkbox, radio, select, etc.) "option3" refers to or what options are available for it. 

Could you please provide more context or details on the input named "option3"? With more information, I can generate the appropriate command to modify the input based on its type., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, there is no form input (like input, select, checkbox, or radio button) associated with `option4`. The snippet only contains instructional text without any form element related to `option4`. To generate a valid command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), an input element with the name `option4` and its type is necessary.

Could you please provide the missing part of the HTML code that includes the input element for `option4`? This will enable me to generate the appropriate command to modify it.
Failed to execute an action Based on the provided HTML snippet, there is no form input (like input, select, checkbox, or radio button) associated with `option4`. The snippet only contains instructional text without any form element related to `option4`. To generate a valid command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), an input element with the name `option4` and its type is necessary.

Could you please provide the missing part of the HTML code that includes the input element for `option4`? This will enable me to generate the appropriate command to modify it., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33926 <-> row_number: 13
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided input name and HTML snippet, it appears you might want to generate a command for an input named "option0". However, the HTML snippet doesn't contain an input field with the name "option0" to provide a specific command like those mentioned (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more details about the type of input field (e.g., text, checkbox, radio, select, range) for "option0" or clarify the task you'd like to accomplish? This will help in generating the correct command.
Failed to execute an action Given the provided input name and HTML snippet, it appears you might want to generate a command for an input named "option0". However, the HTML snippet doesn't contain an input field with the name "option0" to provide a specific command like those mentioned (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more details about the type of input field (e.g., text, checkbox, radio, select, range) for "option0" or clarify the task you'd like to accomplish? This will help in generating the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like you're looking to generate a command for an unspecified action on a given input named "option1" within a form element in an HTML snippet. Unfortunately, the HTML provided doesn't contain a direct reference to an input element named "option1", nor does it show the types of inputs available (e.g., text, checkbox, radio, select, range) for this specific name. Without knowing the type of input corresponding to "option1" or its available values, it's not possible to generate a precise command. 

Could you please provide more details about the input type and the action you wish to perform on "option1"? This could include whether "option1" is a text field, checkbox, radio button, select dropdown, or range input, and what value you'd like to set it to if applicable.
Failed to execute an action It seems like you're looking to generate a command for an unspecified action on a given input named "option1" within a form element in an HTML snippet. Unfortunately, the HTML provided doesn't contain a direct reference to an input element named "option1", nor does it show the types of inputs available (e.g., text, checkbox, radio, select, range) for this specific name. Without knowing the type of input corresponding to "option1" or its available values, it's not possible to generate a precise command. 

Could you please provide more details about the input type and the action you wish to perform on "option1"? This could include whether "option1" is a text field, checkbox, radio button, select dropdown, or range input, and what value you'd like to set it to if applicable., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the HTML provided does not contain an input element named "option2" to directly apply a command like modify_text, modify_checkbox, modify_radio, modify_select, or modify_range on. The content provided seems to be instructional in nature and does not provide an interactive element regarding "option2". 

Could you please provide more details or the relevant portion of the HTML containing the input named "option2"? This would enable me to generate the appropriate command.
Failed to execute an action It seems like the HTML provided does not contain an input element named "option2" to directly apply a command like modify_text, modify_checkbox, modify_radio, modify_select, or modify_range on. The content provided seems to be instructional in nature and does not provide an interactive element regarding "option2". 

Could you please provide more details or the relevant portion of the HTML containing the input named "option2"? This would enable me to generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided input and HTML snippet, it appears that the snippet does not directly correlate with a form interaction such as selecting an option or filling out a field. The information provided is insufficient to generate a specific command for modifying a form input without additional context about the form inputs available (like radio buttons, select options, checkbox, etc.) related to 'option3'.

If 'option3' corresponds to a specific type of input not shown in the snippet, could you please provide more detail on the type of input (checkbox, radio button, text input, etc.) and the desired value or state you wish to set for 'option3'? This would enable me to generate an accurate command based on the list of valid commands you've provided.
Failed to execute an action Given the provided input and HTML snippet, it appears that the snippet does not directly correlate with a form interaction such as selecting an option or filling out a field. The information provided is insufficient to generate a specific command for modifying a form input without additional context about the form inputs available (like radio buttons, select options, checkbox, etc.) related to 'option3'.

If 'option3' corresponds to a specific type of input not shown in the snippet, could you please provide more detail on the type of input (checkbox, radio button, text input, etc.) and the desired value or state you wish to set for 'option3'? This would enable me to generate an accurate command based on the list of valid commands you've provided., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet lacks form elements (like radio buttons, checkboxes, or select menus) associated with the input name "option4." Due to the incomplete information, I can't generate a specific command to modify an input named "option4" as requested. If you provide details about the type of input (e.g., checkbox, radio, select) and the available options for "option4," I'd be happy to help with a more accurate response.
Failed to execute an action I'm sorry, but the provided HTML snippet lacks form elements (like radio buttons, checkboxes, or select menus) associated with the input name "option4." Due to the incomplete information, I can't generate a specific command to modify an input named "option4" as requested. If you provide details about the type of input (e.g., checkbox, radio, select) and the available options for "option4," I'd be happy to help with a more accurate response., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33974 <-> row_number: 61
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Could you please provide the complete HTML code or specify what actions you'd like to accomplish based on the provided HTML snippet? The snippet contains only part of the form and lacks the input element related directly to "option0".
Failed to execute an action Could you please provide the complete HTML code or specify what actions you'd like to accomplish based on the provided HTML snippet? The snippet contains only part of the form and lacks the input element related directly to "option0"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option1', 'Highly Likely')


However, if "option1" were to be a part of a set of radio buttons or a select dropdown for choosing the likelihood (e.g., "Highly Likely", "Somewhat Likely", "Unlikely"), and assuming "Highly Likely" is one of the possible values to set, then commands might look like this:

For a radio button:

python
self.actions.modify_radio('option1', 'Highly Likely')


For a select dropdown:

python
self.actions.modify_select('option1', 'Highly Likely')


Unfortunately, without a detailed view of
Failed to execute an action self.actions.modify_text('option1', 'Highly Likely')


However, if "option1" were to be a part of a set of radio buttons or a select dropdown for choosing the likelihood (e.g., "Highly Likely", "Somewhat Likely", "Unlikely"), and assuming "Highly Likely" is one of the possible values to set, then commands might look like this:

For a radio button:

python
self.actions.modify_radio('option1', 'Highly Likely')


For a select dropdown:

python
self.actions.modify_select('option1', 'Highly Likely')


Unfortunately, without a detailed view of, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like there's a missing portion of HTML code that specifically relates to an input named "option2." The provided HTML snippet contains an introduction and instructions for a form, but does not include the form inputs themselves. Without the actual input component associated with "option2" (such as a checkbox, radio button, text field, etc.), I cannot generate a precise command. 

Please provide the relevant HTML code that includes the "option2" input element or more context about what "option2" refers to in the form.
Failed to execute an action It seems like there's a missing portion of HTML code that specifically relates to an input named "option2." The provided HTML snippet contains an introduction and instructions for a form, but does not include the form inputs themselves. Without the actual input component associated with "option2" (such as a checkbox, radio button, text field, etc.), I cannot generate a precise command. 

Please provide the relevant HTML code that includes the "option2" input element or more context about what "option2" refers to in the form., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a misunderstanding regarding the provided input. The given HTML snippet and the request lack sufficient information for generating a specific modification command. To generate an accurate command, detailed insights into the form elements related to "option3" are necessary, especially those that dictate the input type (e.g., select, radio, checkbox) and the options or value to be modified.

Without details on what "option3" specifically refers to within the form (such as a checkbox, radio button, select dropdown, or other input types), and the value or modification intended, it's not possible to generate an accurate command. Please provide the type of input "option3" refers to, and the action or value you wish to assign or modify for "option3".
Failed to execute an action It seems there's a misunderstanding regarding the provided input. The given HTML snippet and the request lack sufficient information for generating a specific modification command. To generate an accurate command, detailed insights into the form elements related to "option3" are necessary, especially those that dictate the input type (e.g., select, radio, checkbox) and the options or value to be modified.

Without details on what "option3" specifically refers to within the form (such as a checkbox, radio button, select dropdown, or other input types), and the value or modification intended, it's not possible to generate an accurate command. Please provide the type of input "option3" refers to, and the action or value you wish to assign or modify for "option3"., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the provided HTML snippet does not contain an input field named "option4" or any form controls such as `<input>`, `<select>`, `<textarea>`, etc., that can be directly manipulated with the commands you provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more detailed HTML code including the form control for "option4" or clarify the type of input and the corresponding manipulation required for "option4".
Failed to execute an action It seems the provided HTML snippet does not contain an input field named "option4" or any form controls such as `<input>`, `<select>`, `<textarea>`, etc., that can be directly manipulated with the commands you provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Please provide more detailed HTML code including the form control for "option4" or clarify the type of input and the corresponding manipulation required for "option4"., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34071 <-> row_number: 158
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 158 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Hard to tell', 'Hard to tell'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet doesn't offer a clear indication of what form elements exist related to `option0`, nor does it specify what type of input `option0` corresponds to (e.g., text, radio button, checkbox, etc.).

Given the context provided, it's not possible to generate a specific command without seeing the pertinent HTML input elements related to `option0`.

If you could provide more details regarding the type of input `option0` is (such as a text field, checkbox, select dropdown), or more of the HTML code that shows the input element for `option0`, I would be able to provide a more accurate command.
Failed to execute an action It seems like the provided HTML snippet doesn't offer a clear indication of what form elements exist related to `option0`, nor does it specify what type of input `option0` corresponds to (e.g., text, radio button, checkbox, etc.).

Given the context provided, it's not possible to generate a specific command without seeing the pertinent HTML input elements related to `option0`.

If you could provide more details regarding the type of input `option0` is (such as a text field, checkbox, select dropdown), or more of the HTML code that shows the input element for `option0`, I would be able to provide a more accurate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the HTML snippet provided, there isn't a clear indication of what specific form input element (like text input, radio button, checkbox, select dropdown box, etc.) is associated with the input name "option1". The provided HTML focuses on the introductory and instructional text of the form without showing the actual input elements where participants can select or enter their response.

To generate a command to modify a form input, I would need more information about the type of input associated with "option1" (e.g., is it a checkbox, text input, radio button, etc.). If you could provide details about the specific form input element for "option1" within the form or any additional context, I could better assist with generating the appropriate command.
Failed to execute an action Given the HTML snippet provided, there isn't a clear indication of what specific form input element (like text input, radio button, checkbox, select dropdown box, etc.) is associated with the input name "option1". The provided HTML focuses on the introductory and instructional text of the form without showing the actual input elements where participants can select or enter their response.

To generate a command to modify a form input, I would need more information about the type of input associated with "option1" (e.g., is it a checkbox, text input, radio button, etc.). If you could provide details about the specific form input element for "option1" within the form or any additional context, I could better assist with generating the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I need more details on how to select 'option2' because the provided HTML snippet does not include an input field named 'option2' or any identifiable form controls related to it. Could you please provide the relevant part of the HTML?
Failed to execute an action I need more details on how to select 'option2' because the provided HTML snippet does not include an input field named 'option2' or any identifiable form controls related to it. Could you please provide the relevant part of the HTML?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Your provided snippet does not contain an input element with the name "option3" to demonstrate a modification action (like a checkbox, radio button, select box, etc.). Could you please provide more context or details on what type of input "option3" is and its expected modification? This information is crucial to generate a precise command.
Failed to execute an action Your provided snippet does not contain an input element with the name "option3" to demonstrate a modification action (like a checkbox, radio button, select box, etc.). Could you please provide more context or details on what type of input "option3" is and its expected modification? This information is crucial to generate a precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('input_name', 'input_value')` or `self.actions.modify_checkbox('input_name', 'input_value')`.

Please provide more detailed information or the specific section of the HTML code that includes the input element related to "option4."
Failed to execute an action self.actions.modify_radio('input_name', 'input_value')` or `self.actions.modify_checkbox('input_name', 'input_value')`.

Please provide more detailed information or the specific section of the HTML code that includes the input element related to "option4.", error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34037 <-> row_number: 124
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 124 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Hard to tell'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Unlikely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is a mistake in my previous response as the provided HTML snippet does not include form elements associated with the input name "option0" that you want to modify. Without seeing the specific input elements tied to "option0" (such as checkboxes, radio buttons, select dropdowns, etc.), I cannot generate a valid command. Could you please provide a detailed snippet of the form elements related to "option0" so I can assist you accurately?
Failed to execute an action It appears there is a mistake in my previous response as the provided HTML snippet does not include form elements associated with the input name "option0" that you want to modify. Without seeing the specific input elements tied to "option0" (such as checkboxes, radio buttons, select dropdowns, etc.), I cannot generate a valid command. Could you please provide a detailed snippet of the form elements related to "option0" so I can assist you accurately?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you're requesting assistance with a form input modification based on the provided HTML snippet. However, the snippet lacks the complete information about the input fields available and their corresponding types (e.g., checkbox, radio, text). To accurately generate a command using the methods provided earlier (e.g., `modify_text`, `modify_checkbox`, etc.), detailed information about the "option1" input is needed. Can you provide the specific details for the "option1" input, such as its type (checkbox, radio, select, range, or text) and the value you wish to assign to it?
Failed to execute an action It appears you're requesting assistance with a form input modification based on the provided HTML snippet. However, the snippet lacks the complete information about the input fields available and their corresponding types (e.g., checkbox, radio, text). To accurately generate a command using the methods provided earlier (e.g., `modify_text`, `modify_checkbox`, etc.), detailed information about the "option1" input is needed. Can you provide the specific details for the "option1" input, such as its type (checkbox, radio, select, range, or text) and the value you wish to assign to it?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To provide a command based on the HTML snippet you've provided, more specific information is needed, such as the type of input (checkbox, radio, select, text, range) associated with "option2" and how you intend to modify it (the value or action you aim to apply). Unfortunately, the provided HTML snippet lacks these details. Could you please provide the input type and the intended modification for "option2"?
Failed to execute an action To provide a command based on the HTML snippet you've provided, more specific information is needed, such as the type of input (checkbox, radio, select, text, range) associated with "option2" and how you intend to modify it (the value or action you aim to apply). Unfortunately, the provided HTML snippet lacks these details. Could you please provide the input type and the intended modification for "option2"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears the provided HTML snippet is incomplete and does not include an input element with the name "option3" that you're asking to modify. Without knowing the type of input (e.g., text, checkbox, radio, select, range) associated with "option3" or the context in which it should be modified, generating an accurate command is not possible.

Please provide the complete details or context for the input named "option3", including its type and the modification you desire, so an appropriate command can be generated.
Failed to execute an action It appears the provided HTML snippet is incomplete and does not include an input element with the name "option3" that you're asking to modify. Without knowing the type of input (e.g., text, checkbox, radio, select, range) associated with "option3" or the context in which it should be modified, generating an accurate command is not possible.

Please provide the complete details or context for the input named "option3", including its type and the modification you desire, so an appropriate command can be generated., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is missing information regarding the HTML input elements related to `option4`. To accurately generate a command to modify an HTML page, the HTML code snippet should contain an input or selection element with `name="option4"` and associated options or values. Without this detail, it's not possible to provide a specific command.

Could you please provide the HTML code snippet containing the input element for `option4`? This would include details such as the type of input (e.g., checkbox, radio, select, text, or range) and its options or allowable values.
Failed to execute an action It appears there is missing information regarding the HTML input elements related to `option4`. To accurately generate a command to modify an HTML page, the HTML code snippet should contain an input or selection element with `name="option4"` and associated options or values. Without this detail, it's not possible to provide a specific command.

Could you please provide the HTML code snippet containing the input element for `option4`? This would include details such as the type of input (e.g., checkbox, radio, select, text, or range) and its options or allowable values., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34010 <-> row_number: 97
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 97 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not include any input element related to "option0". From what is shared, it's challenging to generate a specific command, as the needed portions of the form, especially where "option0" is mentioned as an input name, are missing.

To generate an accurate command for modifying an input named "option0", I would need the complete context or the specific type of input (e.g., text, checkbox, radio, select, range) and the desired value to set. If possible, please provide a complete or more detailed snippet that includes the input with name "option0" and some indication of what kind of modification is intended.
Failed to execute an action It appears that the provided HTML snippet does not include any input element related to "option0". From what is shared, it's challenging to generate a specific command, as the needed portions of the form, especially where "option0" is mentioned as an input name, are missing.

To generate an accurate command for modifying an input named "option0", I would need the complete context or the specific type of input (e.g., text, checkbox, radio, select, range) and the desired value to set. If possible, please provide a complete or more detailed snippet that includes the input with name "option0" and some indication of what kind of modification is intended., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you expect a command to be generated based on the given HTML snippet and input name "option1", however, the provided HTML does not contain an input field or form element specifically named "option1" that can be directly referred to for modifying. The snippet mostly contains instructions and headings with no form controls (like input, select, checkbox, radio buttons) related to "option1".

To generate an accurate command, more detailed information or a corrected snippet including the form control for "option1" is needed. Please provide the HTML code that includes the input, select, checkbox, or another element with the name "option1".
Failed to execute an action It appears you expect a command to be generated based on the given HTML snippet and input name "option1", however, the provided HTML does not contain an input field or form element specifically named "option1" that can be directly referred to for modifying. The snippet mostly contains instructions and headings with no form controls (like input, select, checkbox, radio buttons) related to "option1".

To generate an accurate command, more detailed information or a corrected snippet including the form control for "option1" is needed. Please provide the HTML code that includes the input, select, checkbox, or another element with the name "option1"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not show options related to the input name "option2." Without specific options present in the HTML relating to "option2," generating a precise command is challenging. Please provide the complete section of the HTML that includes the input options for "option2."
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not show options related to the input name "option2." Without specific options present in the HTML relating to "option2," generating a precise command is challenging. Please provide the complete section of the HTML that includes the input options for "option2.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the HTML provided contains instructions for a form asking users to choose how likely an author belongs to a given in-group based on a comment. However, the HTML snippet does not contain a form input or selection element (such as radio buttons or a select dropdown) for the input name "option3" that you provided.

To generate a valid command from the previous instructions, I would need to see the actual form element associated with "option3" (e.g., a set of radio buttons, a dropdown select, or another input type). This element would define what type of input "option3" represents and what values can be assigned to it.
Failed to execute an action It appears that the HTML provided contains instructions for a form asking users to choose how likely an author belongs to a given in-group based on a comment. However, the HTML snippet does not contain a form input or selection element (such as radio buttons or a select dropdown) for the input name "option3" that you provided.

To generate a valid command from the previous instructions, I would need to see the actual form element associated with "option3" (e.g., a set of radio buttons, a dropdown select, or another input type). This element would define what type of input "option3" represents and what values can be assigned to it., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_select('option4', 'Highly Likely')


This is an example based on the assumption that "option4" is a dropdown where 'Highly Likely' is one of the options to select. Please provide more specific details or correct HTML form element details if "option4" refers to a different kind of input.
Failed to execute an action self.actions.modify_select('option4', 'Highly Likely')


This is an example based on the assumption that "option4" is a dropdown where 'Highly Likely' is one of the options to select. Please provide more specific details or correct HTML form element details if "option4" refers to a different kind of input., error: invalid syntax (<string>, line 4)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33975 <-> row_number: 62
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Hard to tell', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I would need the specific options available for input "option0" to generate an accurate command for modifying the HTML page. Could you please provide more details about the options associated with "option0"?
Failed to execute an action I would need the specific options available for input "option0" to generate an accurate command for modifying the HTML page. Could you please provide more details about the options associated with "option0"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command based on the given input name "option1" and the provided HTML snippet, additional context or details about the type of input (such as checkbox, select, radio, text, or range) for "option1" would be necessary since the HTML snippet does not explicitly include an input element with the name "option1". If you could provide more details about the nature of the input or the rest of the form, I would be able to generate an appropriate command.
Failed to execute an action To generate a command based on the given input name "option1" and the provided HTML snippet, additional context or details about the type of input (such as checkbox, select, radio, text, or range) for "option1" would be necessary since the HTML snippet does not explicitly include an input element with the name "option1". If you could provide more details about the nature of the input or the rest of the form, I would be able to generate an appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the HTML snippet provided does not include the actual form elements related to the input name "option2". Without specific form fields (like radio buttons, checkboxes, select dropdowns, etc.) associated with "option2", I cannot generate an exact command from the list provided. Please ensure to include the section of the HTML containing the input elements associated with "option2" for a more precise guidance.
Failed to execute an action It seems the HTML snippet provided does not include the actual form elements related to the input name "option2". Without specific form fields (like radio buttons, checkboxes, select dropdowns, etc.) associated with "option2", I cannot generate an exact command from the list provided. Please ensure to include the section of the HTML containing the input elements associated with "option2" for a more precise guidance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not include an input element with the name `option3`. Thus, I'm unable to generate a specific command to modify such an input without seeing its HTML code. Could you please provide the full HTML code for the input named `option3`?
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not include an input element with the name `option3`. Thus, I'm unable to generate a specific command to modify such an input without seeing its HTML code. Could you please provide the full HTML code for the input named `option3`?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry for any confusion, but without seeing the HTML input elements associated with "option4", I can't generate a precise command to modify it. Could you please provide more details about the input type for "option4"? Specifically, I need to know if it's a text, checkbox, radio button, select dropdown, or range input to give you the correct command.
Failed to execute an action I'm sorry for any confusion, but without seeing the HTML input elements associated with "option4", I can't generate a precise command to modify it. Could you please provide more details about the input type for "option4"? Specifically, I need to know if it's a text, checkbox, radio button, select dropdown, or range input to give you the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33953 <-> row_number: 40
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option0', 'Highly Likely')


If it's a radio button or a checkbox where you need to select an option labeled "Highly Likely", you would need the specific value associated with that option. Since I don't have those details, I'm providing a generic placeholder:

For a radio button:

python
self.actions.modify_radio('option0', 'value_for_highly_likely')


For a checkbox (assuming checking it means selecting "Highly Likely"):

python
self.actions.modify_checkbox('option0', 'on') 
Failed to execute an action self.actions.modify_text('option0', 'Highly Likely')


If it's a radio button or a checkbox where you need to select an option labeled "Highly Likely", you would need the specific value associated with that option. Since I don't have those details, I'm providing a generic placeholder:

For a radio button:

python
self.actions.modify_radio('option0', 'value_for_highly_likely')


For a checkbox (assuming checking it means selecting "Highly Likely"):

python
self.actions.modify_checkbox('option0', 'on') , error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems the provided HTML snippet does not include the input named "option1" or any inputs at all, which means I cannot generate a corresponding command without more details on the type of input (text, checkbox, radio, select, range) and the context where it is used. Could you provide more specifics or the relevant portion of the HTML code that includes the input you're asking about?
Failed to execute an action It seems the provided HTML snippet does not include the input named "option1" or any inputs at all, which means I cannot generate a corresponding command without more details on the type of input (text, checkbox, radio, select, range) and the context where it is used. Could you provide more specifics or the relevant portion of the HTML code that includes the input you're asking about?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided information and the structure of the HTML code snippet, it appears that the actual input field or selection options for "option2" were not included in the excerpt you provided. To generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the specific input element (text, checkbox, radio button, dropdown, or range) associated with "option2" in the HTML code. 

Could you please provide more detail or the part of the HTML code that includes the input element for "option2"?
Failed to execute an action Given the provided information and the structure of the HTML code snippet, it appears that the actual input field or selection options for "option2" were not included in the excerpt you provided. To generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the specific input element (text, checkbox, radio button, dropdown, or range) associated with "option2" in the HTML code. 

Could you please provide more detail or the part of the HTML code that includes the input element for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, your instruction seems to request a decision but the HTML snippet provided does not include a form element (like input, select, checkbox, or radio button) directly related to an input named "option3". If you're looking for a command to fill or select an option for "option3" but haven't provided the specific HTML code for that input, it would be challenging to generate an accurate command.

However, if "option3" is supposed to be a type of input not shown (e.g., a radio button, checkbox, text input, etc.), you would usually look for the specific HTML tag that corresponds to this input. For example, if "option3" was a radio button, you would look for an input tag with `name="option3"`.

Since there's not enough detail to generate an accurate command, I recommend providing the exact HTML code snippet that includes the "option3" input or more context about what "option3" is supposed to represent.
Failed to execute an action Based on the provided details, your instruction seems to request a decision but the HTML snippet provided does not include a form element (like input, select, checkbox, or radio button) directly related to an input named "option3". If you're looking for a command to fill or select an option for "option3" but haven't provided the specific HTML code for that input, it would be challenging to generate an accurate command.

However, if "option3" is supposed to be a type of input not shown (e.g., a radio button, checkbox, text input, etc.), you would usually look for the specific HTML tag that corresponds to this input. For example, if "option3" was a radio button, you would look for an input tag with `name="option3"`.

Since there's not enough detail to generate an accurate command, I recommend providing the exact HTML code snippet that includes the "option3" input or more context about what "option3" is supposed to represent., error: unterminated string literal (detected at line 5) (<string>, line 5)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet does not contain an input element with the name "option4" or any indication of the type of input (such as text, checkbox, radio, select, or range inputs) associated with "option4". Could you please provide more information or clarify the type of input and its corresponding HTML code? This will enable me to generate the correct command.
Failed to execute an action I'm sorry, but the provided HTML snippet does not contain an input element with the name "option4" or any indication of the type of input (such as text, checkbox, radio, select, or range inputs) associated with "option4". Could you please provide more information or clarify the type of input and its corresponding HTML code? This will enable me to generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34007 <-> row_number: 94
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 94 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, it seems like there's no specific HTML form input elements shown for the input named "option0". The excerpt only includes some headings and a paragraph without showing any `<input>`, `<select>`, or similar elements that would allow for an actionable command to modify a page element associated with "option0".

Could you please provide more details or clarify the type of input associated with "option0"? This information is necessary for generating the appropriate command to modify the HTML page as per your requirements.
Failed to execute an action Based on the provided details, it seems like there's no specific HTML form input elements shown for the input named "option0". The excerpt only includes some headings and a paragraph without showing any `<input>`, `<select>`, or similar elements that would allow for an actionable command to modify a page element associated with "option0".

Could you please provide more details or clarify the type of input associated with "option0"? This information is necessary for generating the appropriate command to modify the HTML page as per your requirements., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the input and the HTML snippet provided, it appears that the specific input element related to "option1" is not included in the snippet you've shared. The HTML provided describes a form with instructions but does not contain any input elements such as checkboxes, radio buttons, text inputs, etc., that are named "option1". 

To accurately generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the HTML code that includes the `<input>` or other form element with the name "option1". This would help me understand the type of input and the appropriate command to modify it. 

Could you please provide the relevant part of the HTML code or clarify the type of input associated with "option1"?
Failed to execute an action Given the input and the HTML snippet provided, it appears that the specific input element related to "option1" is not included in the snippet you've shared. The HTML provided describes a form with instructions but does not contain any input elements such as checkboxes, radio buttons, text inputs, etc., that are named "option1". 

To accurately generate a command from the list provided (modify_text, modify_checkbox, modify_radio, modify_select, modify_range), I would need to see the HTML code that includes the `<input>` or other form element with the name "option1". This would help me understand the type of input and the appropriate command to modify it. 

Could you please provide the relevant part of the HTML code or clarify the type of input associated with "option1"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there was an oversight, as the provided HTML does not include form inputs related to "option2" that you've mentioned. Could you please provide the relevant segment of the HTML code that includes input elements, specifically those related to "option2"? This information will help me generate the correct command to modify the input as you wish.
Failed to execute an action It seems there was an oversight, as the provided HTML does not include form inputs related to "option2" that you've mentioned. Could you please provide the relevant segment of the HTML code that includes input elements, specifically those related to "option2"? This information will help me generate the correct command to modify the input as you wish., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option3', '<appropriate_value>')


For a select input (if applicable):

self.actions.modify_select('option3', '<appropriate_option_value>')


However, without the exact HTML structure for "option3," this remains a guess.

Please provide the complete HTML snippet including the input for "option3" or specify its type and expected values for a more accurate answer.
Failed to execute an action self.actions.modify_radio('option3', '<appropriate_value>')


For a select input (if applicable):

self.actions.modify_select('option3', '<appropriate_option_value>')


However, without the exact HTML structure for "option3," this remains a guess.

Please provide the complete HTML snippet including the input for "option3" or specify its type and expected values for a more accurate answer., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no HTML code provided that contains input elements with the name "option4". However, if you're looking to generate a command for modifying an input named "option4", you would generally need to know the input type (text, checkbox, radio, select, range) to use the correct method.

Without specific details on the type or choices related to "option4", I can't generate an accurate command. If you can provide more details or the rest of the HTML code that includes the "option4" input, I would be able to assist better.
Failed to execute an action It appears there is no HTML code provided that contains input elements with the name "option4". However, if you're looking to generate a command for modifying an input named "option4", you would generally need to know the input type (text, checkbox, radio, select, range) to use the correct method.

Without specific details on the type or choices related to "option4", I can't generate an accurate command. If you can provide more details or the rest of the HTML code that includes the "option4" input, I would be able to assist better., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34027 <-> row_number: 114
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 114 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Hard to tell', 'Hard to tell', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like there's a misunderstanding. Based on the provided HTML snippet, there's no explicit input field or form control (like radio buttons or select dropdowns) associated with the input name "option0" directly mentioned in the content you've shared. The snippet mostly contains instructional text without an actual form input example for choosing an option.

Given the absence of form controls in the snippet, I can't generate a specific command without seeing the actual input field (e.g., radio, select) associated with "option0". If you can provide that part of the HTML or clarify the type of input and the options associated with "option0", that would be helpful for generating the appropriate command.
Failed to execute an action It seems like there's a misunderstanding. Based on the provided HTML snippet, there's no explicit input field or form control (like radio buttons or select dropdowns) associated with the input name "option0" directly mentioned in the content you've shared. The snippet mostly contains instructional text without an actual form input example for choosing an option.

Given the absence of form controls in the snippet, I can't generate a specific command without seeing the actual input field (e.g., radio, select) associated with "option0". If you can provide that part of the HTML or clarify the type of input and the options associated with "option0", that would be helpful for generating the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's not enough HTML provided to identify the type of input (e.g., checkbox, radio, select) related to "option1" and what specific command should be generated. Please provide more details about the input type or further HTML code to proceed effectively.
Failed to execute an action It appears there's not enough HTML provided to identify the type of input (e.g., checkbox, radio, select) related to "option1" and what specific command should be generated. Please provide more details about the input type or further HTML code to proceed effectively., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option2', '1')


Or if it's a select menu with "Highly Likely" as
Failed to execute an action self.actions.modify_radio('option2', '1')


Or if it's a select menu with "Highly Likely" as, error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML code snippet is incomplete and does not include form inputs (e.g., checkboxes, radio buttons, select dropdowns, text inputs) directly related to the input name "option3" you've mentioned. To generate a command, I would need more information about the type of input associated with "option3" (whether it's a text input, a checkbox, a radio button, a select dropdown, or a range input), and ideally, the full relevant HTML markup that includes the form control for "option3".

Could you please provide more details or a more complete HTML snippet that includes the form input for "option3"? This will help in generating the correct command to modify the input.
Failed to execute an action It seems like the provided HTML code snippet is incomplete and does not include form inputs (e.g., checkboxes, radio buttons, select dropdowns, text inputs) directly related to the input name "option3" you've mentioned. To generate a command, I would need more information about the type of input associated with "option3" (whether it's a text input, a checkbox, a radio button, a select dropdown, or a range input), and ideally, the full relevant HTML markup that includes the form control for "option3".

Could you please provide more details or a more complete HTML snippet that includes the form input for "option3"? This will help in generating the correct command to modify the input., error: unmatched ')' (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's a misunderstanding due to the incomplete information provided. If you're looking for a way to generate a command based on the input name "option4", it's necessary to know the type of input (e.g., text, checkbox, radio, select, range) and its context within the provided HTML. However, the excerpt given doesn't clearly include an input with the name "option4" or specify its type.

For accurate assistance, I would need more details, specifically:

1. The type of input associated with "option4" (i.e., is it a checkbox, radio button, text input, selection dropdown, or range slider?).
2. The intended value or modification for "option4".

With this information, I could generate the appropriate command.
Failed to execute an action It appears there's a misunderstanding due to the incomplete information provided. If you're looking for a way to generate a command based on the input name "option4", it's necessary to know the type of input (e.g., text, checkbox, radio, select, range) and its context within the provided HTML. However, the excerpt given doesn't clearly include an input with the name "option4" or specify its type.

For accurate assistance, I would need more details, specifically:

1. The type of input associated with "option4" (i.e., is it a checkbox, radio button, text input, selection dropdown, or range slider?).
2. The intended value or modification for "option4".

With this information, I could generate the appropriate command., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33991 <-> row_number: 78
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option0', 'Highly Likely')


For accuracy, please provide the corresponding HTML input elements for "option0".
Failed to execute an action self.actions.modify_radio('option0', 'Highly Likely')


For accuracy, please provide the corresponding HTML input elements for "option0"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, it appears you may have intended to share more information or a specific set of options related to the 'option1' input. However, without seeing an input element named 'option1' or related options in the provided HTML, it's not entirely clear how you expect it to be modified.

Could you please provide the specific options or the detailed part of the HTML where 'option1' is clearly defined as an input element (like a text input, radio button, or select dropdown)? That would help generate the accurate command to modify it.
Failed to execute an action Based on the provided HTML snippet, it appears you may have intended to share more information or a specific set of options related to the 'option1' input. However, without seeing an input element named 'option1' or related options in the provided HTML, it's not entirely clear how you expect it to be modified.

Could you please provide the specific options or the detailed part of the HTML where 'option1' is clearly defined as an input element (like a text input, radio button, or select dropdown)? That would help generate the accurate command to modify it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet and the task of generating a command for modifying an input named "option2", there is insufficient information in the HTML snippet to identify the specific HTML input element associated with "option2." The snippet mainly contains instructions without any form input elements related to "option2".

To generate a valid command for modifying an input named "option2", additional details about the input element (such as its type and possible values) are required. If "option2" refers to a radio button, checkbox, text field, select dropdown, or range slider, the command would depend on that specific type. 

Please provide additional details or the complete HTML form segment that includes the input named "option2" for accurate assistance.
Failed to execute an action Given the provided HTML snippet and the task of generating a command for modifying an input named "option2", there is insufficient information in the HTML snippet to identify the specific HTML input element associated with "option2." The snippet mainly contains instructions without any form input elements related to "option2".

To generate a valid command for modifying an input named "option2", additional details about the input element (such as its type and possible values) are required. If "option2" refers to a radio button, checkbox, text field, select dropdown, or range slider, the command would depend on that specific type. 

Please provide additional details or the complete HTML form segment that includes the input named "option2" for accurate assistance., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is a misunderstanding. The provided HTML excerpt does not include an input field named "option3" for me to generate a command to modify it. Please, could you provide the section of the HTML code where the input named "option3" is defined? This would include its type (e.g., text, checkbox, radio, select, range) so that I can generate an accurate command.
Failed to execute an action It appears there is a misunderstanding. The provided HTML excerpt does not include an input field named "option3" for me to generate a command to modify it. Please, could you provide the section of the HTML code where the input named "option3" is defined? This would include its type (e.g., text, checkbox, radio, select, range) so that I can generate an accurate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there is an incomplete HTML provided, which does not include the specific input named "option4" to modify. Without complete information including the element associated with 'option4' (whether it's a text input, checkbox, radio button, select dropdown, or a range slider), I can't generate an accurate command. Could you provide details about the 'option4' input type and the action you'd like to perform on it?
Failed to execute an action It seems there is an incomplete HTML provided, which does not include the specific input named "option4" to modify. Without complete information including the element associated with 'option4' (whether it's a text input, checkbox, radio button, select dropdown, or a range slider), I can't generate an accurate command. Could you provide details about the 'option4' input type and the action you'd like to perform on it?, error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33957 <-> row_number: 44
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain a complete form input related to "option0", nor does it actually include an input tag for a selection to be made. Therefore, I cannot generate a specific command such as modify_text, modify_checkbox, modify_radio, modify_select, or modify_range without the relevant input field structure.

Could you provide more details about the input you would like to modify or ensure the HTML includes the form field related to "option0"? This would help in generating the precise command you're asking for.
Failed to execute an action It appears that the provided HTML snippet does not contain a complete form input related to "option0", nor does it actually include an input tag for a selection to be made. Therefore, I cannot generate a specific command such as modify_text, modify_checkbox, modify_radio, modify_select, or modify_range without the relevant input field structure.

Could you provide more details about the input you would like to modify or ensure the HTML includes the form field related to "option0"? This would help in generating the precise command you're asking for., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems you were expecting a continuation of a form for selecting an option based on a scenario or question given. However, the provided HTML snippet is incomplete, and it doesn't contain specific input elements (like radio buttons, dropdowns, etc.) for which you are seeking a command. 

Please provide the complete HTML code snippet including the elements corresponding to "option1" to generate a valid command.
Failed to execute an action It seems you were expecting a continuation of a form for selecting an option based on a scenario or question given. However, the provided HTML snippet is incomplete, and it doesn't contain specific input elements (like radio buttons, dropdowns, etc.) for which you are seeking a command. 

Please provide the complete HTML code snippet including the elements corresponding to "option1" to generate a valid command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio` or `self.actions.modify_select` wouldn't be accurate or possible.
Failed to execute an action self.actions.modify_radio` or `self.actions.modify_select` wouldn't be accurate or possible., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I apologize for any confusion, but it seems the provided HTML snippet is incomplete and does not include the actual form elements such as radio buttons, checkboxes, or select options that correspond to the input name "option3". Could you please provide the complete HTML code including the element with the name "option3"? This will help me give a more accurate command to modify the input.
Failed to execute an action I apologize for any confusion, but it seems the provided HTML snippet is incomplete and does not include the actual form elements such as radio buttons, checkboxes, or select options that correspond to the input name "option3". Could you please provide the complete HTML code including the element with the name "option3"? This will help me give a more accurate command to modify the input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_text('option4', 'input_value')` or similar.

Please provide the specific HTML `<input>` element or further details on what "option4" refers to in the provided HTML code so I can generate the appropriate command.
Failed to execute an action self.actions.modify_text('option4', 'input_value')` or similar.

Please provide the specific HTML `<input>` element or further details on what "option4" refers to in the provided HTML code so I can generate the appropriate command., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33929 <-> row_number: 16
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Likely', ''], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided details, it appears you're seeking to generate a command to modify an input element with the name "option0." However, the HTML snippet provided lacks the definition of an input element (such as <input>, <select>, or similar) with the name "option0." For a precise command, the exact type of input (text, checkbox, radio, select, range) and intended modification value are required.

Could you provide more details or clarify the type of input for "option0" and the value or action you'd like to apply? This would enable me to generate the correct command based on the input's characteristics and your modification requirements.
Failed to execute an action Based on the provided details, it appears you're seeking to generate a command to modify an input element with the name "option0." However, the HTML snippet provided lacks the definition of an input element (such as <input>, <select>, or similar) with the name "option0." For a precise command, the exact type of input (text, checkbox, radio, select, range) and intended modification value are required.

Could you provide more details or clarify the type of input for "option0" and the value or action you'd like to apply? This would enable me to generate the correct command based on the input's characteristics and your modification requirements., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information necessary to generate a command based on the provided HTML and input name 'option1'. The given snippet does not contain input fields related to 'option1', nor does it provide options (like radio buttons, checkboxes, or a select dropdown) that would allow assigning a specific command for modification. Additional details or a more complete section of the HTML content would be required to accurately generate a command.
Failed to execute an action It appears there's missing information necessary to generate a command based on the provided HTML and input name 'option1'. The given snippet does not contain input fields related to 'option1', nor does it provide options (like radio buttons, checkboxes, or a select dropdown) that would allow assigning a specific command for modification. Additional details or a more complete section of the HTML content would be required to accurately generate a command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided context, it appears that there is not enough HTML content related to input elements named "option2" to derive a meaningful command from the list of commands I can generate (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more HTML content related to the input element named "option2"?
Failed to execute an action Based on the provided context, it appears that there is not enough HTML content related to input elements named "option2" to derive a meaningful command from the list of commands I can generate (modify_text, modify_checkbox, modify_radio, modify_select, modify_range).

Could you please provide more HTML content related to the input element named "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet is not complete and does not contain an input element with the name "option3" that I can give a specific command for. Please provide the complete HTML that includes the input element named "option3" so that I can generate the appropriate command.
Failed to execute an action It appears that the provided HTML snippet is not complete and does not contain an input element with the name "option3" that I can give a specific command for. Please provide the complete HTML that includes the input element named "option3" so that I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information regarding the form elements related to the input name "option4", such as <input> or <select> tags that define what kind of form control is associated with "option4". Without this information, I cannot generate a specific command as requested.

To give a useful example, I would need to know if "option4" is associated with a checkbox, radio button, text input, range slider, or select/dropdown menu in the HTML form provided. Further context on how "option4" is structured within the form (i.e., part of a series of choices or a stand-alone decision) would also be important.

Could you provide the relevant HTML segment including the form control for "option4"?
Failed to execute an action It appears there's missing information regarding the form elements related to the input name "option4", such as <input> or <select> tags that define what kind of form control is associated with "option4". Without this information, I cannot generate a specific command as requested.

To give a useful example, I would need to know if "option4" is associated with a checkbox, radio button, text input, range slider, or select/dropdown menu in the HTML form provided. Further context on how "option4" is structured within the form (i.e., part of a series of choices or a stand-alone decision) would also be important.

Could you provide the relevant HTML segment including the form control for "option4"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34068 <-> row_number: 155
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 155 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not contain any form controls (like input, checkbox, radio button, etc.) specifically related to the input name "option0" you provided. The snippet is also incomplete, which makes it challenging to accurately generate a command.

To generate a valid command, I would need either the complete HTML form code containing the input named "option0" and its type (e.g., text, checkbox, radio, select, range) or a clear description of what type of input "option0" is supposed to be and how you intend to modify it (e.g., its value or selection state). 

Could you please provide more detailed information or the relevant part of the HTML code?
Failed to execute an action It appears that the provided HTML snippet does not contain any form controls (like input, checkbox, radio button, etc.) specifically related to the input name "option0" you provided. The snippet is also incomplete, which makes it challenging to accurately generate a command.

To generate a valid command, I would need either the complete HTML form code containing the input named "option0" and its type (e.g., text, checkbox, radio, select, range) or a clear description of what type of input "option0" is supposed to be and how you intend to modify it (e.g., its value or selection state). 

Could you please provide more detailed information or the relevant part of the HTML code?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet does not include form elements (input, select, checkbox, radio, etc.) corresponding to the "option1" input name. Please provide additional details or clarify the specific input you wish to modify within the given HTML context. Without seeing the form controls related to "option1", I cannot generate a precise command.
Failed to execute an action It seems like the provided HTML snippet does not include form elements (input, select, checkbox, radio, etc.) corresponding to the "option1" input name. Please provide additional details or clarify the specific input you wish to modify within the given HTML context. Without seeing the form controls related to "option1", I cannot generate a precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears you're looking for a command to modify an input named "option2", but there isn't enough information in the provided HTML snippet to determine the type of input or the available options. Could you provide more details on the input type (checkbox, radio, text, etc.) and the available options or more context in the HTML code? This information is necessary to generate the correct command.
Failed to execute an action It appears you're looking for a command to modify an input named "option2", but there isn't enough information in the provided HTML snippet to determine the type of input or the available options. Could you provide more details on the input type (checkbox, radio, text, etc.) and the available options or more context in the HTML code? This information is necessary to generate the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a misunderstanding in the request, as there is no actual input or form field related to "option3" shown in the provided HTML snippet. The snippet simply introduces instructions without showing a form field (such as a text box, radio button, checkbox, or dropdown menu) named "option3" to interact with. 

For a more accurate response, please include the part of the HTML code that contains the input named "option3", or describe the nature of the input (e.g., text, checkbox, radio button, select) so I can generate the appropriate command.
Failed to execute an action It seems there's a misunderstanding in the request, as there is no actual input or form field related to "option3" shown in the provided HTML snippet. The snippet simply introduces instructions without showing a form field (such as a text box, radio button, checkbox, or dropdown menu) named "option3" to interact with. 

For a more accurate response, please include the part of the HTML code that contains the input named "option3", or describe the nature of the input (e.g., text, checkbox, radio button, select) so I can generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there's a need for additional information to generate a specific command, as the provided HTML snippet does not contain input elements related to "option4". Could you please provide the relevant part of the HTML code that includes the input field named "option4"? This would typically involve a line of HTML with <input>, <select>, <textarea>, or another form element including the name "option4".
Failed to execute an action It seems there's a need for additional information to generate a specific command, as the provided HTML snippet does not contain input elements related to "option4". Could you please provide the relevant part of the HTML code that includes the input field named "option4"? This would typically involve a line of HTML with <input>, <select>, <textarea>, or another form element including the name "option4"., error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33914 <-> row_number: 1
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears the provided HTML snippet and the instruction to identify the input for "option0" is incomplete or lacks context regarding the options available for modification, such as checkboxes, radio buttons, or a select menu associated with "option0". Without further HTML code detailing the input element itself, it's challenging to generate a precise command. 

Can you provide more details or the specific part of the HTML code that includes "option0" so I can assist you appropriately?
Failed to execute an action It appears the provided HTML snippet and the instruction to identify the input for "option0" is incomplete or lacks context regarding the options available for modification, such as checkboxes, radio buttons, or a select menu associated with "option0". Without further HTML code detailing the input element itself, it's challenging to generate a precise command. 

Can you provide more details or the specific part of the HTML code that includes "option0" so I can assist you appropriately?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there's missing information to generate an accurate command based on the provided HTML snippet. The snippet provides an introduction to a form but does not show the actual input fields (e.g., radio buttons, checkboxes, select dropdowns) associated with the "option1" input name. 

For a more accurate response, please provide the HTML code that includes the actual input element named "option1" and its type (checkbox, radio, select, etc.), along with the options or values that are relevant to it.
Failed to execute an action It appears there's missing information to generate an accurate command based on the provided HTML snippet. The snippet provides an introduction to a form but does not show the actual input fields (e.g., radio buttons, checkboxes, select dropdowns) associated with the "option1" input name. 

For a more accurate response, please provide the HTML code that includes the actual input element named "option1" and its type (checkbox, radio, select, etc.), along with the options or values that are relevant to it., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Based on the provided HTML snippet, there are no form inputs related to "option2" explicitly shown. It seems like you're asking for a command to modify a HTML page input but didn't provide the necessary details for "option2." Can you please provide more details or clarify what action should be taken for "option2"?
Failed to execute an action Based on the provided HTML snippet, there are no form inputs related to "option2" explicitly shown. It seems like you're asking for a command to modify a HTML page input but didn't provide the necessary details for "option2." Can you please provide more details or clarify what action should be taken for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears there is no specific HTML input element provided for "option3" within the snippet you've given. This snippet only includes headings and paragraph tags without showing any form input elements like text inputs, checkboxes, radio buttons, or select dropdowns that would correspond to "option3." Could you provide more details or the part of the HTML that includes the input element for "option3"? This would help generate the correct command.
Failed to execute an action It appears there is no specific HTML input element provided for "option3" within the snippet you've given. This snippet only includes headings and paragraph tags without showing any form input elements like text inputs, checkboxes, radio buttons, or select dropdowns that would correspond to "option3." Could you provide more details or the part of the HTML that includes the input element for "option3"? This would help generate the correct command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: self.actions.modify_radio('option4', 'Highly Likely value')


or for a checkbox input:

plaintext
self.actions.modify_checkbox('option4', 'on')


Please provide the corresponding input element for "option4" or clarify the action and value expected for a precise command.
Failed to execute an action self.actions.modify_radio('option4', 'Highly Likely value')


or for a checkbox input:

plaintext
self.actions.modify_checkbox('option4', 'on')


Please provide the corresponding input element for "option4" or clarify the action and value expected for a precise command., error: invalid syntax (<string>, line 4)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34042 <-> row_number: 129
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 129 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: To generate a command, I need more information about the form elements related to the "option0" input such as type (checkbox, radio, text, select, range) and the choices or the value you'd like to set for "option0". Could you provide more details or the corresponding HTML section for "option0"?
Failed to execute an action To generate a command, I need more information about the form elements related to the "option0" input such as type (checkbox, radio, text, select, range) and the choices or the value you'd like to set for "option0". Could you provide more details or the corresponding HTML section for "option0"?, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that the provided HTML snippet does not include form input elements specifically related to "option1." The snippet provided gives a general context for a form, including instructions for completing it, but no actual form inputs such as radio buttons, checkboxes, or text inputs named "option1" are included in the provided HTML.

If you're looking to generate a command for a hypothetical input named "option1" that could be a part of this form, please provide details about the nature of this input (e.g., whether it's a text field, checkbox, radio button, select dropdown, or range slider) and its intended values. This additional information would allow for creating an appropriate command.
Failed to execute an action It appears that the provided HTML snippet does not include form input elements specifically related to "option1." The snippet provided gives a general context for a form, including instructions for completing it, but no actual form inputs such as radio buttons, checkboxes, or text inputs named "option1" are included in the provided HTML.

If you're looking to generate a command for a hypothetical input named "option1" that could be a part of this form, please provide details about the nature of this input (e.g., whether it's a text field, checkbox, radio button, select dropdown, or range slider) and its intended values. This additional information would allow for creating an appropriate command., error: unmatched ')' (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that there isn't enough HTML content provided to determine the type of input related to "option2" accurately. The provided snippet includes headings and paragraphs but lacks a visible input element for "option2" in the provided HTML. Therefore, I'm unable to generate a specific command without more context or visible input elements related to "option2". Could you provide more details or the specific input HTML code for "option2"?
Failed to execute an action It appears that there isn't enough HTML content provided to determine the type of input related to "option2" accurately. The provided snippet includes headings and paragraphs but lacks a visible input element for "option2" in the provided HTML. Therefore, I'm unable to generate a specific command without more context or visible input elements related to "option2". Could you provide more details or the specific input HTML code for "option2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: I'm sorry, but the provided HTML snippet does not include an input or any form elements related to the input name "option3." Thus, I'm unable to generate a specific command without knowing the type of input (text, checkbox, radio, select, range) associated with "option3". If you can provide more details or clarify the type of input, I'd be happy to help!
Failed to execute an action I'm sorry, but the provided HTML snippet does not include an input or any form elements related to the input name "option3." Thus, I'm unable to generate a specific command without knowing the type of input (text, checkbox, radio, select, range) associated with "option3". If you can provide more details or clarify the type of input, I'd be happy to help!, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems there was no continuation of the HTML code provided that includes an element with the name "option4" for me to generate a specific command. Could you please provide the relevant part of the HTML code that includes the input element named "option4"? This will help me generate the correct command to modify that specific input based on the options available (text, checkbox, radio, select, range).
Failed to execute an action It seems there was no continuation of the HTML code provided that includes an element with the name "option4" for me to generate a specific command. Could you please provide the relevant part of the HTML code that includes the input element named "option4"? This will help me generate the correct command to modify that specific input based on the options available (text, checkbox, radio, select, range)., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34001 <-> row_number: 88
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
input Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and doesn't contain an input element named "option0" to interact with directly. Without a complete HTML context that includes the `<input>`, `<select>`, or any relevant form element marked with the name "option0", generating an explicit modification command is not possible based on the information given.

If you could provide the portion of the HTML code that includes the form element with the name "option0", I would be better able to generate an appropriate command to modify its value.
Failed to execute an action It seems like the provided HTML snippet is incomplete and doesn't contain an input element named "option0" to interact with directly. Without a complete HTML context that includes the `<input>`, `<select>`, or any relevant form element marked with the name "option0", generating an explicit modification command is not possible based on the information given.

If you could provide the portion of the HTML code that includes the form element with the name "option0", I would be better able to generate an appropriate command to modify its value., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
input Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Given the provided HTML snippet, it seems incomplete and does not include form elements (like input, select, checkbox, etc.) related to the input name "option1". If "option1" is supposed to represent a form element where the user specifies how likely an author belongs to a given in-group based on a comment, without seeing the relevant form controls (such as radio buttons or a dropdown select), I cannot generate a precise command. 

Please provide the complete HTML including the element named "option1" and its type (e.g., radio, select) so I can generate the appropriate command.
Failed to execute an action Given the provided HTML snippet, it seems incomplete and does not include form elements (like input, select, checkbox, etc.) related to the input name "option1". If "option1" is supposed to represent a form element where the user specifies how likely an author belongs to a given in-group based on a comment, without seeing the relevant form controls (such as radio buttons or a dropdown select), I cannot generate a precise command. 

Please provide the complete HTML including the element named "option1" and its type (e.g., radio, select) so I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
input Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It seems like the provided HTML snippet is incomplete and does not include the form inputs related to the "option2" input name you've mentioned. Without the specific form inputs (e.g., radio buttons, select dropdowns, checkboxes, etc.), it's challenging to generate an accurate command.

Could you please provide more details about the form element related to "option2"? Knowing the type of input (radio, checkbox, select, text, or range) and the value you wish to set would be crucial for generating the correct command.
Failed to execute an action It seems like the provided HTML snippet is incomplete and does not include the form inputs related to the "option2" input name you've mentioned. Without the specific form inputs (e.g., radio buttons, select dropdowns, checkboxes, etc.), it's challenging to generate an accurate command.

Could you please provide more details about the form element related to "option2"? Knowing the type of input (radio, checkbox, select, text, or range) and the value you wish to set would be crucial for generating the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
input Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: It appears that there is insufficient information in the provided HTML snippet to determine the type of input control (e.g., radio button, checkbox, text input, etc.) for "option3". Could you please provide more details about the form control associated with "option3", such as the input tag or a broader section of the HTML code that includes the specific input element for "option3"? Without this information, it's challenging to generate the correct modification command.
Failed to execute an action It appears that there is insufficient information in the provided HTML snippet to determine the type of input control (e.g., radio button, checkbox, text input, etc.) for "option3". Could you please provide more details about the form control associated with "option3", such as the input tag or a broader section of the HTML code that includes the specific input element for "option3"? Without this information, it's challenging to generate the correct modification command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
input Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
Executing one action: Could you please provide more details or the specific input change you want to make? The provided HTML snippet includes instructions but does not contain a form element (like input, select, or radio) corresponding to "option4" that I can generate a command for.
Failed to execute an action Could you please provide more details or the specific input change you want to make? The provided HTML snippet includes instructions but does not contain a form element (like input, select, or radio) corresponding to "option4" that I can generate a command for., error: invalid syntax (<string>, line 1)
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Scalar Adjectives Identification` = = = = = = = = = = = = 
First instance id: 9463
instance_id: 9520 <-> row_number: 57
 --> inputs: ['adj_1', 'adj_2', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_4', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 57 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['Yes', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['No', 'No', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9505 <-> row_number: 42
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'neg_qual_ctrl', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 42 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9516 <-> row_number: 53
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'pos_qual_ctrl_3', 'pos_qual_ctrl_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 53 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'No', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_10" value="Naa">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9497 <-> row_number: 34
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_1', 'adj_6', 'adj_7', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_8', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_9', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 34 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'Yes', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'Yes', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'No', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_8" value="Naa">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9527 <-> row_number: 64
 --> inputs: ['neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'pos_qual_ctrl_4', 'pos_qual_ctrl_3', 'adj_10']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['Naa', 'No', 'No'], 'adj_5': ['Yes', 'No', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_10': ['Yes', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Naa', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 9496 <-> row_number: 33
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['Yes', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_1" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_4" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9558 <-> row_number: 95
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_4', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_3', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['No', 'No', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9545 <-> row_number: 82
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 82 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'Yes', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_8" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9621 <-> row_number: 158
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'adj_6', 'pos_qual_ctrl_5', 'pos_qual_ctrl_1', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 158 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9604 <-> row_number: 141
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_4', 'pos_qual_ctrl_1', 'neg_qual_ctrl', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_3', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 141 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'No', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 9598 <-> row_number: 135
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_3', 'pos_qual_ctrl_3', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 135 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'Naa', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 9495 <-> row_number: 32
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'pos_qual_ctrl_2', 'adj_7', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'adj_8', 'adj_9', 'pos_qual_ctrl_3', 'adj_10']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_7': ['Yes', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 9593 <-> row_number: 130
 --> inputs: ['neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'pos_qual_ctrl_5', 'pos_qual_ctrl_1', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 130 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9473 <-> row_number: 10
 --> inputs: ['adj_1', 'pos_qual_ctrl_3', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_10']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['No', 'No', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9569 <-> row_number: 106
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 106 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'Naa', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_1', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9500 <-> row_number: 37
 --> inputs: ['pos_qual_ctrl_2', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_2': ['No', 'No', 'Yes'], 'neg_qual_ctrl': ['No', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'Naa', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['Yes', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'Yes', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_1" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_6" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 9532 <-> row_number: 69
 --> inputs: ['pos_qual_ctrl_4', 'neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'No')
We are going to select this radio button: <input type="radio" name="adj_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_7', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9551 <-> row_number: 88
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_5', 'adj_4', 'neg_qual_ctrl', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'Naa', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_2" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 9486 <-> row_number: 23
 --> inputs: ['pos_qual_ctrl_3', 'adj_1', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'pos_qual_ctrl_1', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'Naa'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('neg_qual_ctrl', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_6', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_8', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_2', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_9', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9489 <-> row_number: 26
 --> inputs: ['adj_1', 'pos_qual_ctrl_4', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_7', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'Naa'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
input Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_1', 'No')
We are going to select this radio button: <input type="radio" name="adj_1" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
input Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
input Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
input Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_3', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_3', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
input Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_4', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
input Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
input Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
input Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
input Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
input Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
input Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
input Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
input Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
input Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
input Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
input Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
Executing one action: self.actions.modify_radio('adj_10', 'Not an adjective')
The input value (`Not an adjective`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'Not an adjective'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Script KD eval LONG V2 - disc result eval 1` = = = = = = = = = = = = 
First instance id: 25775
instance_id: 26004 <-> row_number: 229
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 229 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '0')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-2" value="0">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 25827 <-> row_number: 52
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [-1, 2], 'on-topic': [-1, -1], 'ordering': [-1, -1], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '3')
The input value (`3`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('on-topic', '3'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='radio' and @name='on-topic' and @value='3']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55acddcf05e3 <unknown>
#1 0x55acdd9b30b7 <unknown>
#2 0x55acdda00f53 <unknown>
#3 0x55acdda01051 <unknown>
#4 0x55acdda469c4 <unknown>
#5 0x55acdda27f1d <unknown>
#6 0x55acdda43b3d <unknown>
#7 0x55acdda27cc3 <unknown>
#8 0x55acdd9f30e4 <unknown>
#9 0x55acdd9f40ae <unknown>
#10 0x55acddcb6ce1 <unknown>
#11 0x55acddcbab7e <unknown>
#12 0x55acddca44b5 <unknown>
#13 0x55acddcbb7d6 <unknown>
#14 0x55acddc87dbf <unknown>
#15 0x55acddcde748 <unknown>
#16 0x55acddcde917 <unknown>
#17 0x55acddcef773 <unknown>
#18 0x7f98f9094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 25894 <-> row_number: 119
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 119 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [-2, 2], 'ordering': [1, 1], 'complete': [-2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '3')
The input value (`3`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('ordering', '3'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='radio' and @name='ordering' and @value='3']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x55acddcf05e3 <unknown>
#1 0x55acdd9b30b7 <unknown>
#2 0x55acdda00f53 <unknown>
#3 0x55acdda01051 <unknown>
#4 0x55acdda469c4 <unknown>
#5 0x55acdda27f1d <unknown>
#6 0x55acdda43b3d <unknown>
#7 0x55acdda27cc3 <unknown>
#8 0x55acdd9f30e4 <unknown>
#9 0x55acdd9f40ae <unknown>
#10 0x55acddcb6ce1 <unknown>
#11 0x55acddcbab7e <unknown>
#12 0x55acddca44b5 <unknown>
#13 0x55acddcbb7d6 <unknown>
#14 0x55acddc87dbf <unknown>
#15 0x55acddcde748 <unknown>
#16 0x55acddcde917 <unknown>
#17 0x55acddcef773 <unknown>
#18 0x7f98f9094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25848 <-> row_number: 73
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 73 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [-1, 2], 'complete': [-1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25897 <-> row_number: 122
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 122 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [1, 2], 'ordering': [0, 1], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25800 <-> row_number: 25
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 25 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 2], 'ordering': [-1, 2], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 26009 <-> row_number: 234
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 234 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [1, 2], 'ordering': [0, 1], 'complete': [0, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 25807 <-> row_number: 32
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [0, 1], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25969 <-> row_number: 194
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 194 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 1], 'ordering': [-1, 0], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 25815 <-> row_number: 40
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [1, 2], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 25977 <-> row_number: 202
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 202 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [1, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 25976 <-> row_number: 201
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 201 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 25922 <-> row_number: 147
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 147 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25914 <-> row_number: 139
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 139 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [1, 1], 'ordering': [1, 0], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25863 <-> row_number: 88
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, 0], 'on-topic': [1, 1], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-1" value="1">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25786 <-> row_number: 11
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 2], 'ordering': [2, 1], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25859 <-> row_number: 84
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 84 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 2], 'ordering': [2, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-1" value="1">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 25888 <-> row_number: 113
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 113 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [1, 1], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25844 <-> row_number: 69
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, -1], 'on-topic': [1, 2], 'ordering': [-2, 0], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25950 <-> row_number: 175
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, -1], 'on-topic': [0, 2], 'ordering': [-1, 1], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
input Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('achievable', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-1" value="1">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
input Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('on-topic', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-1" value="1">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
input Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
input Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Sherlock IMG 2 TXT Eval 15` = = = = = = = = = = = = 
First instance id: 17695
instance_id: 18027 <-> row_number: 332
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 332 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17748 <-> row_number: 53
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 53 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')


If the target value is different or there are more options to choose from that weren't included in the snippet you provided, please provide the correct value or further instructions.
Failed to execute an action self.actions.modify_radio('elicited_label_answer6', '3')


If the target value is different or there are more options to choose from that weren't included in the snippet you provided, please provide the correct value or further instructions., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')


Please provide the desired action or more details if you're looking for a different command.
Failed to execute an action self.actions.modify_radio('elicited_label_answer10', '3')


Please provide the desired action or more details if you're looking for a different command., error: unterminated string literal (detected at line 4) (<string>, line 4)
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17730 <-> row_number: 35
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: I'm sorry, but you haven't provided information on what command is expected or sufficient context around the HTML element's purpose. Specifically, without knowing which value or modification you want to apply to the radio button with the name `elicited_label_answer8`, it's impossible to generate an accurate command. Could you please provide more details or clarify the desired value for this radio input?
Failed to execute an action I'm sorry, but you haven't provided information on what command is expected or sufficient context around the HTML element's purpose. Specifically, without knowing which value or modification you want to apply to the radio button with the name `elicited_label_answer8`, it's impossible to generate an accurate command. Could you please provide more details or clarify the desired value for this radio input?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17910 <-> row_number: 215
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 215 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 3], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')


If you intended to select a different option or if there were specific criteria to choose an option, please provide that information for a more accurate command.
Failed to execute an action self.actions.modify_radio('elicited_label_answer4', '3')


If you intended to select a different option or if there were specific criteria to choose an option, please provide that information for a more accurate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17856 <-> row_number: 161
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 161 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17700 <-> row_number: 5
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [2, 1], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [3, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18145 <-> row_number: 450
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 450 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [2, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [1, 3], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')

We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')

We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 17971 <-> row_number: 276
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 276 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17794 <-> row_number: 99
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 99 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 3], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [3, 3], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


This command selects the value '3' for the radio input named "elicited_label_answer2". If you meant to select a different option or need further actions, please provide more details or options.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


This command selects the value '3' for the radio input named "elicited_label_answer2". If you meant to select a different option or need further actions, please provide more details or options., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 17975 <-> row_number: 280
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 280 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [1, 3], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 3], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18026 <-> row_number: 331
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 331 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18138 <-> row_number: 443
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 443 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 3], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


If there were specific values you intended to select, it's crucial to ensure the desired value is correctly indicated in the command for the appropriate action desired.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


If there were specific values you intended to select, it's crucial to ensure the desired value is correctly indicated in the command for the appropriate action desired., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 17870 <-> row_number: 175
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [3, 1], 'elicited_label_answer3': [3, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18025 <-> row_number: 330
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 330 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [1, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 18034 <-> row_number: 339
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 339 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 1], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [3, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 18084 <-> row_number: 389
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 389 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17872 <-> row_number: 177
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 177 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: Your input is not clear on what modification is desired for the given HTML element. To generate a valid command, please specify the desired value you would like to set for the input named "elicited_label_answer4".
Failed to execute an action Your input is not clear on what modification is desired for the given HTML element. To generate a valid command, please specify the desired value you would like to set for the input named "elicited_label_answer4"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18088 <-> row_number: 393
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 393 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [3, 1], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 17726 <-> row_number: 31
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')


This command assumes that the desired action is to select the radio button with the value "3". If a different action is intended, please provide the specific action or value that should be selected.
Failed to execute an action self.actions.modify_radio('elicited_label_answer2', '3')


This command assumes that the desired action is to select the radio button with the value "3". If a different action is intended, please provide the specific action or value that should be selected., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')


If you intended a different value to be set for "elicited_label_answer3", please replace '3' with the correct value.
Failed to execute an action self.actions.modify_radio('elicited_label_answer3', '3')


If you intended a different value to be set for "elicited_label_answer3", please replace '3' with the correct value., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17807 <-> row_number: 112
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 112 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
input Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
input Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
input Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
input Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
input Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
input Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
input Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
input Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
input Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
input Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `wikiHow step-goal linking pilot cleanse-url` = = = = = = = = = = = = 
First instance id: 27732
instance_id: 27736 <-> row_number: 4
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 0], 'candidate_1': [1, 1, 1], 'candidate_2': [1, 3, 1], 'candidate_3': [0, 2, 1], 'candidate_4': [0, 2, 1], 'candidate_5': [0, 0, 2], 'candidate_6': [1, 3, 2], 'candidate_7': [1, 1, 1], 'candidate_8': [1, 3, 0], 'candidate_9': [0, 3, 1], 'candidate_10': [2, 3, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0]}
instance_id: 27732 <-> row_number: 0
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 1], 'candidate_1': [1, 2, 1], 'candidate_2': [0, 2, 1], 'candidate_3': [0, 1, 1], 'candidate_4': [1, 1, 3], 'candidate_5': [1, 1, 2], 'candidate_6': [0, 0, 1], 'candidate_7': [1, 2, 1], 'candidate_8': [0, 1, 2], 'candidate_9': [3, 3, 3], 'candidate_10': [3, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 27747 <-> row_number: 15
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 2, 3], 'candidate_1': [0, 0, 0], 'candidate_2': [1, 0, 2], 'candidate_3': [2, 0, 2], 'candidate_4': [3, 3, 3], 'candidate_5': [1, 1, 2], 'candidate_6': [2, 2, 0], 'candidate_7': [1, 0, 0], 'candidate_8': [3, 3, 3], 'candidate_9': [2, 0, 2], 'candidate_10': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27804 <-> row_number: 72
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 72 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 3, 3], 'candidate_1': [1, 3, 3], 'candidate_2': [0, 3, 2], 'candidate_3': [1, 0, 0], 'candidate_4': [1, 3, 3], 'candidate_5': [0, 3, 1], 'candidate_6': [0, 0, 3], 'candidate_7': [2, 1, 3], 'candidate_8': [1, 0, 1], 'candidate_9': [0, 3, 3], 'candidate_10': [1, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
input Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
input Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
input Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
input Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
input Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
input Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
input Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
input Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27748 <-> row_number: 16
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 3], 'candidate_1': [1, 1, 3], 'candidate_2': [1, 0, 3], 'candidate_3': [0, 0, 3], 'candidate_4': [0, 1, 1], 'candidate_5': [0, 0, 0], 'candidate_6': [0, 1, 0], 'candidate_7': [0, 0, 2], 'candidate_8': [0, 1, 3], 'candidate_9': [3, 2, 3], 'candidate_10': [0, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
input Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
input Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
input Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
